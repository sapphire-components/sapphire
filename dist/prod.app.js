/*! prod.app.js || Version: 5.5.225 || Generated: Fri Oct 03 2025 12:01:15 GMT+0300 (Itä-Euroopan kesäaika) */
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/components/index.scss":
/*!***********************************!*\
  !*** ./src/components/index.scss ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://sapphire/./src/components/index.scss?");

/***/ }),

/***/ "./src/app.js":
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("__webpack_require__(/*! ./components/index.scss */ \"./src/components/index.scss\");\n\n//Import all JS files\nconst requireAll = r => r.keys().forEach(r);\nrequireAll(__webpack_require__(\"./src/components sync recursive \\\\.js$\"));\n\n//# sourceURL=webpack://sapphire/./src/app.js?");

/***/ }),

/***/ "./src/components/00-settings/config.js":
/*!**********************************************!*\
  !*** ./src/components/00-settings/config.js ***!
  \**********************************************/
/***/ (function() {

eval("SapphireWidgets = window.SapphireWidgets = window.SapphireWidgets || {};\n\n//# sourceURL=webpack://sapphire/./src/components/00-settings/config.js?");

/***/ }),

/***/ "./src/components/03-elements/script.js":
/*!**********************************************!*\
  !*** ./src/components/03-elements/script.js ***!
  \**********************************************/
/***/ (function() {

eval("/* Component Textarea */\n(function($, window, document, SapphireWidgets) {\n  \n  $(document).ready(function() {\n    CallTextAreaAutoResize();\n  });\n\n  window.CallTextAreaAutoResize = function prepareTextAreaAutoResize(TextAreaId){\n    \n    if(TextAreaId==undefined){\n      var textAreaInput = $('textarea');\n    }else{\n      var textAreaInput = $('#'+TextAreaId);\n    }\n    textAreaInput.each(function(){\n      $(this).attr('rows',2);\n\n      $(this)[0].style.minHeight = '70px';\n      resizeTextArea($(this)[0]);\n    });\n\n    textAreaInput.on('input', function(){\n      resizeTextArea($(this)[0]);\n    });\n  }\n\n  function resizeTextArea ($textAreaInput) {\n    if($textAreaInput.scrollHeight == 0){\n      $textAreaInput.style.height = '70px';\n    }else{\n      $textAreaInput.style.height = 'auto';\n      $textAreaInput.style.height = $textAreaInput.scrollHeight + 'px';\n    }\n  }\n})(jQuery, window, document, SapphireWidgets);\n\n//# sourceURL=webpack://sapphire/./src/components/03-elements/script.js?");

/***/ }),

/***/ "./src/components/05-components/layout/layout-base.js":
/*!************************************************************!*\
  !*** ./src/components/05-components/layout/layout-base.js ***!
  \************************************************************/
/***/ (function() {

eval("/* Component LayoutBase */\n(function($, window, document, SapphireWidgets) {\n\tvar create = function(config) {\n\t\twindow[config.widgetId] = new LayoutBase(config);\n\t\tSapphireWidgets.LayoutBase.widgetId = config.widgetId;\n\t};\n\n\tvar openSidebarIframe = function(duration) {\n\t\twindow[SapphireWidgets.LayoutBase.widgetId].openSidebarIframe(duration);\n\t};\n\n\tvar closeSidebarIframe = function(duration) {\n\t\twindow[SapphireWidgets.LayoutBase.widgetId].closeSidebarIframe(duration);\n\t};\n\n\tvar scrollToElement = function($element, offset = 0) {\n\t\tvar $targetElement = $element;\n\n\t\tif (!!$targetElement.length) {\n\t\t\tvar scrollToOffsetInterval;\n\n\t\t\tscrollToOffsetInterval = setInterval(function() {\n\t\t\t\tif (window[SapphireWidgets.LayoutBase.widgetId].getThresholds().secondaryThreshold > 0) {\n\t\t\t\t\tclearInterval(scrollToOffsetInterval);\n\n\t\t\t\t\tlet targetElementOffsetTop = $targetElement.offset().top;\n\n\t\t\t\t\tconst isFixed = $('.LayoutBase-secondary').hasClass('isFixed');\n\t\t\t\t\tconst isEmergency = !!$('.LayoutBase-emergency').text();\n\n\t\t\t\t\tconst headerHeight = $('.SapphireHeader').height();\n\t\t\t\t\tconst secondaryHeight = $('.LayoutBase-secondary').outerHeight();\n\t\t\t\t\tconst emergencyHeight = isEmergency ? $('.LayoutBase-emergency').height() : 0;\n\n\t\t\t\t\t//const secondaryFixed = isFixed ? secondaryHeight : secondaryHeight - 26;\n\t\t\t\t\ttargetElementOffsetTop = targetElementOffsetTop - (headerHeight + secondaryHeight + emergencyHeight);\n\n\t\t\t\t\t$('body, html').scrollTop(targetElementOffsetTop - 16);\n\t\t\t\t}\n\t\t\t}, 250);\n\t\t}\n\t};\n\n\tvar LayoutBase = function(config) {\n\t\tvar _this = this;\n\t\tthis.layoutBaseRedrawTimer = 0;\n\t\tthis.hasHeader = config.hasHeader;\n\t\tthis.isExpandable = config.isExpandable;\n\t\tthis.isTopWindow = window.top === window.self ? true : false;\n\t\tthis.$widget = $('#' + config.widgetId);\n\t\tthis.$wrapper = this.$widget.find('.LayoutBase-Wrapper');\n\t\tthis.$spacer = this.$widget.find('.LayoutBase-spacer');\n\t\tthis.$mainMenu = this.$widget.find('.LayoutBase-MainMenu');\n\t\tthis.$header = this.$widget.find('.LayoutBase-header');\n\t\tthis.$headerBody = this.$widget.find('.SapphireHeader-body');\n\t\tthis.$primaryMenu = this.$widget.find('.LayoutBase-primary-menu');\n\t\tthis.$emergency = this.$widget.find('.LayoutBase-emergency');\n\t\tthis.$secondary = this.$widget.find('.LayoutBase-secondary');\n\t\tthis.$secondaryMenu = this.$widget.find('.LayoutBase-secondary-menu');\n\t\tthis.$iframeSidebar = this.$widget.find('.LayoutBase-iframesidebar');\n\t\tthis.$headerAdditionalContent = this.$widget.find('.SapphireHeader-additional-content');\n\t\tthis.$topfixedContent = this.$widget.find('.LayoutBase-topfixedcontent');\n\t\tthis.$bottomfixedContent = this.$widget.find('.LayoutBase-bottomfixedcontent');\n\t\tthis.$mainContent = this.$widget.find('.LayoutBase-MainContent');\n\t\tthis.extraPaddingEmergency = 0;\n\t\tthis.extraPaddingSecondary = 0;\n\t\tthis.setupWindowEvents();\n\t\tthis.$iframeSidebar.append('<div class=\"lds-ring 1\"><div></div><div></div><div></div><div></div></div>');\n\n\t\t$(function() {\n\t\t\t$('body').addClass('LayoutBase');\n\t\t\tif (_this.isTopWindow) {\n\t\t\t\t$('body').css('overflow-y', 'scroll');\n\t\t\t}\n\t\t});\n\n\t\t$(window).load(function() {\n\t\t\t$('body').click();\n\t\t\t$(window).scroll();\n\n\t\t\t_this.$iframeSidebar.find('.lds-ring').fadeOut();\n\t\t});\n\t};\n\n\tLayoutBase.prototype.setupWindowEvents = function() {\n\t\tvar _this = this;\n\t\tvar cursorPositon = 0;\n\n\t\t$(window).resize(function() {\n\t\t\t_this.updateThresholds();\n\t\t\t_this.handleOptionalContainers();\n\t\t\t_this.handleLayoutTopPadding();\n\t\t\t_this.handleLayoutBottomPadding();\n\t\t});\n\n\t\t$(window).scroll(function() {\n\t\t\tvar newPosition = $(window).scrollTop();\n\n\t\t\twindow.clearTimeout(_this.layoutBaseRedrawTimer);\n\t\t\t_this.layoutBaseRedrawTimer = window.setTimeout(function() {\n\t\t\t\t_this.updateThresholds();\n\t\t\t\t_this.handleOptionalContainers();\n\t\t\t\t_this.handleLayoutTopPadding();\n\t\t\t\t_this.handleLayoutBottomPadding();\n\t\t\t\t_this.handleManageQueueCard(cursorPositon, newPosition);\n\t\t\t\tcursorPositon = newPosition;\n\t\t\t}, 100);\n\t\t});\n\t};\n\n\tLayoutBase.prototype.handleOptionalContainers = function() {\n\t\t/*const scrollTop = $(window).scrollTop();\n\t\tconst isEmergency = !!$('.LayoutBase-emergency').text();*/\n\t};\n\n\tLayoutBase.prototype.handleLayoutTopPadding = function() {\n\t\tvar paddingTop = this.contentThreshold + this.extraPaddingEmergency + this.extraPaddingSecondary;\n\t\tthis.$spacer.stop().animate(\n\t\t\t{\n\t\t\t\theight: paddingTop,\n\t\t\t},\n\t\t\t0,\n\t\t\t'linear'\n\t\t);\n\t\tif (this.$topfixedContent.length === 1) {\n\t\t\tthis.$topfixedContent.css({\n\t\t\t\twidth: $('.LayoutBase-MainContent').width(),\n\t\t\t\ttop: this.topfixedContentThreshold + 'px',\n\t\t\t});\n\t\t}\n\t};\n\n\tLayoutBase.prototype.handleLayoutBottomPadding = function() {\n\t\tif (this.$bottomfixedContent.length === 1) {\n\t\t\tif ($('body')[0].scrollHeight > $('body').height()) {\n\t\t\t\tvar bottomFixedHeight = this.$bottomfixedContent.outerHeight(true);\n\t\t\t\tthis.$wrapper.addClass('hasFixedBottom').css('padding-bottom', bottomFixedHeight + 'px');\n\t\t\t\tthis.$bottomfixedContent.css({\n\t\t\t\t\twidth: $('.LayoutBase-MainContent').outerWidth(true),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.$wrapper.removeClass('hasFixedBottom').css('padding-bottom', '');\n\t\t\t\tthis.$bottomfixedContent.css({\n\t\t\t\t\twidth: '',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tLayoutBase.prototype.updateThresholds = function() {\n\t\tvar mainMenuHeight = this.$mainMenu.outerHeight(true) || 0;\n\t\tvar headerBodyHeight = this.$headerBody.outerHeight(true) || this.$header.outerHeight(true) || 0;\n\t\tvar topfixedContentHeight = this.$topfixedContent.outerHeight(true) || 0;\n\t\tvar primaryMenuHeight = this.$primaryMenu.outerHeight(true) || 0;\n\t\tvar emergencyHeight = this.$emergency.outerHeight(true) || 0;\n\t\tthis.topfixedContentThreshold = mainMenuHeight + headerBodyHeight;\n\t\tthis.contentThreshold = mainMenuHeight + headerBodyHeight + topfixedContentHeight;\n\t\tthis.emergencyThreshold = mainMenuHeight + headerBodyHeight + topfixedContentHeight + primaryMenuHeight;\n\t\tthis.secondaryThreshold =\n\t\t\tmainMenuHeight + headerBodyHeight + topfixedContentHeight + primaryMenuHeight + emergencyHeight;\n\t};\n\n\tLayoutBase.prototype.getThresholds = function() {\n\t\treturn {\n\t\t\ttopfixedContentThreshold: this.topfixedContentThreshold,\n\t\t\tcontentThreshold: this.contentThreshold,\n\t\t\temergencyThreshold: this.emergencyThreshold,\n\t\t\tsecondaryThreshold: this.secondaryThreshold,\n\t\t};\n\t};\n\n\tLayoutBase.prototype.openSidebarIframe = function(duration_in) {\n\t\tvar duration = duration_in >= 0 ? duration_in : 100;\n\t\tthis.$iframeSidebar.animate(\n\t\t\t{\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t\tduration\n\t\t);\n\t\t$('body')\n\t\t\t.css('overflow-y', 'scroll')\n\t\t\t.click();\n\t};\n\n\tLayoutBase.prototype.closeSidebarIframe = function(duration_in) {\n\t\tvar duration = duration_in >= 0 ? duration_in : 100;\n\t\tvar targetWidth = this.isExpandable ? 40 : 262;\n\t\tthis.$iframeSidebar.animate(\n\t\t\t{\n\t\t\t\twidth: targetWidth,\n\t\t\t},\n\t\t\tduration\n\t\t);\n\t\t$('body').css('overflow-y', 'scroll');\n\t};\n\n\tLayoutBase.prototype.handleManageQueueCard = function(cursorPositon, newPosition) {\n\t\tconst $manageQueue = $('.ManageQueueContainer');\n\n\t\tif ($manageQueue.length) {\n\t\t\tif (newPosition > cursorPositon) {\n\t\t\t\t$manageQueue.addClass('ManageQueueContainer--closed');\n\t\t\t} else if (newPosition < cursorPositon) {\n\t\t\t\t$manageQueue.removeClass('ManageQueueContainer--closed');\n\t\t\t}\n\t\t}\n\t};\n\n\tSapphireWidgets.LayoutBase = {\n\t\tcreate,\n\t\tcloseSidebarIframe,\n\t\topenSidebarIframe,\n\t\tscrollToElement,\n\t};\n})(jQuery, window, document, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/layout/layout-base.js?");

/***/ }),

/***/ "./src/components/05-components/layout/layout-blank.js":
/*!*************************************************************!*\
  !*** ./src/components/05-components/layout/layout-blank.js ***!
  \*************************************************************/
/***/ (function() {

eval("/* Component LayoutBlank */\n$(function () {\n\tif (window.frameElement) {\n\t\tif (!!$(this.frameElement).closest('.MainInteractiveCard').length) {\n\t\t\t$('.LayoutBlank.Page').addClass('MainInteractiveCard');\n\t\t}\n\t}\n});\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/layout/layout-blank.js?");

/***/ }),

/***/ "./src/components/05-components/layout/layout-emergency.js":
/*!*****************************************************************!*\
  !*** ./src/components/05-components/layout/layout-emergency.js ***!
  \*****************************************************************/
/***/ (function() {

eval("(function($, window, document, SapphireWidgets) {\n\tconst ForwardPatientComponent = () => {\n\t\tconst $allOptions = $('.ForwardLocationsContent');\n\t\tconst $multiple = $('.ForwardLocationsDiv');\n\t\tconst $single = $('.SingleLocation');\n\n\t\t$('body').mouseup(function(e) {\n\t\t\tconst notClickInAllOptions = !$allOptions.is(e.target) && $allOptions.has(e.target).length === 0;\n\t\t\tconst notClickInMultiple = !$multiple.is(e.target) && $multiple.has(e.target).length === 0;\n\t\t\tconst notClickInSingle = !$single.is(e.target) && $single.has(e.target).length === 0;\n\t\t\tconst isOpen = $multiple.is(':visible');\n\n\t\t\tif (notClickInAllOptions && notClickInMultiple && notClickInSingle && isOpen) {\n\t\t\t\t$multiple.click();\n\t\t\t}\n\t\t});\n\t};\n\n\tSapphireWidgets.LayoutEmergency = {\n\t\tForwardPatientComponent,\n\t};\n})(jQuery, window, document, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/layout/layout-emergency.js?");

/***/ }),

/***/ "./src/components/05-components/layout/layout-popup.js":
/*!*************************************************************!*\
  !*** ./src/components/05-components/layout/layout-popup.js ***!
  \*************************************************************/
/***/ (function() {

eval("/* Component LayoutPopup */\n(function($, window, document, SapphireWidgets) {\n\tvar popupWidth;\n\tvar popupMinWidth;\n\tvar popupHeight;\n\tvar popupMinHeight;\n\tvar popupMaxHeight;\n\tvar popupWidthPercentage;\n\tvar layoutPopupResizeTimer;\n\n\tvar $popup = $('.LayoutPopup');\n\tvar $osPopup = window.parent.$('.os-internal-Popup.os-internal-ui-dialog');\n\tvar $osPopupContent = window.parent.$('.os-internal-ui-dialog-content.os-internal-ui-widget-content');\n\tvar $overlay = window.parent.$('.os-internal-ui-widget-overlay');\n\tvar popupSize;\n\tvar paddingBody;\n\n\tconst BODY_PADDING_TOP_BOTTOM = 32;\n\n\tconst create = function(config) {\n\t\tSapphireWidgets.LayoutPopup.config = config;\n\t\tpopupSize = SapphireWidgets.LayoutPopup.config.PopupSize;\n\t\tpaddingBody = config.noContentPadding ? 0 : BODY_PADDING_TOP_BOTTOM;\n\n\t\t$(function() {\n\t\t\t$('body').addClass('LayoutPopup'); // because datetimerangepicker is attached to body\n\n\t\t\tif (SapphireWidgets.LayoutPopup.config.isTouch) {\n\t\t\t\t$popup.addClass('isTouch');\n\t\t\t\t$('body').addClass('isTouch'); // because select2 is attached to body\n\t\t\t}\n\n\t\t\tvar observer = new MutationObserver(function(mutations) {\n\t\t\t\tmutations.forEach(function(mutation, index) {\n\t\t\t\t\t// Avoid to redraw the dialog if it is one the following popups\n\t\t\t\t\tif (\n\t\t\t\t\t\tSapphireWidgets.PopupsToAvoidMutations &&\n\t\t\t\t\t\tSapphireWidgets.PopupsToAvoidMutations.some(e => $(`.${e}`).length)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tredrawDialogWindow();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tobserver.observe(document.body, {\n\t\t\t\tchildList: true,\n\t\t\t\tsubtree: true,\n\t\t\t\tattributes: false,\n\t\t\t});\n\n\t\t\t$('body').css('visibility', 'hidden');\n\t\t});\n\n\t\t$(window).load(function() {\n\t\t\t$(this.frameElement).css({\n\t\t\t\twidth: '100%',\n\t\t\t\theight: '100%',\n\t\t\t});\n\n\t\t\tsetTimeout(function() {\n\t\t\t\tresizeDialog();\n\t\t\t\tresizeContent();\n\t\t\t\t$('body').css('visibility', 'visible');\n\t\t\t}, 150);\n\n\t\t\tosAjaxBackend.BindAfterAjaxRequest(SapphireWidgets.LayoutPopup.redrawDialogWindow);\n\t\t});\n\n\t\t$(window.parent)\n\t\t\t.off('resize.LayoutPopup')\n\t\t\t.on('resize.LayoutPopup', function() {\n\t\t\t\tredrawDialogWindow();\n\t\t\t});\n\t};\n\n\tconst redrawDialogWindow = function() {\n\t\tclearTimeout(layoutPopupResizeTimer);\n\t\tlayoutPopupResizeTimer = setTimeout(function() {\n\t\t\tresizeDialog();\n\t\t\tresizeContent();\n\t\t\t$('body').css('visibility', 'visible');\n\t\t}, 300);\n\t};\n\n\tconst resizeDialog = function() {\n\t\tif (SapphireWidgets.LayoutPopup.config.hasClose) {\n\t\t\twindow.parent.$('.os-internal-ui-dialog-titlebar').show();\n\n\t\t\tif (window.top._iframePopup != undefined || false) {\n\t\t\t\tconst $closeButton = window.parent.$('.os-internal-ui-dialog-titlebar-close');\n\n\t\t\t\t$closeButton.removeAttr('href');\n\t\t\t\t$closeButton.off('click').on('click', () => window.top._iframePopup.SapphireWidgets.SapphirePopup.close());\n\t\t\t}\n\t\t}\n\n\t\tif (window.top.$('body').hasClass('LayoutBase')) {\n\t\t\twindow.top.$('body').css({\n\t\t\t\toverflowY: 'hidden',\n\t\t\t});\n\t\t}\n\n\t\t$overlay.width('100%');\n\n\t\tcalcWidthPercentage(popupSize, $osPopupContent);\n\n\t\t$osPopup.css({\n\t\t\tleft: 'unset',\n\t\t\ttop: 'unset',\n\t\t\theight: 'auto',\n\t\t\tminWidth: popupMinWidth + 'px',\n\t\t\twidth: popupWidth + 'px',\n\t\t});\n\t};\n\n\tconst resizeContent = function() {\n\t\tvar $body = $('.LayoutPopup__body__content');\n\t\tvar contentScrollTop = $body.scrollTop();\n\n\t\tif (popupSize === 'Small' && $('.daterangepicker:visible').length > 0) {\n\t\t\t// skip the reset of .LayoutPopup__body__content\n\t\t} else {\n\t\t\t$body.css({\n\t\t\t\theight: 'auto',\n\t\t\t});\n\t\t}\n\n\t\tlet bodyContent = paddingBody\n\t\t\t? $('.LayoutPopup__body__content')[0].scrollHeight\n\t\t\t: $('.LayoutPopup__body__content').height();\n\n\t\tvar headerHeight = $('.LayoutPopup__header').innerHeight() || 0;\n\t\tvar introHeight = $('.LayoutPopup__intro').innerHeight() || 0;\n\t\tvar bodyHeight = bodyContent || 0;\n\t\tvar footerHeight = $('.LayoutPopup__footer').innerHeight() || 0;\n\t\tvar contentHeight = headerHeight + introHeight + bodyHeight + footerHeight + paddingBody;\n\t\tvar dialogHeight = window.parent.$('.os-internal-Popup.os-internal-ui-dialog').outerHeight();\n\t\tconst windowHeight = $(window.parent).height();\n\n\t\tif (popupSize === 'Small') {\n\t\t\tvar parentHeight = $(window.parent).height();\n\n\t\t\tif (contentHeight > parentHeight) {\n\t\t\t\t$osPopupContent.height(parentHeight - 70);\n\t\t\t\t$body.height($osPopupContent.height() - paddingBody - 40 - 40);\n\t\t\t} else {\n\t\t\t\t$osPopupContent.height(contentHeight);\n\t\t\t}\n\t\t} else {\n\t\t\tif (contentHeight < dialogHeight && SapphireWidgets.LayoutPopup.config.isFixedHeight) {\n\t\t\t\tvar forcedBodyHeight = dialogHeight - headerHeight - introHeight - footerHeight - paddingBody;\n\t\t\t\t$body.height(forcedBodyHeight);\n\t\t\t} else if (contentHeight < dialogHeight) {\n\t\t\t\t$osPopupContent.height(contentHeight);\n\t\t\t\tif (contentHeight < popupMinHeight) {\n\t\t\t\t\tvar diference = popupMinHeight - contentHeight;\n\t\t\t\t\t$body.height(bodyHeight + diference);\n\t\t\t\t}\n\t\t\t} else if (contentHeight >= dialogHeight && SapphireWidgets.LayoutPopup.config.isFixedHeight) {\n\t\t\t\tvar forcedBodyHeight = dialogHeight - headerHeight - introHeight - footerHeight - paddingBody;\n\t\t\t\t$body.height(forcedBodyHeight);\n\t\t\t} else if (contentHeight >= dialogHeight) {\n\t\t\t\tif (contentHeight > popupMaxHeight) {\n\t\t\t\t\t$osPopupContent.height(popupMaxHeight);\n\t\t\t\t\tvar forcedBodyHeight = popupMaxHeight - headerHeight - introHeight - footerHeight - paddingBody;\n\t\t\t\t\t$body.height(forcedBodyHeight);\n\t\t\t\t} else {\n\t\t\t\t\t$osPopupContent.height(contentHeight);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn('Unexpected combination...');\n\t\t\t}\n\t\t}\n\n\t\t// Handle when DateTimeRangePicker is opened\n\t\tvar dateRangePicker = $('.daterangepicker:visible');\n\t\tif (dateRangePicker.length === 1) {\n\t\t\tif (dateRangePicker[0].getBoundingClientRect().bottom > dialogHeight) {\n\t\t\t\tvar difference = dateRangePicker[0].getBoundingClientRect().bottom - dialogHeight;\n\t\t\t\tvar bodyHeight = $('.LayoutPopup__body__content').outerHeight(true);\n\n\t\t\t\t$('.LayoutPopup__body__content').height(bodyHeight + difference + paddingBody);\n\t\t\t\t$osPopupContent.height($('body')[0].scrollHeight);\n\n\t\t\t\tconst popupTotalHeight = $osPopupContent.height();\n\t\t\t\tconst newContentHeight = $('.LayoutPopup__body').outerHeight(true) + headerHeight + introHeight + footerHeight;\n\n\t\t\t\tif (windowHeight < 720) {\n\t\t\t\t\tconst coords = dateRangePicker[0].getBoundingClientRect();\n\t\t\t\t\tvar point = window.parent.scrollY + coords.top - coords.height;\n\t\t\t\t\tdateRangePicker.addClass('drop-up').css('top', point);\n\t\t\t\t} else if (windowHeight < 980 && newContentHeight > popupTotalHeight) {\n\t\t\t\t\t$osPopupContent.css({\n\t\t\t\t\t\tmaxHeight: newContentHeight + 'px',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$body.scrollTop(contentScrollTop);\n\t};\n\n\tconst increaseHeight = function(diference) {\n\t\t$osPopupContent.height($osPopupContent.height() + diference);\n\t};\n\n\tconst scrollToElement = function($element) {\n\t\tvar $targetElement = $element;\n\t\tif (!!$targetElement.length) {\n\t\t\tvar scrollToOffsetInterval;\n\t\t\tscrollToOffsetInterval = setInterval(function() {\n\t\t\t\tclearInterval(scrollToOffsetInterval);\n\t\t\t\tvar headerHeight = $('.LayoutPopup__header').outerHeight(true) || 0;\n\t\t\t\tvar introHeight = $('.LayoutPopup__intro').outerHeight(true) || 0;\n\t\t\t\tvar currentBodyScroll = $('.LayoutPopup__body__content')[0].scrollTop || 0;\n\t\t\t\tvar targetElementOffsetTop = $targetElement.offset().top - headerHeight - introHeight + currentBodyScroll - 20;\n\t\t\t\t$('.LayoutPopup__body__content').scrollTop(targetElementOffsetTop);\n\t\t\t}, 250);\n\t\t}\n\t};\n\n\tconst calcWidthPercentage = () => {\n\t\tconst windowHeight = $(window.parent).height();\n\t\tconst windowWidth = $(window.parent).width();\n\n\t\tif (popupSize === 'Small') {\n\t\t\tlet percentage = 0.33;\n\n\t\t\tif (windowWidth <= 1024) percentage = 0.5;\n\t\t\telse if (windowWidth > 1024 && windowWidth <= 1440) percentage = 0.4;\n\n\t\t\tpopupWidth = parseInt(windowWidth * percentage);\n\t\t\tpopupMinWidth = 400;\n\t\t} else if (popupSize === 'Medium') {\n\t\t\tif (windowWidth <= 1024) popupWidthPercentage = 0.8;\n\t\t\telse {\n\t\t\t\tswitch (SapphireWidgets.LayoutPopup.config.PopupWidth) {\n\t\t\t\t\tcase 'XSmall':\n\t\t\t\t\t\tpopupMinWidth = 200;\n\t\t\t\t\t\tpopupWidthPercentage = 0.2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Small':\n\t\t\t\t\t\tpopupMinWidth = 300;\n\t\t\t\t\t\tpopupWidthPercentage = 0.3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Medium':\n\t\t\t\t\t\tpopupMinWidth = 700;\n\t\t\t\t\t\tpopupWidthPercentage = 0.6;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tpopupMinWidth = 700;\n\t\t\t\t\t\tpopupWidthPercentage = 0.7;\n\t\t\t\t}\n\n\t\t\t\tpopupWidthPercentage = SapphireWidgets.LayoutPopup.config.isTouch ? 0.8 : popupWidthPercentage;\n\t\t\t}\n\n\t\t\tpopupWidth = parseInt(windowWidth * popupWidthPercentage);\n\t\t\tpopupMinHeight = 100;\n\t\t\tpopupMaxHeight = SapphireWidgets.LayoutPopup.config.isTouch\n\t\t\t\t? parseInt(windowHeight * 0.9)\n\t\t\t\t: parseInt(windowHeight * 0.7);\n\n\t\t\tif (SapphireWidgets.LayoutPopup.config.isFixedHeight) popupHeight = popupMaxHeight;\n\t\t\telse popupHeight = window.parent.$('.os-internal-Popup.os-internal-ui-dialog').outerHeight();\n\n\t\t\t$osPopupContent.css({\n\t\t\t\tmaxHeight: popupMaxHeight + 'px',\n\t\t\t\tminHeight: popupMinHeight + 'px',\n\t\t\t\theight: popupHeight + 'px',\n\t\t\t});\n\t\t} else if (popupSize === 'Large') {\n\t\t\tpopupMinWidth = parseInt(windowWidth * 0.8);\n\t\t\tpopupMaxHeight = parseInt(windowHeight * 0.9);\n\t\t} else if (popupSize === 'Fixed') {\n\t\t\tpopupWidth = SapphireWidgets.SapphirePopup.popupWidth;\n\t\t\tpopupMinWidth = SapphireWidgets.SapphirePopup.popupWidth;\n\t\t}\n\t};\n\n\tSapphireWidgets.LayoutPopup = {\n\t\tcreate,\n\t\tresizeDialog,\n\t\tresizeContent,\n\t\tincreaseHeight,\n\t\tredrawDialogWindow,\n\t\tscrollToElement,\n\t};\n})(jQuery, window, document, SapphireWidgets);\n\n$(window).unload(function() {\n\tif (!!$('.LayoutPopup').length) {\n\t\twindow.top.$('body').css({\n\t\t\toverflowY: 'scroll',\n\t\t});\n\t}\n});\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/layout/layout-popup.js?");

/***/ }),

/***/ "./src/components/05-components/layout/subLayoutLeft.js":
/*!**************************************************************!*\
  !*** ./src/components/05-components/layout/subLayoutLeft.js ***!
  \**************************************************************/
/***/ (function() {

eval("/* Component SubLayoutLeft */\n(function($, window, document, SapphireWidgets) {\n\tconst create = function() {};\n\n\tSapphireWidgets.SubLayoutLeft = {\n\t\tcreate,\n\t};\n})(jQuery, window, document, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/layout/subLayoutLeft.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/actions-menu/scripts.js":
/*!*********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/actions-menu/scripts.js ***!
  \*********************************************************************/
/***/ (function() {

eval("/* Component ActionsMenu */\n(function($, window, SapphireWidgets) {\n\tvar create = function(config) {\n\t\tvar $triggerElement = $('#' + config.triggerElement);\n\t\tvar $contentElement = $('#' + config.contentElement);\n\n\t\tif ($contentElement.text().length < 1) {\n\t\t\t$triggerElement.hide();\n\t\t}\n\n\t\t$(function() {\n\t\t\t// inside a document ready due to sapphire popup binded events\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tvar position = config.position;\n\t\t\t\tif (config.locale === 'AR') {\n\t\t\t\t\tswitch (config.position) {\n\t\t\t\t\t\tcase 'right':\n\t\t\t\t\t\t\tposition = 'left';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'left':\n\t\t\t\t\t\t\tposition = 'right';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'bottom-left':\n\t\t\t\t\t\t\tposition = 'bottom-right';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'bottom-right':\n\t\t\t\t\t\t\tposition = 'bottom-left';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'top-left':\n\t\t\t\t\t\t\tposition = 'top-right';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'top-right':\n\t\t\t\t\t\t\tposition = 'top-left';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$triggerElement.tooltipster({\n\t\t\t\t\tcontent: $('<section/>').append($contentElement.clone(true, true)),\n\t\t\t\t\ttrigger: config.triggerEvent,\n\t\t\t\t\tposition: position,\n\t\t\t\t\tmaxWidth: config.maxWidth,\n\t\t\t\t\ttheme:\n\t\t\t\t\t\t'tooltipster-location--' +\n\t\t\t\t\t\tconfig.location +\n\t\t\t\t\t\t' ActionsMenu-tooltip Padding--' +\n\t\t\t\t\t\tconfig.padding +\n\t\t\t\t\t\t' Border--' +\n\t\t\t\t\t\tconfig.border,\n\t\t\t\t});\n\t\t\t\t$contentElement.remove();\n\t\t\t}, 500);\n\t\t});\n\t};\n\n\tSapphireWidgets.ActionsMenu = {\n\t\tcreate,\n\t};\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/actions-menu/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/button-link/scripts.js":
/*!********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/button-link/scripts.js ***!
  \********************************************************************/
/***/ (function() {

eval("/* Component ButtonLink */\n(function($, window, SapphireWidgets) {\n\tconst create = config => {\n\t\t$(document).ready(function() {\n\t\t\tconst $widget = $(`#${config.widgetId} .ButtonClick`);\n\n\t\t\t$widget.off('click').on('click', function(e) {\n\t\t\t\tconst _target = $(e.target);\n\n\t\t\t\tif (_target.closest('.ButtonClick.click').length == 0) {\n\t\t\t\t\t$('.ButtonClick.click').removeClass('click');\n\t\t\t\t\t$(this).addClass('click');\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\tSapphireWidgets.ButtonLink = { create };\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/button-link/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/card-charts/scripts.js":
/*!********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/card-charts/scripts.js ***!
  \********************************************************************/
/***/ (function() {

eval("/* Component CardCharts */\nSapphireWidgets.CardChartsPopup = () => {\n\t$(document).ready(function() {\n\t\twindow['CardChartsScroll'] = {};\n\t\tconst isInsideIframe = window.frameElement != undefined || false;\n\n\t\tlet $component = $('.CardCharts');\n\t\tlet $header = $component.find('.CardCharts__Header');\n\t\tlet $content = $component.find('.CardCharts__Content');\n\t\tlet $properties = $component.find('.CardCharts__Properties');\n\t\tlet $headerDiv = $component.find('.CardCharts__HeaderChart > div');\n\t\tlet $fakeColumns = $('.FakeColumns');\n\t\tlet $bodyContent = $('.LayoutPopup__body');\n\n\t\tif (isInsideIframe && !$fakeColumns.length) {\n\t\t\t$headerDiv.append(`<div class='FakeColumns'></div>`);\n\t\t}\n\n\t\tif (isInsideIframe) {\n\t\t\t$fakeColumns = $('.FakeColumns');\n\n\t\t\t$content.on('scroll', () => {\n\t\t\t\tclearTimeout(window['CardChartsScroll'].scrollFinished);\n\t\t\t\twindow['CardChartsScroll'].scrollFinished = setTimeout(function() {\n\t\t\t\t\tif ($content.scrollTop() > 0) $header.addClass('ShadowMedium');\n\t\t\t\t\telse $header.removeClass('ShadowMedium');\n\t\t\t\t}, 50);\n\t\t\t});\n\t\t}\n\n\t\t$(window).resize(function() {\n\t\t\t$component = $('.CardCharts');\n\t\t\t$header = $component.find('.CardCharts__Header');\n\t\t\t$content = $component.find('.CardCharts__Content');\n\t\t\t$properties = $component.find('.CardCharts__Properties');\n\t\t\t$fakeColumns = $('.FakeColumns');\n\t\t\t$bodyContent = $('.LayoutPopup__body');\n\n\t\t\tlet headerTitleHeight = 63;\n\t\t\tconst headerPropertiesHeight = 56;\n\n\t\t\tconst $charts = $content.find('.CardCharts__Charts .OSChart');\n\n\t\t\t$charts.each(function() {\n\t\t\t\tconst $chart = $(this);\n\n\t\t\t\tconst newWidth = $content.width() - $properties.width() + 40;\n\t\t\t\t$chart.highcharts().setSize(newWidth, $chart.height());\n\t\t\t});\n\n\t\t\tif (isInsideIframe) {\n\t\t\t\tconst timeoutHeight = setTimeout(() => {\n\t\t\t\t\tconst $headerTitle = $component.find('.CardCharts__HeaderTitle');\n\n\t\t\t\t\theaderTitleHeight = $headerTitle.length ? $headerTitle.outerHeight() : headerTitleHeight - 6;\n\n\t\t\t\t\tconst newHeight = $(window.frameElement).height() - headerTitleHeight;\n\n\t\t\t\t\t$fakeColumns.css('height', `${newHeight + headerPropertiesHeight}px`);\n\t\t\t\t\t$content.css('height', `${newHeight - headerPropertiesHeight}px`);\n\n\t\t\t\t\tclearTimeout(timeoutHeight);\n\t\t\t\t}, 500);\n\t\t\t}\n\t\t});\n\n\t\t// See MutationObserver (LayoutPopup)\n\t\tSapphireWidgets.PopupsToAvoidMutations = ['ChartsPopup'];\n\t});\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/card-charts/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/collapsible-side-panel/scripts.js":
/*!*******************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/collapsible-side-panel/scripts.js ***!
  \*******************************************************************************/
/***/ (function() {

eval("/* Component CollapsibleSidePanel */\r\n(function($, window, SapphireWidgets) {\r\n\tclass CollapsibleSidePanel {\r\n\t\tconstructor(config) {\r\n\t\t\tthis.options = {\r\n\t\t\t\t...config,\r\n\t\t\t};\r\n\r\n\t\t\tthis.onComponentInit();\r\n\t\t}\r\n\r\n\t\topenCloseSidePanel(toOpen) {\r\n\t\t\tif (toOpen) {\r\n\t\t\t\tthis.$content.css('display', 'grid');\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.$component.addClass('CollapsibleSidePanel--open');\r\n\t\t\t\t}, 50);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$component.removeClass('CollapsibleSidePanel--open');\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t$('.CollapsibleSidePanel__Content').css('display', 'none');\r\n\t\t\t\t}, 350);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tonComponentInit() {\r\n\t\t\tthis.$component = $(`#${this.options.widgetId}`);\r\n\t\t\tthis.$header = this.$component.find('.CollapsibleSidePanel__Header');\r\n\t\t\tthis.$content = this.$component.find('.CollapsibleSidePanel__Content');\r\n\t\t\tthis.$counter1 = this.$component.find('.CollapsibleSidePanel__Title span.Counter');\r\n\t\t\tthis.$counter2 = this.$component.find('.CollapsibleSidePanel__PanelTitle span.Counter');\r\n\t\t\tthis.$panelContent = this.$component.find('.CollapsibleSidePanel__PanelContent');\r\n\t\t\tthis.$close = this.$component.find('.CollapsibleSidePanel__PanelHeader .icon');\r\n\t\t\tthis.$closeEventLink = this.$component.find('.CollapsibleSidePanel__PanelHeader .PanelCloseButton');\r\n\r\n\t\t\tthis.$header.on('click', () => this.openCloseSidePanel(true));\r\n\t\t\tthis.$close.on('click', () => {\r\n\t\t\t\tthis.openCloseSidePanel(false);\r\n\r\n\t\t\t\tthis.$closeEventLink.click();\r\n\r\n\t\t\t\tif ($('.PanelContentEmpty').length) {\r\n\t\t\t\t\tSapphireWidgets.CollapsibleSidePanel.close(this.options.widgetId, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (this.options.isAutoCounter) {\r\n\t\t\t\tcalculateCounter(this.$panelContent, this.$counter1, this.$counter2);\r\n\r\n\t\t\t\tthis.$counter1.removeClass('Hidden');\r\n\t\t\t\tthis.$counter2.removeClass('Hidden');\r\n\t\t\t}\r\n\r\n\t\t\tconst hasEmptyMessage = this.$panelContent.find('.CollapsibleEmptyMessage');\r\n\t\t\tconst contentToVerify = hasEmptyMessage.length ? this.$panelContent.find('>:first-child') : this.$panelContent;\r\n\r\n\t\t\tif (this.options.hideWhenEmpty && !contentToVerify.text()) {\r\n\t\t\t\tthis.$component.hide();\r\n\t\t\t}\r\n\r\n\t\t\t//Diogo Ribeiro - it seems we only need margins when we show the header\r\n\t\t\tif(!this.options.hideHeader) {\r\n\t\t\t\t$(document).ready(function() {\r\n\t\t\t\t\t$('.CollapsibleSidePanel:visible').addClass('MultiMarginTopSmall');\r\n\t\t\t\t\t$('.CollapsibleSidePanel:visible:first').addClass('MultiMarginTopLarge');\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tconst calculateCounter = (panelContent, counter1, counter2) => {\r\n\t\tlet total = 0;\r\n\t\tconst counters = panelContent.find('.ExapandablePlaceholder.Counter');\r\n\r\n\t\tcounters.each(function() {\r\n\t\t\ttotal += +$(this).text();\r\n\t\t});\r\n\r\n\t\tcounter1.text(total);\r\n\t\tcounter2.text(total);\r\n\r\n\t\tif (total === 0) counter2.addClass('ColorLightGreyBG');\r\n\t};\r\n\r\n\tconst updateCounter = (widgetId, counter) => {\r\n\t\tthis.$component = $(`#${widgetId}`);\r\n\t\tthis.counter1 = this.$component.find('.CollapsibleSidePanel__Title span.Counter');\r\n\t\tthis.counter2 = this.$component.find('.CollapsibleSidePanel__PanelTitle span.Counter');\r\n\r\n\t\tthis.counter1.text(counter);\r\n\t\tthis.counter2.text(counter);\r\n\r\n\t\tif (+counter === 0) this.counter2.addClass('ColorLightGreyBG');\r\n\t};\r\n\r\n\tconst close = (widgetId, hideHeader, updateCounter) => {\r\n\t\tthis.$component = $(`#${widgetId}`);\r\n\r\n\t\tif (!this.$component.hasClass('CollapsibleSidePanel')) {\r\n\t\t\tthis.$component = $(`#${widgetId}`).find('.CollapsibleSidePanel');\r\n\t\t}\r\n\r\n\t\tif (hideHeader) {\r\n\t\t\tthis.$component.addClass('CollapsibleSidePanel--headerHidden');\r\n\t\t}\r\n\r\n\t\tthis.$component.removeClass('CollapsibleSidePanel--open');\r\n\r\n\t\t$('.CollapsibleSidePanel:visible').removeClass('MultiMarginTopSmall');\r\n\t\t$('.CollapsibleSidePanel:visible:first').removeClass('MultiMarginTopLarge');\r\n\t};\r\n\r\n\tconst checkEmpty = widgetId => {\r\n\t\tthis.$component = $(`#${widgetId}`).find('.CollapsibleSidePanel');\r\n\t\tthis.$panelContent = this.$component.find('.CollapsibleSidePanel__PanelContent');\r\n\t\tthis.$counter1 = this.$component.find('.CollapsibleSidePanel__Title span.Counter');\r\n\t\tthis.$counter2 = this.$component.find('.CollapsibleSidePanel__PanelTitle span.Counter');\r\n\t\tthis.$emptyMessage = this.$component.find('.CollapsibleEmptyMessage');\r\n\r\n\t\tthis.$emptyMessage.show();\r\n\r\n\t\tcalculateCounter(this.$panelContent, this.$counter1, this.$counter2);\r\n\t};\r\n\r\n\tconst create = config => (window[config.widgetId] = new CollapsibleSidePanel(config));\r\n\r\n\tSapphireWidgets.CollapsibleSidePanel = { create, close, updateCounter, checkEmpty };\r\n})(jQuery, window, SapphireWidgets);\r\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/collapsible-side-panel/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/comp-line/scripts.js":
/*!******************************************************************!*\
  !*** ./src/components/05-components/v3-pat/comp-line/scripts.js ***!
  \******************************************************************/
/***/ (function() {

eval("/* Component CompLine */\n(function($, window, SapphireWidgets) {\n\tfunction SectionCompline() {\n\t\tvar that = this;\n\n\t\t// Object to save stats\n\t\tvar previewstat = [];\n\n\t\t// set click events\n\t\tfunction clickEvents(ob) {\n\t\t\t// store querys in a single var\n\t\t\tvar holder = $(ob).closest('.CompLine');\n\t\t\tvar Section = $(ob).closest('.CompLineExpandable');\n\t\t\tvar SectionContent = Section.children('.CompLine_Expand');\n\n\t\t\t// get id\n\t\t\tvar id = holder.attr('id');\n\n\t\t\tvar tempHeight = 0;\n\n\t\t\t// has class expanded\n\t\t\tif (Section.hasClass('expanded')) {\n\t\t\t\t// Calc and set a fixed height, during this process, transitions are disabled\n\t\t\t\tSectionContent.addClass('noTransition');\n\t\t\t\tSectionContent.height(SectionContent.height());\n\t\t\t\tSectionContent[0].offsetHeight; // hack to force a repaint\n\t\t\t\tSectionContent.removeClass('noTransition');\n\n\t\t\t\t// Collapse content\n\t\t\t\tSectionContent.height(0);\n\t\t\t\tSection.removeClass('expanded');\n\t\t\t\tSectionContent.css('overflow', 'hidden');\n\n\t\t\t\t// Remove class, set height and save state\n\t\t\t\tpreviewstat[id]['client'] = false;\n\n\t\t\t\tif (holder.hasClass('notRenderInteractions')) {\n\t\t\t\t\tholder.find('.CompLine-toggle-interactions').trigger('click');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Calc and set a fixed height\n\t\t\t\tSectionContent.height('auto');\n\t\t\t\ttempHeight = SectionContent.height();\n\t\t\t\tSectionContent.height(0);\n\t\t\t\tSectionContent.height(tempHeight);\n\t\t\t\tSectionContent.css('overflow', 'hidden');\n\n\t\t\t\t// remove class, set height and save state\n\t\t\t\tSection.addClass('expanded');\n\t\t\t\tpreviewstat[id]['client'] = true;\n\n\t\t\t\tif ($('.Page').hasClass('ie8') || $('.Page').hasClass('ie9')) {\n\t\t\t\t\tSectionContent.height('auto');\n\t\t\t\t\tSectionContent.css('overflow', 'visible');\n\t\t\t\t}\n\n\t\t\t\tif (holder.hasClass('notRenderInteractions')) {\n\t\t\t\t\tholder.find('.CompLine-toggle-interactions').trigger('click');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// ajax refres function\n\t\tthat.ajaxRefresh = function() {\n\t\t\t// remove click events\n\t\t\t$('.CompLine_headLine').off();\n\n\t\t\t// add stop prepagation\n\t\t\t$('.CompLine_headLine input, .CompLine_headLine select, .CompLine_headLine a').click(function(event) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\n\t\t\t// add new click events\n\t\t\t$('.CompLine__expandIcon').unbind('click');\n\t\t\t$('.CompLine__expandIcon').on('click', function() {\n\t\t\t\tclickEvents(this.parentElement);\n\t\t\t});\n\n\t\t\t// each all sections\n\t\t\t$('.CompLineExpandable').each(function() {\n\t\t\t\t// if new SectionExpandable then add to previewstat array\n\t\t\t\tif (\n\t\t\t\t\tpreviewstat[\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.closest('.CompLine')\n\t\t\t\t\t\t\t.attr('id')\n\t\t\t\t\t] == null\n\t\t\t\t) {\n\t\t\t\t\t// add stat on array\n\t\t\t\t\tvar stat = false;\n\t\t\t\t\t// if open\n\t\t\t\t\tif ($(this).hasClass('expanded')) {\n\t\t\t\t\t\tstat = true;\n\t\t\t\t\t}\n\t\t\t\t\t// add row\n\t\t\t\t\tpreviewstat[\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.closest('.CompLine')\n\t\t\t\t\t\t\t.attr('id')\n\t\t\t\t\t] = {\n\t\t\t\t\t\tclient: stat,\n\t\t\t\t\t\tserver: stat,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// curent state (ajax state x initial state)\n\t\t\t\tvar curState = false;\n\n\t\t\t\t// check if start expandable\n\t\t\t\tif ($(this).hasClass('expanded')) {\n\t\t\t\t\tcurState = true;\n\t\t\t\t}\n\n\t\t\t\t// check if ajax != initial server\n\t\t\t\tif (\n\t\t\t\t\tcurState !=\n\t\t\t\t\tpreviewstat[\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.closest('.CompLine')\n\t\t\t\t\t\t\t.attr('id')\n\t\t\t\t\t]['server']\n\t\t\t\t) {\n\t\t\t\t\t// curstate\n\t\t\t\t\tpreviewstat[\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.closest('.CompLine')\n\t\t\t\t\t\t\t.attr('id')\n\t\t\t\t\t]['client'] = curState;\n\t\t\t\t\tpreviewstat[\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.closest('.CompLine')\n\t\t\t\t\t\t\t.attr('id')\n\t\t\t\t\t]['server'] = curState;\n\t\t\t\t} else {\n\t\t\t\t\t// has class expanded\n\t\t\t\t\tif (\n\t\t\t\t\t\tpreviewstat[\n\t\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t\t.closest('.CompLine')\n\t\t\t\t\t\t\t\t.attr('id')\n\t\t\t\t\t\t]['client'] == false &&\n\t\t\t\t\t\t$(this).hasClass('expanded')\n\t\t\t\t\t) {\n\t\t\t\t\t\t$(this).removeClass('expanded');\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.children('.CompLine_Expand')\n\t\t\t\t\t\t\t.height(0);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tpreviewstat[\n\t\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t\t.closest('.CompLine')\n\t\t\t\t\t\t\t\t.attr('id')\n\t\t\t\t\t\t]['client'] == true &&\n\t\t\t\t\t\t!$(this).hasClass('expanded')\n\t\t\t\t\t) {\n\t\t\t\t\t\t$(this).addClass('expanded');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// set events\n\t\tthat.init = function() {\n\t\t\t// each all sections to create array stat\n\t\t\t$('.CompLineExpandable').each(function() {\n\t\t\t\t// add stat on array\n\t\t\t\tvar stat = false;\n\n\t\t\t\t// if open\n\t\t\t\tif ($(this).hasClass('expanded')) {\n\t\t\t\t\tstat = true;\n\t\t\t\t}\n\n\t\t\t\t// add row\n\t\t\t\tpreviewstat[\n\t\t\t\t\t$(this)\n\t\t\t\t\t\t.closest('.CompLine')\n\t\t\t\t\t\t.attr('id')\n\t\t\t\t] = {\n\t\t\t\t\tclient: stat,\n\t\t\t\t\tserver: stat,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\t// add click events\n\t\t\t$('.CompLine__expandIcon').unbind('click');\n\t\t\t$('.CompLine__expandIcon').on('click', function() {\n\t\t\t\tclickEvents(this.parentElement);\n\t\t\t});\n\n\t\t\t// add stop prepagation\n\t\t\t$('.CompLine_headLine input, .CompLine_headLine select, .CompLine_headLine a').click(function(event) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\n\t\t\t// remove unecessary behaviors\n\n\t\t\t// event ajax\n\t\t\tosAjaxBackend.BindAfterAjaxRequest(that.ajaxRefresh);\n\t\t};\n\t}\n\n\tconst create = () => {\n\t\tconst expandable = new SectionCompline();\n\n\t\texpandable.init();\n\t};\n\n\tSapphireWidgets.CompLine = { create };\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/comp-line/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/country-phone/scripts.js":
/*!**********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/country-phone/scripts.js ***!
  \**********************************************************************/
/***/ (function() {

eval("/* Component CountryPhone */\n(function($, window, SapphireWidgets) {\n\tconst create = config => {\n\t\tconst $element = document.querySelector(`#${config.widgetId}`);\n\t\tconst additionalValidations = config.additionalValidations;\n\n\t\tconst countryPhoneInput = window.intlTelInput($element, {\n\t\t\tinitialCountry: config.initialCountry,\n\t\t\tpreferredCountries: config.preferredCountries,\n\t\t\tseparateDialCode: config.separateDialCode,\n\t\t\tnationalMode: config.nationalMode,\n\t\t\tautoPlaceholder: config.autoPlaceholder ? 'polite' : false,\n\t\t\tformatOnDisplay: false,\n\t\t\tutilsScript: '/V3_Pat/js/utils.js',\n\t\t});\n\n\t\tconst $input = $(`#${config.widgetId}`);\n\n\t\t$input.on('keyup', function(e) {\n\t\t\tif ($input.val() === '+' || $input.val() === '') {\n\t\t\t\tcountryPhoneInput.setCountry(config.initialCountry);\n\t\t\t}\n\t\t});\n\n\t\t$input.on('keypress', function(e) {\n\t\t\tconst selectedCountry = countryPhoneInput.getSelectedCountryData();\n\t\t\tconst filter = additionalValidations.find(i => i.CountryPhoneValidations.CountryCode === selectedCountry.iso2);\n\t\t\tconst value = $input.val().trim();\n\n\t\t\tlet isValid = true;\n\n\t\t\tif (filter) {\n\t\t\t\tconst withouCode = value.replace(`+${selectedCountry.dialCode}`, '');\n\n\t\t\t\tisValid = withouCode.trim().length + 1 <= filter.CountryPhoneValidations.PhoneLength;\n\t\t\t}\n\n\t\t\tif (value === `+${selectedCountry.dialCode}`) {\n\t\t\t\t$input.val(`+${selectedCountry.dialCode} `);\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\tisValid &&\n\t\t\t\t(e.metaKey || // cmd/ctrl\n\t\t\t\te.which <= 0 || // arrow keys\n\t\t\t\te.which == 8 || // delete key\n\t\t\t\t\t(!value.length && e.key === '+') ||\n\t\t\t\t\t/[0-9]/.test(String.fromCharCode(e.which)))\n\t\t\t);\n\t\t});\n\n\t\t$element.addEventListener('countrychange', function() {\n\t\t\tonChangeCountry();\n\t\t});\n\n\t\tconst onChangeCountry = () => {\n\t\t\tconst $selectedCountryInput = $(`#${config.selectedCountryInput}`);\n\t\t\tconst selectedCountry = countryPhoneInput.getSelectedCountryData();\n\n\t\t\t$selectedCountryInput.val(selectedCountry.iso2);\n\t\t\t$selectedCountryInput.trigger('change');\n\t\t};\n\n\t\t$(document).ready(function() {\n\t\t\tonChangeCountry();\n\t\t});\n\t};\n\n\tSapphireWidgets.CountryPhone = {\n\t\tcreate,\n\t};\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/country-phone/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/data-tables/scripts.js":
/*!********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/data-tables/scripts.js ***!
  \********************************************************************/
/***/ (function() {

eval("(function() {\n\tclass DataTables {\n\t\tconstructor(config) {\n\t\t\tthis.config = config;\n\t\t\tthis.$widget = $(`#${config.widgetId}`);\n\t\t\tthis.$table = this.$widget.find('table');\n\t\t\tthis.$table.addClass('cell-border compact');\n\t\t\tthis.onInit();\n\t\t}\n\n\t\tonInit() {\n\t\t\tthis.options = {\n\t\t\t\t...this.config,\n\t\t\t\tfixedColumns: true,\n\t\t\t\tinfo: false,\n\t\t\t\tordering: false,\n\t\t\t\tpaging: false,\n\t\t\t\tscrollCollapse: true,\n\t\t\t\tscrollX: true,\n\t\t\t\tsearching: false,\n\t\t\t};\n\n\t\t\t$(() => {\n\t\t\t\tthis.$table.DataTable(this.options);\n\t\t\t});\n\t\t}\n\t}\n\n\tconst create = config => (window[config.widgetId] = new DataTables(config));\n\n\tSapphireWidgets.DataTables = {\n\t\tcreate,\n\t};\n})();\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/data-tables/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/datetime-range-picker/scripts.js":
/*!******************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/datetime-range-picker/scripts.js ***!
  \******************************************************************************/
/***/ (function() {

eval("/* Component DateTimeRangePicker */\r\n(function ($, window, document, SapphireWidgets) {\r\n\tvar allDateTimeRangePickers = [];\r\n\r\n\tvar create = function (config) {\r\n\t\tfor (var i = 0; i < allDateTimeRangePickers.length; i++) {\r\n\t\t\tif (allDateTimeRangePickers[i].config.widgetId === config.widgetId) {\r\n\t\t\t\tallDateTimeRangePickers.splice(i, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\twindow[config.widgetId] = new DateTimeRangePicker(config);\r\n\t\tallDateTimeRangePickers.push(window[config.widgetId]);\r\n\t};\r\n\r\n\tvar DateTimeRangePicker = function (config) {\r\n\t\tthis.config = config;\r\n\t\tthis.currentLocale = config.currentLocale;\r\n\r\n\t\tthis.$widget = $('#' + config.widgetId);\r\n\t\tthis.$widget.addClass('DateTimeRangePicker');\r\n\t\tthis.$clear = this.$widget.find('.DateTimeRangePicker-clear');\r\n\t\tthis.$label = this.$widget.find('.DateTimeRangePicker-label');\r\n\r\n\t\tthis.isEmptyHour = false;\r\n\r\n\t\tif (this.config.attachToInput) {\r\n\t\t\tthis.$widget.addClass('attachedInput');\r\n\t\t\tthis.$model = this.$widget.find('.DateTimeRangePicker-placeholder input[type=\"text\"]');\r\n\t\t\tthis.$model.attr('tabIndex', -1);\r\n\t\t}\r\n\r\n\t\tthis.$input = $('#' + config.inputId);\r\n\r\n\t\tif (!this.config.allowsTyping) {\r\n\t\t\tthis.$input.prop('readonly', true);\r\n\t\t}\r\n\r\n\t\t// Just to force kuwait arabic version\r\n\t\tif (this.currentLocale === 'AR') {\r\n\t\t\tmoment.locale('ar-kw');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmoment.locale(config.currentLocale)\r\n\t\t}\r\n\r\n\t\tvar options = {};\r\n\t\toptions.startDate = config.startDate;\r\n\t\toptions.singleDatePicker = config.singleDatePicker;\r\n\t\toptions.autoApply = config.autoApply;\r\n\t\toptions.autoUpdateInput = config.autoUpdateInput;\r\n\t\toptions.timePicker = config.timePicker;\r\n\t\toptions.timePicker24Hour = config.timePicker24Hour;\r\n\t\toptions.timePickerIncrement = config.timePickerIncrement;\r\n\t\toptions.showDropdowns = config.hasDropdowns; // Month/Year Picker\r\n\t\toptions.drops = config.drops;\r\n\t\toptions.opens = config.isRTL && config.opens != 'center' ? 'left' : config.opens;\r\n\r\n\t\tvar stringConnection = '[, ' + config.dateTimeStringConnection + ']';\r\n\r\n\t\tif (config.timePicker) {\r\n\t\t\t//if (!this.config.attachToInput) //changed by Diogo Ribeiro so date picker has a placeholder even if its attached to input (otherwise it never showed)\r\n\t\t\tthis.$input.prop('placeholder', 'DD-MM-YYYY HH:MM');\r\n\r\n\t\t\tif (options.timePicker24Hour) {\r\n\t\t\t\tthis.config.formatInput = `${this.config.systemDateFormat} HH:mm`;\r\n\t\t\t\tthis.config.formatLabel = this.config.hasYearWhenText\r\n\t\t\t\t\t? 'D MMM YYYY' + stringConnection + ' HH:mm'\r\n\t\t\t\t\t: 'D MMM' + stringConnection + ' HH:mm';\r\n\t\t\t} else {\r\n\t\t\t\tthis.config.formatInput = `${this.config.systemDateFormat} hh:mm A`;\r\n\t\t\t\tthis.config.formatLabel = this.config.hasYearWhenText\r\n\t\t\t\t\t? 'D MMM YYYY' + stringConnection + ' hh:mm A'\r\n\t\t\t\t\t: 'D MMM' + stringConnection + ' hh:mm A';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.$widget.addClass('onlyDate');\r\n\r\n\t\t\t//if (!this.config.attachToInput) \r\n\t\t\tthis.$input.prop('placeholder', 'DD-MM-YYYY');\r\n\r\n\t\t\tthis.config.formatInput = this.config.systemDateFormat;\r\n\t\t\tthis.config.formatLabel = this.config.hasYearWhenText ? 'D MMM YYYY' : 'D MMM';\r\n\t\t}\r\n\r\n\t\tif (!config.singleDatePicker) {\r\n\t\t\tthis.$widget.addClass('rangeDates');\r\n\t\t}\r\n\r\n\t\tthis.config.formatLabel = this.config.hasWeekDayNameWhenText\r\n\t\t\t? 'ddd[, ]' + this.config.formatLabel\r\n\t\t\t: this.config.formatLabel;\r\n\r\n\t\toptions.locale = {\r\n\t\t\tdirection: config.isRTL ? 'rtl' : 'ltr',\r\n\t\t\tformat: this.config.formatInput,\r\n\t\t\tcancelLabel: this.config.cancelLabel,\r\n\t\t\tapplyLabel: this.config.applyLabel,\r\n\t\t};\r\n\r\n\t\tif (config.hasTextTrigger) {\r\n\t\t\tthis.$widget.addClass('textTrigger');\r\n\t\t}\r\n\r\n\t\tconst nulldDates = ['01-01-1900 00:00:00', '1900-01-01 00:00:00'];\r\n\r\n\t\tif (config.endDate && !nulldDates.some(i => i === config.endDate)) {\r\n\t\t\toptions.endDate = config.endDate;\r\n\t\t}\r\n\r\n\t\tif (config.maxDate && !nulldDates.some(i => i === config.maxDate)) {\r\n\t\t\toptions.maxDate = config.maxDate;\r\n\t\t}\r\n\r\n\t\tif (config.minDate && !nulldDates.some(i => i === config.minDate)) {\r\n\t\t\toptions.minDate = config.minDate;\r\n\t\t}\r\n\r\n\t\tif (config.DisabledWeekDays) {\r\n\t\t\tvar disabledWeekDays = config.DisabledWeekDays.split(',');\r\n\t\t\toptions.isInvalidDate = function (date) {\r\n\t\t\t\treturn disabledWeekDays.includes(\r\n\t\t\t\t\tmoment(date)\r\n\t\t\t\t\t\t.day()\r\n\t\t\t\t\t\t.toString()\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tvar _this = this;\r\n\r\n\t\tthis.$input.daterangepicker(options, function (startDate, endDate, label) {\r\n\t\t\t// after a selection is made\r\n\t\t\tif (_this.config.attachToInput) {\r\n\t\t\t\tlet format = '';\r\n\r\n\t\t\t\tif (_this.config.timePicker) {\r\n\t\t\t\t\tformat = `${_this.config.systemDateFormat} HH:mm`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (_this.config.singleDatePicker) {\r\n\t\t\t\t\tif (_this.config.timePicker) _this.$model.val(startDate.format(format));\r\n\t\t\t\t\telse _this.$model.val(startDate.format(_this.config.systemDateFormat));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet start, end;\r\n\r\n\t\t\t\t\tif (_this.config.timePicker) {\r\n\t\t\t\t\t\tstart = startDate.format(format);\r\n\t\t\t\t\t\tend = endDate.format(format);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstart = startDate.format(_this.config.systemDateFormat);\r\n\t\t\t\t\t\tend = endDate.format(_this.config.systemDateFormat);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_this.$model.val(`${start}  ·  ${end}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_this.$model.trigger('change');\r\n\t\t\t}\r\n\r\n\t\t\tconst initialValue = _this.$input.val();\r\n\t\t\tconst allowsMMYY = _this.config.allowsTyping && _this.config.allowsTypeMMYY && _this.config.singleDatePicker;\r\n\r\n\t\t\tif (allowsMMYY && initialValue.length === 4) {\r\n\t\t\t\t_this.picker.setStartDate(moment(`01${initialValue}`, 'DDMMYY'));\r\n\r\n\t\t\t\tif (_this.config.attachToInput) {\r\n\t\t\t\t\tlet format = '';\r\n\r\n\t\t\t\t\tif (_this.config.timePicker) format = `${_this.config.systemDateFormat} HH:mm`;\r\n\t\t\t\t\telse format = _this.config.systemDateFormat;\r\n\r\n\t\t\t\t\t_this.$model.val(_this.picker.startDate.format(format));\r\n\t\t\t\t\t_this.$model.trigger('change');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// now we have a proper instance\r\n\t\tthis.picker = this.$input.data('daterangepicker');\r\n\r\n\t\tthis.$calendar = $(this.picker.container);\r\n\r\n\t\tif (!!this.config.cssClass) {\r\n\t\t\tthis.$calendar.addClass(this.config.cssClass);\r\n\t\t}\r\n\r\n\t\tthis.$timeHolder = this.$calendar.find('.calendar-time');\r\n\t\tthis.$buttonsHolder = this.$calendar.find('.drp-buttons');\r\n\r\n\t\tif (this.config.autoApply) {\r\n\t\t\tthis.$buttonsHolder.hide();\r\n\t\t}\r\n\r\n\t\tif (config.isEmptyStartDate) {\r\n\t\t\tthis.clear(false);\r\n\t\t} else if (config.isEmptyStartHour) {\r\n\t\t\tthis.isEmptyHour = true;\r\n\t\t\tthis.updateLabeling();\r\n\t\t} else {\r\n\t\t\tthis.updateLabeling();\r\n\t\t}\r\n\r\n\t\tif (config.enabled) {\r\n\t\t\tthis.nativeEvents();\r\n\t\t\tthis.customEvents();\r\n\t\t} else {\r\n\t\t\tthis.$clear.hide();\r\n\t\t\tthis.$input.off('click focus keydown keyup');\r\n\t\t}\r\n\r\n\t\tif (this.config.attachToInput) {\r\n\t\t\tthis.handleCustomValidation();\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.handleCustomValidation = function () {\r\n\t\t// TO DO\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.nativeEvents = function () {\r\n\t\tconst _this = this;\r\n\r\n\t\tthis.$input.on('showCalendar.daterangepicker', function (event, picker) {\r\n\t\t\tif (_this.config.hasGoToday) {\r\n\t\t\t\t_this.$calendar\r\n\t\t\t\t\t.find('.calendar-table thead tr')\r\n\t\t\t\t\t.eq(0)\r\n\t\t\t\t\t.after(\r\n\t\t\t\t\t\t'<tr><td colspan=\"7\" class=\"DateTimeRangePicker-calendar-gotoday\">' +\r\n\t\t\t\t\t\t_this.config.goTodayLabel +\r\n\t\t\t\t\t\t'</td></tr>'\r\n\t\t\t\t\t);\r\n\t\t\t\tif (_this.config.drops === 'up') {\r\n\t\t\t\t\t_this.$calendar.css('top', _this.$calendar.offset().top - 24);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_this.handleViewportPosition();\r\n\r\n\t\t\tif (!_this.config.singleDatePicker) {\r\n\t\t\t\t$('.drp-selected').each(function () {\r\n\t\t\t\t\tlet text = $(this).text();\r\n\t\t\t\t\ttext = text.replace(/-/gi, '·');\r\n\r\n\t\t\t\t\t$(this).text(text);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.$input.on('show.daterangepicker', function (event, picker) {\r\n\t\t\tif (_this.config.timePicker && _this.config.hasClearHour) {\r\n\t\t\t\t_this.$calendar.find('.calendar-time').append('<span class=\"DateTimeRangePicker-calendar-clear\"></span>');\r\n\t\t\t\tif (_this.isEmptyHour) {\r\n\t\t\t\t\t_this.$timeHolder.css('opacity', 0.5);\r\n\t\t\t\t\t_this.$calendar.find('.DateTimeRangePicker-calendar-clear').addClass('disabled');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_this.$timeHolder.css('opacity', 1);\r\n\t\t\t\t\t_this.$calendar.find('.DateTimeRangePicker-calendar-clear').removeClass('disabled');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_this.handleViewportPosition();\r\n\t\t\tSapphireWidgets.DateTimeRangePicker.openedWidgetId = _this.config.widgetId;\r\n\r\n\t\t\tif (_this.config.cssClass === 'CalendarPopup' && window.frameElement) {\r\n\t\t\t\tconst oldBodyHeight = $('body')[0].scrollHeight + 8;\r\n\t\t\t\tconst calendarSafeHeight = _this.$calendar.outerHeight() + 32;\r\n\r\n\t\t\t\tconst newHeight = oldBodyHeight > calendarSafeHeight ? oldBodyHeight : calendarSafeHeight;\r\n\r\n\t\t\t\t$('<div class=\"CalendarPopup__Overlay\"></div>').insertAfter(_this.$calendar);\r\n\r\n\t\t\t\t$(window.frameElement).animate({ minHeight: newHeight });\r\n\t\t\t\t$('body').animate({ minHeight: newHeight });\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.$input.on('hide.daterangepicker', function (event, picker) {\r\n\t\t\t// ONYX20792 Added START\r\n\t\t\tif (_this.config.autoApply && _this.config.attachToInput) {\r\n\t\t\t\t_this.updateLabeling();\r\n\t\t\t\t_this.$model.trigger('change');\r\n\t\t\t}\r\n\t\t\t// ONYX20792 END\r\n\r\n\t\t\t_this.$calendar.find('.DateTimeRangePicker-calendar-clear').remove();\r\n\t\t\t_this.updateParentIframe();\r\n\r\n\t\t\tif (_this.config.cssClass === 'CalendarPopup' && window.frameElement) {\r\n\t\t\t\t$(window.frameElement).css({ minHeight: 'unset' });\r\n\t\t\t\t$('body').css({ minHeight: 'unset' });\r\n\r\n\t\t\t\t$('.CalendarPopup__Overlay').remove();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.$input.on('cancel.daterangepicker', function (event, picker) { });\r\n\r\n\t\tthis.$input.on('outsideClick.daterangepicker', function (event, picker) { });\r\n\r\n\t\tthis.$input.on('timechanged.daterangepicker', function (event, picker) {\r\n\t\t\t_this.isEmptyHour = false;\r\n\t\t\t_this.$timeHolder.css('opacity', 1);\r\n\t\t\tif (_this.config.hasClearHour) {\r\n\t\t\t\t_this.$calendar.find('.calendar-time').append('<span class=\"DateTimeRangePicker-calendar-clear\"></span>');\r\n\t\t\t}\r\n\t\t\tif (_this.config.autoApply) {\r\n\t\t\t\t_this.$clear.removeClass('disabled');\r\n\t\t\t\t_this.updateLabeling();\r\n\t\t\t\t_this.sendNotification();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.$input.on('clickDate.daterangepicker', function (event, picker) {\r\n\t\t\tif (_this.config.autoApply) {\r\n\t\t\t\t_this.$clear.removeClass('disabled');\r\n\t\t\t\t_this.updateLabeling();\r\n\t\t\t\t_this.sendNotification();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.$input.on('apply.daterangepicker', function (event, picker) {\r\n\t\t\t_this.updateLabeling(); // ONYX20792 This line was moved here. Previously it was right before _this.sendNotification().\r\n\t\t\tif (_this.config.attachToInput) {\r\n\t\t\t\t_this.$model.trigger('change'); //same fix as below for when the date is the same/today, when input is attached it seems we also need this extra step\r\n\t\t\t}\r\n\t\t\t_this.$input.trigger('change'); // Fix to call the change when the date is the same/today\r\n\t\t\t_this.$clear.removeClass('disabled');\r\n\t\t\t_this.sendNotification();\r\n\t\t});\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.customEvents = function () {\r\n\t\tvar _this = this;\r\n\t\tthis.$label.off('click').on('click', function (event) {\r\n\t\t\t_this.picker.toggle();\r\n\t\t});\r\n\t\tthis.$clear.off('click').on('click', function (event) {\r\n\t\t\t_this.clear();\r\n\t\t\t_this.picker.hide();\r\n\t\t});\r\n\t\tthis.$calendar.on('click', '.DateTimeRangePicker-calendar-clear', function () {\r\n\t\t\tif (_this.config.timePicker24Hour) {\r\n\t\t\t\t_this.$calendar\r\n\t\t\t\t\t.find('.hourselect')\r\n\t\t\t\t\t.val('0')\r\n\t\t\t\t\t.trigger('change');\r\n\t\t\t} else {\r\n\t\t\t\t_this.$calendar\r\n\t\t\t\t\t.find('.hourselect')\r\n\t\t\t\t\t.val('12')\r\n\t\t\t\t\t.trigger('change');\r\n\t\t\t}\r\n\t\t\t_this.$calendar\r\n\t\t\t\t.find('.minuteselect')\r\n\t\t\t\t.val('0')\r\n\t\t\t\t.trigger('change');\r\n\t\t\t_this.$calendar\r\n\t\t\t\t.find('.ampmselect')\r\n\t\t\t\t.val('AM')\r\n\t\t\t\t.trigger('change');\r\n\t\t\t_this.isEmptyHour = true;\r\n\t\t\t_this.$timeHolder.css('opacity', 0.5);\r\n\t\t\t_this.$calendar.find('.DateTimeRangePicker-calendar-clear').addClass('disabled');\r\n\t\t});\r\n\t\tthis.$calendar.on('click', '.DateTimeRangePicker-calendar-gotoday', function () {\r\n\t\t\t_this.picker.setStartDate(moment());\r\n\t\t\t_this.picker.setEndDate(moment());\r\n\r\n\t\t\t_this.picker.hide();\r\n\r\n\t\t\tif (!_this.config.autoUpdateInput || _this.config.hasTextTrigger || _this.config.attachToInput) {\r\n\t\t\t\t_this.updateLabeling();\r\n\t\t\t\t_this.$model && _this.$model.trigger('change');\r\n\t\t\t}\r\n\r\n\t\t\t_this.sendNotification();\r\n\t\t});\r\n\r\n\t\tif (this.config.attachToInput) {\r\n\t\t\t// Nothing\r\n\t\t} else {\r\n\t\t\tthis.$input.on('click', function () {\r\n\t\t\t\twindow.setTimeout(function () {\r\n\t\t\t\t\t_this.updateParentIframe();\r\n\t\t\t\t}, 50);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.updateLabeling = function () {\r\n\t\tvar labelMask = this.config.formatLabel;\r\n\t\tvar inputMask = this.config.formatInput;\r\n\r\n\t\tif (moment(this.picker.startDate).isSame(moment(), 'day')) {\r\n\t\t\tif (labelMask.includes('D MMM YYYY')) {\r\n\t\t\t\tlabelMask = labelMask.replace('D MMM YYYY', '[Today,] D MMM YYYY');\r\n\t\t\t} else if (labelMask.includes('D MMM')) {\r\n\t\t\t\tlabelMask = labelMask.replace('D MMM', '[Today]');\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.isEmptyHour) {\r\n\t\t\tlabelMask = labelMask.replace('hh:mm A', '[--:--]').replace('HH:mm', '[--:--]');\r\n\t\t\tinputMask = inputMask.replace('hh:mm A', '[--:--]').replace('HH:mm', '[--:--]');\r\n\r\n\t\t\tif (this.config.hasTextTrigger) {\r\n\t\t\t\tthis.$label.html(this.config.prefixTextTrigger + this.picker.startDate.format(labelMask));\r\n\r\n\t\t\t\tif (this.config.timePicker) {\r\n\t\t\t\t\tthis.$input.val(this.picker.startDate.format(`${this.config.systemDateFormat} [00:00:00]`));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$input.val(this.picker.startDate.format(this.config.systemDateFormat));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.$input.val(this.picker.startDate.format(`${this.config.systemDateFormat} [00:00:00]`));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.config.hasTextTrigger) {\r\n\t\t\t\tthis.$label.html(this.config.prefixTextTrigger + this.picker.startDate.format(labelMask));\r\n\t\t\t\tthis.$input.val(this.picker.startDate.format(inputMask));\r\n\t\t\t} else {\r\n\t\t\t\tif (this.config.attachToInput) {\r\n\t\t\t\t\tif (this.config.singleDatePicker) {\r\n\t\t\t\t\t\tthis.$input.val(this.picker.startDate.format(inputMask));\r\n\t\t\t\t\t\tif (this.config.timePicker) {\r\n\t\t\t\t\t\t\tthis.$model && this.$model.val(this.picker.startDate.format(`${this.config.systemDateFormat} HH:mm:ss`));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.$model && this.$model.val(this.picker.startDate.format(this.config.systemDateFormat));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst startDate = this.picker.startDate.format(inputMask);\r\n\t\t\t\t\t\tconst endDate = this.picker.endDate.format(inputMask);\r\n\r\n\t\t\t\t\t\tthis.$input.val(`${startDate}  ·  ${endDate}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this.config.singleDatePicker) {\r\n\t\t\t\t\t\tthis.$input.val(this.picker.startDate.format(this.config.formatInput));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet startDate = this.picker.startDate.format(this.config.formatInput);\r\n\t\t\t\t\t\tlet endDate = this.picker.endDate.format(this.config.formatInput);\r\n\r\n\t\t\t\t\t\tthis.$input.val(`${startDate}  ·  ${endDate}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.handleViewportPosition = function () {\r\n\t\tif (\r\n\t\t\twindow.frameElement\r\n\t\t\t&& (\r\n\t\t\t\t$(window.frameElement.parentElement).hasClass('tooltipster-content')\r\n\t\t\t\t|| $(window.frameElement.parentElement).hasClass('os-internal-ui-dialog-content')\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!this.isInViewport()) {\r\n\r\n\t\t\tvar coords = this.$calendar[0].getBoundingClientRect();\r\n\t\t\tif (this.$calendar.hasClass('drop-up') && this.$calendar[0].getBoundingClientRect().top < 0) {\r\n\t\t\t\tvar point = window.scrollY + coords.bottom + this.$input.height() + 7;\r\n\t\t\t\tthis.$calendar\r\n\t\t\t\t\t.removeClass('drop-up')\r\n\t\t\t\t\t.addClass('drop-down')\r\n\t\t\t\t\t.css('top', point);\r\n\t\t\t}\r\n\t\t\telse if (\r\n\t\t\t\t!this.$calendar.hasClass('drop-up')\r\n\t\t\t\t&& this.$calendar[0].getBoundingClientRect().bottom > (window.innerHeight || document.documentElement.clientHeight)\r\n\t\t\t) {\r\n\t\t\t\tif (!window.frameElement || (coords.height + this.$input.height() + 7) < document.body.offsetHeight) {\r\n\t\t\t\t\tvar point = window.scrollY + coords.top - coords.height - this.$input.height() - 7;\r\n\t\t\t\t\tthis.$calendar.addClass('drop-up').css('top', point);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.isInViewport = function () {\r\n\t\tvar bounding = this.$calendar[0].getBoundingClientRect();\r\n\t\treturn (\r\n\t\t\tbounding.top >= 0 && bounding.bottom <= (window.innerHeight + 5 || document.documentElement.clientHeight + 5)\r\n\t\t);\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.clear = function (sendNotification) {\r\n\t\tthis.picker.setStartDate(moment());\r\n\t\tthis.picker.setEndDate(moment());\r\n\t\tthis.isEmptyHour = false;\r\n\t\tthis.$clear.addClass('disabled');\r\n\t\tif (this.config.hasTextTrigger) {\r\n\t\t\tthis.$label.html('-- -- --');\r\n\t\t} else {\r\n\t\t\tthis.$input.val('');\r\n\t\t}\r\n\t\tif (sendNotification || sendNotification == undefined) {\r\n\t\t\tthis.sendNotification(false);\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.show = function () {\r\n\t\tthis.picker.show();\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.hide = function () {\r\n\t\tthis.picker.hide();\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.cancel = function () {\r\n\t\tthis.picker.clickCancel();\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.sendNotification = function (sendDate) {\r\n\t\tif (this.$widget.hasClass('attachedInput')) {\r\n\t\t\tthis.$input.trigger('change');\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (sendDate || sendDate == undefined) {\r\n\t\t\tif (this.isEmptyHour) {\r\n\t\t\t\tOsNotifyWidget(\r\n\t\t\t\t\tthis.config.dateTimeRangePickerFakeNotifyId,\r\n\t\t\t\t\tthis.picker.startDate.format(`${this.config.systemDateFormat} [00:00:00]`) + '|' + this.isEmptyHour\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tif (this.config.timePicker) {\r\n\t\t\t\t\tOsNotifyWidget(\r\n\t\t\t\t\t\tthis.config.dateTimeRangePickerFakeNotifyId,\r\n\t\t\t\t\t\tthis.picker.startDate.format(`${this.config.systemDateFormat} HH:mm:ss`) + '|' + this.isEmptyHour\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tOsNotifyWidget(\r\n\t\t\t\t\t\tthis.config.dateTimeRangePickerFakeNotifyId,\r\n\t\t\t\t\t\tthis.picker.startDate.format(this.config.systemDateFormat) + '|' + this.isEmptyHour\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tOsNotifyWidget(this.config.dateTimeRangePickerFakeNotifyId, 'null|true');\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.updateParentIframe = function () {\r\n\t\tif (typeof SapphireWidgets.ResizeParentIframe === 'object') {\r\n\t\t\tSapphireWidgets.ResizeParentIframe.resize();\r\n\t\t}\r\n\t\tif ($('.Page.LayoutPopup').length === 1) {\r\n\t\t\tSapphireWidgets.LayoutPopup.redrawDialogWindow();\r\n\t\t}\r\n\t};\r\n\r\n\tSapphireWidgets.DateTimeRangePicker = {\r\n\t\tcreate: create,\r\n\t\tall: function () {\r\n\t\t\treturn allDateTimeRangePickers;\r\n\t\t},\r\n\t};\r\n})(jQuery, window, document, SapphireWidgets);\r\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/datetime-range-picker/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/drag-drop/scripts.js":
/*!******************************************************************!*\
  !*** ./src/components/05-components/v3-pat/drag-drop/scripts.js ***!
  \******************************************************************/
/***/ (function() {

eval("/* Component DragDropArea */\n(function($, window, document, SapphireWidgets) {\n\tvar dragDropAreaWidget;\n\n\tvar create = function(config) {\n\t\twindow[config.dragDropAreaId] = new DragDropArea(config);\n\t\tdragDropAreaWidget = window[config.dragDropAreaId];\n\n\t\t$(window).load(function() {\n\t\t\tosAjaxBackend.BindAfterAjaxRequest(SapphireWidgets.DragDropArea.refreshDragDrop);\n\t\t});\n\t};\n\n\tvar refreshDragDrop = function() {\n\t\ttry {\n\t\t\tdragDropAreaWidget.setupDraggable();\n\t\t\tdragDropAreaWidget.setupDroppable();\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\tvar DragDropArea = function(config) {\n\t\tvar _this = this;\n\t\tthis.config = config;\n\t\tthis.$area = $('#' + config.dragDropAreaId);\n\t\tthis.$area.css('display', 'block');\n\t\tthis.skin = config.skin;\n\t\tthis.fakeNotifyWidgetId = config.fakeNotifyWidgetId;\n\t\tthis.setupDroppable();\n\t\tif (config.sortable) {\n\t\t\tthis.setupSortable();\n\t\t}\n\t\tthis.setupDraggable();\n\t\tthis.attachEvents();\n\t\tthis.$area.find('.DragDrop-droppable').each(function() {\n\t\t\t_this.handleDroppable($(this));\n\t\t});\n\t};\n\n\tDragDropArea.prototype.setupDraggable = function() {\n\t\tvar _this = this;\n\n\t\tthis.$area.find('.DragDrop-draggable').draggable({\n\t\t\tdisabled: this.config.disabled,\n\t\t\tcontainment: this.$area,\n\t\t\tscope: this.config.dragDropAreaId,\n\t\t\tdelay: 0,\n\t\t\tscroll: true,\n\t\t\trevert: 'invalid',\n\t\t\trevertDuration: 0,\n\t\t\tconnectToSortable: '.DragDrop-droppable',\n\t\t\tstop: function(event, ui) {\n\t\t\t\tif (ui.helper.hasClass('ui-draggable-dragging')) {\n\t\t\t\t\tconst $target = _this.$area.find('.ui-droppable.ui-sortable');\n\n\t\t\t\t\tif (_this.skin === 'Teams') {\n\t\t\t\t\t\t//$(ui.helper).hide();\n\t\t\t\t\t\tOsNotifyWidget($target.data('fakenotify'), ui.helper.data('itemtype') + '|' + ui.helper.data('itemid'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tOsNotifyWidget(\n\t\t\t\t\t\t\t$target.data('fakenotify'),\n\t\t\t\t\t\t\t_this.$area.find('.DragDrop-draggable-placeholder').index() + '|' + ui.helper.data('itemid')\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t};\n\n\tDragDropArea.prototype.setupDroppable = function() {\n\t\tvar _this = this;\n\t\tthis.$area.find('.DragDrop-droppable').droppable({\n\t\t\thoverClass: 'hovered',\n\t\t\taddClasses: true,\n\t\t\tdisabled: this.config.disabled,\n\t\t\tscope: this.config.dragDropAreaId,\n\t\t\ttolerance: 'pointer',\n\t\t\tdrop: function(event, ui) {\n\t\t\t\tif (_this.skin === 'Teams') {\n\t\t\t\t\t$(ui.draggable).hide();\n\t\t\t\t\tOsNotifyWidget(\n\t\t\t\t\t\t$(event.target).data('fakenotify'),\n\t\t\t\t\t\tui.draggable.data('itemtype') + '|' + ui.draggable.data('itemid')\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tOsNotifyWidget(\n\t\t\t\t\t\t$(event.target).data('fakenotify'),\n\t\t\t\t\t\t_this.$area.find('.DragDrop-draggable-placeholder').index() + '|' + ui.draggable.data('itemid')\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t};\n\n\tDragDropArea.prototype.setupSortable = function() {\n\t\tthis.$area.find('.DragDrop-droppable').sortable({\n\t\t\tdisabled: this.config.disabled,\n\t\t\tforcePlaceholderSize: true,\n\t\t\tcontainment: this.$area,\n\t\t\ttolerance: 'pointer',\n\t\t\trevert: 200,\n\t\t\titems: '.DragDrop-droppable-items .DragDrop-draggable',\n\t\t\tplaceholder: 'DragDrop-draggable-placeholder',\n\t\t});\n\t};\n\n\tDragDropArea.prototype.attachEvents = function() {\n\t\tvar _this = this;\n\t\tthis.$area.on('click', '.DragDrop-draggable input', function(evt) {\n\t\t\tevt.stopPropagation();\n\n\t\t\tconst $checkbox = $(evt.currentTarget);\n\t\t\tconst $droppable = $checkbox.closest('.DragDrop-droppable');\n\t\t\tconst $draggable = $checkbox.closest('.DragDrop-draggable');\n\t\t\tconst $action = $draggable.find('.DragDrop-draggable-select-action a');\n\n\t\t\t$action.trigger('click');\n\n\t\t\tif ($droppable.hasClass('allowMultiple')) {\n\t\t\t\tif ($checkbox.prop('checked')) {\n\t\t\t\t\t//$checkbox.prop('checked', false);\n\t\t\t\t\t$draggable.addClass('selected');\n\t\t\t\t} else {\n\t\t\t\t\t//$checkbox.prop('checked', true);\n\t\t\t\t\t$draggable.removeClass('selected');\n\t\t\t\t}\n\n\t\t\t\t//_this.handleDroppable($droppable);\n\t\t\t}\n\t\t});\n\n\t\tthis.$area.on('click', '.DragDrop-draggable-select-action a', function(evt) {\n\t\t\tevt.stopPropagation();\n\t\t});\n\t};\n\n\tDragDropArea.prototype.handleDroppable = function($droppable) {\n\t\tif ($droppable.hasClass('allowMultiple')) {\n\t\t\tvar $actions = $droppable.find('.DragDrop-droppable-intro');\n\t\t\tvar chkSelected = $droppable.find('input[type=\"checkbox\"]:checked').length;\n\t\t\tif (chkSelected > 0) {\n\t\t\t\t$actions.find('a, button').attr('disabled', false);\n\t\t\t} else {\n\t\t\t\t$actions.find('a, button').attr('disabled', true);\n\t\t\t}\n\t\t} else {\n\t\t\t$droppable.find('input[type=\"checkbox\"]').prop('disabled', true);\n\t\t}\n\t};\n\n\tSapphireWidgets.DragDropArea = {\n\t\tcreate: create,\n\t\trefreshDragDrop: refreshDragDrop,\n\t};\n})(jQuery, window, document, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/drag-drop/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/dropdown-categories/scripts.js":
/*!****************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/dropdown-categories/scripts.js ***!
  \****************************************************************************/
/***/ (function() {

eval("/* Component DropdownCategories */\r\n(function ($, window, SapphireWidgets) {\r\n\tfunction optGroupSetValue(selectId, inputBoxId, buttonId) {\r\n\t\tvar v = document.getElementById(selectId).value;\r\n\t\t$('#' + inputBoxId).val(v);\r\n\t\t$('#' + selectId + ' option[selected]').removeAttr('selected');\r\n\r\n\t\tif (v != -1) {\r\n\t\t\t$('#' + selectId + ' option[value=\"' + v + '\"]').attr('selected', 'selected');\r\n\t\t}\r\n\r\n\t\t$('#' + buttonId).click();\r\n\t\t$('#s2id_' + selectId).removeClass('select2-container-active');\r\n\t}\r\n\r\n\tfunction OsCustomValidatorOptGroup(a, b) {\r\n\t\tvar _e = $('#' + a.controltovalidate);\r\n\t\tvar isValid = _e.find('option[selected]').length;\r\n\t\tvar hasSibling_MandatorySelect2 = _e.prev('div.select2-container.Mandatory').length;\r\n\r\n\t\tif (hasSibling_MandatorySelect2) {\r\n\t\t\tif (isValid) {\r\n\t\t\t\t_e.prev('div.select2-container.Mandatory').removeClass('Not_Valid');\r\n\t\t\t} else {\r\n\t\t\t\t_e.prev('div.select2-container.Mandatory').addClass('Not_Valid');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn isValid;\r\n\t}\r\n\r\n\tfunction addOptGroupValidator(optGroupElementId) {\r\n\t\tOsPage_Validators.push({\r\n\t\t\tcontroltovalidate: optGroupElementId,\r\n\t\t\tenabled: true,\r\n\t\t\terrormessage: 'Required field!',\r\n\t\t\tevaluationfunction: 'SapphireWidgets.DropdownCategories.OsCustomValidatorOptGroup',\r\n\t\t\tinitialvalue: '',\r\n\t\t\tisvalid: true,\r\n\t\t});\r\n\t}\r\n\r\n\tSapphireWidgets.DropdownCategories = {\r\n\t\toptGroupSetValue,\r\n\t\tOsCustomValidatorOptGroup,\r\n\t\taddOptGroupValidator,\r\n\t};\r\n})(jQuery, window, SapphireWidgets);\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/dropdown-categories/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/dropzone/dropzone.js":
/*!******************************************************************!*\
  !*** ./src/components/05-components/v3-pat/dropzone/dropzone.js ***!
  \******************************************************************/
/***/ (function() {

eval("/* Component Dropzone */\n(function ($, window, document, SapphireWidgets) {\n\tconst create = function (config) {\n\t\twindow.Dropzone.autoDiscover = false;\n\n\t\t$(document).ready(function () {\n\t\t\tbindEvents(config);\n\n\t\t\tconst myDropzone = new window.Dropzone(config.hiddenInputContainer, {\n\t\t\t\t...config,\n\t\t\t\tinit: function () {\n\t\t\t\t\tlet prevFile;\n\n\t\t\t\t\tconst filesList = config.filesList ? config.filesList.split(',') : [];\n\n\t\t\t\t\tfor (const item of filesList) {\n\t\t\t\t\t\tconst mockFile = { name: item, size: 12345678 };\n\n\t\t\t\t\t\tthis.emit('addedfile', mockFile);\n\t\t\t\t\t\tthis.emit('complete', mockFile);\n\t\t\t\t\t\tthis.files.push(mockFile);\n\n\t\t\t\t\t\t$(`${config.hiddenInputContainer} .dz-filename`).attr('title', item);\n\n\t\t\t\t\t\tprevFile = mockFile;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (+config.maxFiles === 1 && config.isReplacePrevious) {\n\t\t\t\t\t\tthis.on('addedfile', function () {\n\t\t\t\t\t\t\tif (prevFile !== undefined) {\n\t\t\t\t\t\t\t\tthis.removeFile(prevFile);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tconst $notifyInput = $(`#${config.notifyInputId}`);\n\n\t\t\t\t\tthis.on('success', function (file, responseText) {\n\t\t\t\t\t\tprevFile = file;\n\n\t\t\t\t\t\t$(`#${config.notifyInputId} .dz-filename`).attr('title', file.name);\n\t\t\t\t\t\t$notifyInput.val('OK:' + responseText);\n\t\t\t\t\t\t$notifyInput.trigger('change');\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.on('error', function (file, responseText) {\n\t\t\t\t\t\tprevFile = file;\n\n\t\t\t\t\t\t$notifyInput.val('ER:' + responseText);\n\t\t\t\t\t\t$notifyInput.trigger('change');\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t};\n\n\tconst bindEvents = function (config) {\n\t\t$(`#${config.widgetId} .UploadMessageClass`).on('click', () => {\n\t\t\t$(`#${config.widgetId} .dz-clickable`).click();\n\t\t});\n\t};\n\n\tSapphireWidgets.Dropzone = { create };\n})(jQuery, window, document, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/dropzone/dropzone.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/expandable-link/scripts.js":
/*!************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/expandable-link/scripts.js ***!
  \************************************************************************/
/***/ (function() {

eval("/* Component ExpandableLink */\n(function ($, window, SapphireWidgets) {\n\tconst create = widgetID => {\n\t\tconst $elementWrapper = $(`#${widgetID}`);\n\n\t\tif ($elementWrapper.parent('.ExpandableList').hasClass('HideWhenEmpty')) {\n\t\t\tconst text = $elementWrapper.find('.ExpandableLink__Content').text();\n\n\t\t\tif (text.length === 0) $elementWrapper.parent('.ExpandableList').hide();\n\t\t}\n\n\t\tbindEvents(widgetID);\n\t};\n\n\tconst bindEvents = widgetID => {\n\t\t$(`#${widgetID} .ExpandableLink__Header`).click(() => openClose(`#${widgetID}`));\n\t};\n\n\tconst openClose = elementID => {\n\t\t// When the expandables are inside a container with class ExpandableLinkGroup, will act like a expandable group\n\t\tconst $linkGroup = $(elementID).closest('.ExpandableLinkGroup');\n\n\t\tif ($linkGroup.length) {\n\t\t\tconst $expandables = $linkGroup.find('.ExpandableLink--expanded').not(elementID);\n\n\t\t\t$expandables.removeClass('ExpandableLink--expanded');\n\t\t}\n\n\t\t$(elementID).toggleClass('ExpandableLink--expanded');\n\n\t\t//Check if SapphireWidgets.ResizeParentIframe is defined.\n\t\tif (typeof SapphireWidgets.ResizeParentIframe != 'undefined') {\n\t\t\t// In case we're inside an iframe, we try to resize it first.\n\t\t\tSapphireWidgets.ResizeParentIframe.resize();\n\t\t}\n\t};\n\n\tSapphireWidgets.ExpandableLink = { create };\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/expandable-link/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/fullscreen-tabs-wrapper/scripts.js":
/*!********************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/fullscreen-tabs-wrapper/scripts.js ***!
  \********************************************************************************/
/***/ (function() {

eval("/* Component FullScreenTabsWrapper */\nSapphireWidgets.FullScreenTabsWrapper = () => {\n\t$(document).ready(function() {\n\t\t$('.TabWrapper').click(function() {\n\t\t\tconst $wrapper = $(this).closest('.FullScreenTabsWrapper__Tabs');\n\t\t\t$wrapper.find('*').removeClass('Active');\n\n\t\t\t$(this).addClass('Active');\n\t\t});\n\t});\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/fullscreen-tabs-wrapper/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/generic-card/scripts.js":
/*!*********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/generic-card/scripts.js ***!
  \*********************************************************************/
/***/ (function() {

eval("/* Component PersonCard */\n$(document).ready(function() {\n\tvar PersonCardEvent = function() {\n\t\t$('.IsExpandable .PersonCard__headerLeftInfo, .IsExpandable .PersonCard__content')\n\t\t\t.off('click')\n\t\t\t.on('click', function() {\n\t\t\t\tconst $header = $(this).closest('.PersonCard_header');\n\t\t\t\tconst $onCardOpenLink = $header.find('.PersonCard__OnCardOpenLink');\n\t\t\t\tconst $onCardCloseLink = $header.find('.PersonCard__OnCardCloseClick');\n\t\t\t\tconst $content = $header.next();\n\n\t\t\t\tconst $card = $(this).closest('.PersonCard');\n\n\t\t\t\t$content.removeClass('IsExpanded');\n\n\t\t\t\tif ($card.hasClass('IsOpen')) {\n\t\t\t\t\t$onCardCloseLink.triggerHandler('click');\n\t\t\t\t\t$card.removeClass('IsOpen');\n\t\t\t\t} else {\n\t\t\t\t\t$onCardOpenLink.triggerHandler('click');\n\n\t\t\t\t\t$content.addClass('IsExpanded');\n\n\t\t\t\t\t$card.addClass('IsOpen');\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\t$('.StopPropagation').click(function(event) {\n\t\tevent.stopPropagation();\n\t});\n\n\tPersonCardEvent();\n\n\tosAjaxBackend.BindAfterAjaxRequest(PersonCardEvent);\n});\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/generic-card/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/generic-gallery/scripts.js":
/*!************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/generic-gallery/scripts.js ***!
  \************************************************************************/
/***/ (function() {

eval("/* Component GenericGallery */\n(function($, window, document, SapphireWidgets) {\n\tvar create = function(config) {\n\t\twindow[config.widgetId] = new GenericGallery(config);\n\t};\n\n\tvar GenericGallery = function(config) {\n\t\tthis.config = config;\n\t\tthis.$widget = $('#' + this.config.widgetId).css('display', 'block');\n\t\tthis.equalHeight = this.config.equalHeight;\n\t\tif (\n\t\t\tthis.$widget.find('> .GenericGallery-content > span').length === 1 &&\n\t\t\tthis.$widget.find('.GenericGallery-content > span').hasClass('ListRecords')\n\t\t) {\n\t\t\tthis.$gallery = this.$widget.find('> .GenericGallery-content > span.ListRecords');\n\t\t} else {\n\t\t\tthis.$gallery = this.$widget.find('> .GenericGallery-content');\n\t\t}\n\n\t\tlet templateColumn = 'repeat(' + this.config.columnSizing + ', minmax(' + this.config.columnMinWidth + ', 1fr))';\n\n\t\tif (this.config.maxItemsRow > 0) {\n\t\t\ttemplateColumn = `repeat(${this.config.columnSizing}, minmax(max(${this.config.columnMinWidth}, (100% - (${this.config.maxItemsRow} - 1) * ${this.config.gapColumn}px) / ${this.config.maxItemsRow}), 1fr))`;\n\t\t}\n\n\t\tthis.$gallery.css({\n\t\t\tdisplay: 'grid',\n\t\t\tgridTemplateColumns: templateColumn,\n\t\t});\n\n\t\tthis.$galleryItems = this.$gallery.children();\n\t\tthis.$galleryItems.each(function() {\n\t\t\tif (!$(this).hasClass('GenericGallery-item')) {\n\t\t\t\t$(this).wrap('<div class=\"GenericGallery-item\"></div>');\n\t\t\t}\n\t\t});\n\t};\n\n\tSapphireWidgets.GenericGallery = {\n\t\tcreate: create,\n\t};\n})(jQuery, window, document, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/generic-gallery/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/generic-grid/scripts.js":
/*!*********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/generic-grid/scripts.js ***!
  \*********************************************************************/
/***/ (function() {

eval("/* Component GenericGrid */\n(function ($, window, document, SapphireWidgets) {\n\tvar allGenericGrids = [];\n\n\tvar create = function (config) {\n\t\twindow[config.widgetId] = new GenericGrid(config);\n\t\tallGenericGrids.push(window[config.widgetId]);\n\t};\n\n\tvar GenericGrid = function (config) {\n\t\tvar _this = this;\n\t\tthis.config = config;\n\t\tconsole.log(this.config);\n\t};\n\n\tSapphireWidgets.GenericGrid = {\n\t\tcreate: create,\n\t};\n\n})(jQuery, window, document, SapphireWidgets);\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/generic-grid/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/horizontal-toolbar/scripts.js":
/*!***************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/horizontal-toolbar/scripts.js ***!
  \***************************************************************************/
/***/ (function() {

eval("/* Component HorizontalToolbar */\r\n(function($, window, SapphireWidgets) {\r\n\tconst create = config => {\r\n\t\tconst $widget = $('#' + config.widgetId);\r\n\r\n\t\t$(document).ready(() => init($widget, config));\r\n\r\n\t\tif (config.isArrowNavigation) {\r\n\t\t\t$(window).load(() => {\r\n\t\t\t\tconst $itemWrapper = $widget.find('.MenuItemWrapper.Active');\r\n\t\t\t\tif ($itemWrapper.length) {\r\n\t\t\t\t\t$itemWrapper[0].scrollIntoView({\r\n\t\t\t\t\t\tbehavior: 'auto',\r\n\t\t\t\t\t\tblock: 'end',\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst init = ($widget, config) => {\r\n\t\tif (config.isArrowNavigation) {\r\n\t\t\thandleArrows($widget);\r\n\r\n\t\t\tconst $toolbarItems = $widget.find('.Toolbar__Items');\r\n\t\t\tconst $listItems = $widget.find('.Toolbar__Items .ListRecords');\r\n\t\t\tconst $btnRight = $widget.find('.Toolbar__rightBtn');\r\n\t\t\tconst $btnLeft = $widget.find('.Toolbar__leftBtn');\r\n\r\n\t\t\t$toolbarItems.scroll(() => handleArrows($widget));\r\n\r\n\t\t\t$btnRight.click(function() {\r\n\t\t\t\tvar currentScroll = $toolbarItems.scrollLeft();\r\n\t\t\t\tvar maxScrolll = $listItems.width() - $toolbarItems.width();\r\n\t\t\t\tvar sideWidth = maxScrolll - 50;\r\n\t\t\t\t$toolbarItems.scrollLeft(currentScroll + 50);\r\n\r\n\t\t\t\tif (currentScroll == sideWidth) $btnRight.addClass('Disabled');\r\n\t\t\t\tif (currentScroll != 50) $btnLeft.removeClass('Disabled');\r\n\t\t\t});\r\n\r\n\t\t\t$btnLeft.click(function() {\r\n\t\t\t\tvar currentScroll = $toolbarItems.scrollLeft();\r\n\t\t\t\tvar maxScrolll = $listItems.width() - $toolbarItems.width();\r\n\t\t\t\tvar sideWidth = maxScrolll - 50;\r\n\t\t\t\t$toolbarItems.scrollLeft(currentScroll - 50);\r\n\r\n\t\t\t\tif (currentScroll != sideWidth) $btnRight.removeClass('Disabled');\r\n\t\t\t\tif (currentScroll == 50) $btnLeft.addClass('Disabled');\r\n\t\t\t});\r\n\r\n\t\t\t$(window).on('resize.toolbar', () => handleArrows($widget));\r\n\t\t} else {\r\n\t\t\thandleResize($widget);\r\n\t\t\tbindEventsClick($widget);\r\n\r\n\t\t\t$(window).on('resize.toolbar', () => handleResize($widget));\r\n\r\n\t\t\twindow.addEventListener('ToolbarFixed', () => handleResize($widget), false);\r\n\t\t}\r\n\t};\r\n\r\n\thandleArrows = $widget => {\r\n\t\tconst $toolbarItems = $widget.find('.Toolbar__Items');\r\n\t\tconst $listItems = $widget.find('.Toolbar__Items .ListRecords');\r\n\t\tconst $btnRight = $widget.find('.Toolbar__rightBtn');\r\n\t\tconst $btnLeft = $widget.find('.Toolbar__leftBtn');\r\n\r\n\t\tlet currentScroll = $toolbarItems.scrollLeft();\r\n\t\tlet menuWidth = $listItems.width();\r\n\t\tlet externalWidth = $toolbarItems.width();\r\n\t\tvar maxScrolll = menuWidth - externalWidth;\r\n\r\n\t\tif (externalWidth > menuWidth) {\r\n\t\t\t$btnLeft.hide();\r\n\t\t\t$btnRight.hide();\r\n\r\n\t\t\t$widget.find('.Toolbar_container').addClass('Toolbar_container--noarrows');\r\n\t\t} else {\r\n\t\t\t$btnLeft.show();\r\n\t\t\t$btnRight.show();\r\n\r\n\t\t\t$widget.find('.Toolbar_container').removeClass('Toolbar_container--noarrows');\r\n\t\t}\r\n\r\n\t\tif (currentScroll === 0) $btnLeft.addClass('Disabled');\r\n\t\telse $btnLeft.removeClass('Disabled');\r\n\r\n\t\tif (currentScroll >= maxScrolll) $btnRight.addClass('Disabled');\r\n\t\telse $btnRight.removeClass('Disabled');\r\n\t};\r\n\r\n\thandleResize = $widget => {\r\n\t\tlet itemsTotal = 0;\r\n\t\tlet hasItemsHidden = false;\r\n\r\n\t\tconst $listItems = $widget.find('.Toolbar__Items .ListRecords');\r\n\t\t$listItems.find('> a[ui]').css('display', 'none');\r\n\r\n\t\tconst menuWidth = $widget.find('.Toolbar__Items').outerWidth(true);\r\n\r\n\t\t$listItems.find('a[ui]').each(function() {\r\n\t\t\titemsTotal += parseInt($(this).outerWidth(true), 10);\r\n\r\n\t\t\tif (itemsTotal + 90 < menuWidth) {\r\n\t\t\t\t$(this).css('display', 'block');\r\n\t\t\t} else {\r\n\t\t\t\thasItemsHidden = true;\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (hasItemsHidden && !$listItems.find('.Toolbar__MoreOptions').length) {\r\n\t\t\t$widget\r\n\t\t\t\t.find('.Toolbar__MoreOptions')\r\n\t\t\t\t.clone()\r\n\t\t\t\t.css('display', 'block')\r\n\t\t\t\t.appendTo($listItems);\r\n\r\n\t\t\thasItemsHidden = false;\r\n\t\t}\r\n\r\n\t\tconst $optionsList = $widget.find('.Toolbar__Items .Toolbar__MoreOptionsList');\r\n\r\n\t\t$listItems.find('.Toolbar__MoreOptions').css('display', $optionsList.length ? 'block' : 'none');\r\n\r\n\t\tconst $hiddenItems = $listItems.find('> a[ui]').filter(function() {\r\n\t\t\treturn $(this).css('display') == 'none';\r\n\t\t});\r\n\r\n\t\t$optionsList.empty();\r\n\r\n\t\tconst hasNotificationHidden = $hiddenItems.find('.MenuItemWrapper_Badge:not(:empty)').length !== 0;\r\n\t\tconst $trigger = $widget.find('.Toolbar__Items .Toolbar__MoreOptionsIcon');\r\n\r\n\t\tif (hasNotificationHidden) $trigger.addClass('Toolbar__MoreOptionsIcon--notification');\r\n\t\telse $trigger.removeClass('Toolbar__MoreOptionsIcon--notification');\r\n\r\n\t\t$hiddenItems\r\n\t\t\t.clone()\r\n\t\t\t.css('display', 'block')\r\n\t\t\t.appendTo($optionsList);\r\n\t};\r\n\r\n\tbindEventsClick = $widget => {\r\n\t\tconst $moreOptions = $widget.find('.Toolbar__Items .Toolbar__MoreOptions');\r\n\t\tconst $trigger = $widget.find('.Toolbar__Items .Toolbar__MoreOptionsIcon');\r\n\t\tconst $optionsList = $widget.find('.Toolbar__MoreOptionsList');\r\n\r\n\t\t$trigger.on('click', event => {\r\n\t\t\t$moreOptions.toggleClass('Toolbar__MoreOptions--open');\r\n\t\t\tevent.stopPropagation();\r\n\t\t});\r\n\r\n\t\t$optionsList.on('mousewheel', event => {\r\n\t\t\tevent.stopPropagation();\r\n\t\t});\r\n\r\n\t\t$('body').on('mouseup', event => {\r\n\t\t\tconst $target = $(event.target).parents();\r\n\r\n\t\t\tif (!$target.andSelf().is($moreOptions)) {\r\n\t\t\t\t$moreOptions.removeClass('Toolbar__MoreOptions--open');\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tSapphireWidgets.HorizontalToolbar = {\r\n\t\tcreate,\r\n\t};\r\n})(jQuery, window, SapphireWidgets);\r\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/horizontal-toolbar/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/hour-picker/scripts.js":
/*!********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/hour-picker/scripts.js ***!
  \********************************************************************/
/***/ (function() {

eval("/* Component HourPicker */\n(function($, window, SapphireWidgets) {\n\tclass HourPicker {\n\t\tconstructor(config) {\n\t\t\t// Options used by jQuery Timerpicker (External Lib)\n\t\t\tthis.options = {\n\t\t\t\t...config,\n\t\t\t};\n\n\t\t\tSapphireWidgets.HourPicker.allIntances.push(config.widgetId);\n\n\t\t\tthis.onComponentInit();\n\t\t}\n\n\t\tisComponentValid() {\n\t\t\tlet valid = true;\n\t\t\tlet message = `Component HourPicker (${this.options.widgetId}):`;\n\t\t\tlet errors = '';\n\n\t\t\tif (this.$model.length && this.$model.length > 1) {\n\t\t\t\terrors = `${errors} - Needs one - and just one - Input element.`;\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tif (!this.$model.length && this.$component.find('.HourPicker__Placeholder input').length) {\n\t\t\t\terrors = `${errors}\\n - The Input element must be of type Text.`;\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tif (!valid) console.error(`${message} ${errors}`);\n\n\t\t\treturn valid;\n\t\t}\n\n\t\tsetComponentPosition() {\n\t\t\tconst $widget = $('.ui-timepicker-container');\n\t\t\tconst labelLeft = this.$label.offset().left;\n\t\t\tconst labelWidth = this.$label.width();\n\t\t\tconst labelOuterWidth = this.$label.outerWidth();\n\t\t\tconst widgetOuterWidth = $widget.outerWidth();\n\t\t\tconst widgetMinWidth = +$widget.css('min-width').replace('px', '');\n\t\t\tconst isOutsideWindow =\n\t\t\t\tlabelLeft + labelOuterWidth > $(window).scrollLeft() + $(window).width() - widgetOuterWidth;\n\n\t\t\t$widget.css({\n\t\t\t\tleft: () => {\n\t\t\t\t\tlet value = labelLeft - (widgetMinWidth - labelWidth) / 2;\n\n\t\t\t\t\tif (isOutsideWindow) value = labelLeft + labelWidth - widgetOuterWidth;\n\t\t\t\t\telse if (value < 0) value = labelLeft;\n\n\t\t\t\t\treturn value;\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tsetElementClass(selector, className) {\n\t\t\treturn className ? $(selector).addClass(className) : false;\n\t\t}\n\n\t\tdefineTimeFormat() {\n\t\t\tlet format = [];\n\t\t\tlet amPm = '';\n\n\t\t\tformat.push(this.options.is24hFormat ? 'HH' : 'hh');\n\t\t\tif (this.options.showMinutes) format.push('mm');\n\t\t\tif (this.options.showSeconds) format.push('ss');\n\t\t\tif (!this.options.is24hFormat) amPm = ' p';\n\n\t\t\treturn `${format.join(':')}${amPm}`;\n\t\t}\n\n\t\tconvertTime12to24(value) {\n\t\t\tconst [time, modifier] = value.split(' ');\n\t\t\tlet [hours, minutes = '00', seconds = '00'] = time.split(':');\n\n\t\t\tif (hours === '12') hours = '00';\n\t\t\tif (modifier === 'PM') hours = parseInt(hours, 10) + 12;\n\n\t\t\treturn `${hours}:${minutes}:${seconds}`;\n\t\t}\n\n\t\tconvertTimeFormatToMask(value = '') {\n\t\t\treturn value.replace(/[a-zA-Z]+/g, '--');\n\t\t}\n\n\t\tonChangeEvent(value = '') {\n\t\t\tlet model = '01-01-1900 00:00:00'; //i.e. null\n\t\t\tlet label = this.convertTimeFormatToMask(this.options.timeFormat);\n\n\t\t\tif (value && !!value.trim()) {\n\t\t\t\t// This condition is correct, model always uses the 24h format\n\t\t\t\tmodel = this.options.is24hFormat ? value : this.convertTime12to24(value);\n\t\t\t\tlabel = value;\n\t\t\t}\n\n\t\t\tif (this.options.isNotifyEnabled) OsNotifyWidget(this.options.hourPickerFakeNotifyId, model);\n\t\t\tif (this.options.isTextTriggerable) this.$label.text(label);\n\n\t\t\tthis.$model.val(model);\n\t\t\tthis.$model.change();\n\n\t\t\treturn;\n\t\t}\n\n\t\tonComponentInit() {\n\t\t\tthis.$component = $(`#${this.options.widgetId}`);\n\t\t\tthis.$model = this.$component.find('.HourPicker__Placeholder input[type=\"text\"]');\n\t\t\tthis.$input = this.$component.find('.HourPicker__Displayed .HourPicker__InputValue');\n\t\t\tthis.$element = this.$input;\n\n\t\t\tthis.options.timeFormat = this.defineTimeFormat();\n\n\t\t\tif (!this.isComponentValid()) return;\n\t\t\telse {\n\t\t\t\tconst $container = this.$component;\n\n\t\t\t\tif (this.options.isTextTriggerable) {\n\t\t\t\t\t$container.addClass('HourPicker--textTrigger');\n\n\t\t\t\t\tthis.$label = $container.find('.HourPicker__Displayed .HourPicker__LabelValue');\n\t\t\t\t\tthis.$element = this.$label;\n\n\t\t\t\t\tthis.$label.text(this.convertTimeFormatToMask(this.options.timeFormat));\n\n\t\t\t\t\tthis.$label.on('click', () => {\n\t\t\t\t\t\tthis.$label.timepicker().open();\n\n\t\t\t\t\t\tthis.setComponentPosition();\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (this.options.isClearable) {\n\t\t\t\t\tthis.$buttonClear = $container.find('.HourPicker__Displayed .HourPicker__ButtonClear');\n\n\t\t\t\t\tthis.$buttonClear.on('click', () => {\n\t\t\t\t\t\tthis.$input.val('');\n\t\t\t\t\t\tthis.onChangeEvent();\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.$element.timepicker({\n\t\t\t\t\t...this.options,\n\t\t\t\t\tchange: time => this.onChangeEvent(time ? $().timepicker.formatTime(this.options.timeFormat, time) : null),\n\t\t\t\t});\n\n\t\t\t\tthis.setElementClass('.ui-timepicker-container', this.options.currentLocale === 'AR' ? 'rtl' : 'ltr');\n\n\t\t\t\tthis.$input.prop('readonly', !this.options.isTypeEnabled);\n\t\t\t\tthis.$input.prop('placeholder', this.options.timeFormat);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst create = config => {\n\t\twindow[config.widgetId] = new HourPicker(config);\n\t};\n\n\tSapphireWidgets.HourPicker = {\n\t\tcreate,\n\t\tallIntances: [],\n\t};\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/hour-picker/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/iframe-loader/scripts.js":
/*!**********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/iframe-loader/scripts.js ***!
  \**********************************************************************/
/***/ (function() {

eval("var inlineMenu_notifyWidget;\n$.fn.menuInline = function (notifyId, type, isFullWidth = false, actionsClass, _backgroundColor, dataId) {\n  /* type: INLINE; MENU; */\n  var typeINLINE = \"INLINE\";\n  var typeBALLON = \"BALLON\";\n  var _id = this.attr('id');\n  inlineMenu_notifyWidget = notifyId;\n  var GetLinkHref = function (widget) {\n    var linkHref;\n    var isAButton = false;\n    try {\n      //Checks if the id is from a link or not\n      linkHref = $(widget).attr('href');\n\n      //Tests for visibility/existence\n      if (typeof linkHref == 'undefined') {\n        var onClick = widget.getAttribute('onclick');\n        if (typeof onClick != 'undefined') {\n          isAButton = true;\n          if (onClick != null) {\n            var hrefMatch;\n            if ((hrefMatch = onClick.toString().match(/href='([^']*)'/)) != null) {\n              linkHref = hrefMatch[1];\n            }\n          }\n        }\n      } //else: throw (\"Inexistent or Invisible button\");\n    } catch (e) { }\n    return [linkHref, isAButton];\n  }\n\n  linkId = \"#\" + _id;\n\n  var linkWidget;\n  try { linkWidget = $(linkId).get(0); } catch (e) { }\n  if (typeof linkWidget == 'undefined') {\n    //Case the widget is inexistent or invisible, it will show no errors.\n    return;\n  }\n\n  var getLinkResult = GetLinkHref(linkWidget);\n  var linkHref = getLinkResult[0];\n  var isAButton = getLinkResult[1];\n\n  if (typeof linkHref == 'undefined' || linkHref == \"\" || linkHref == \"#\" || linkHref.indexOf(\"javascript:\") == 0) {\n    try {\n      window.OsHandleException(new Error(\"Popup link id must be the id of a Link or Button Widget with Method Navigate.\"), outsystems.osErrorCodes.SystemJavascriptError, 'Popup_Editor');\n    } catch (e) { }\n    return;\n  }\n\n  if (isAButton) {\n    //remove the existing on-click\n    linkWidget.setAttribute('onclick', linkWidget.getAttribute('onclick').toString().replace('window.location.href=', 'return false;window.location.href='));\n  }\n\n  // if there's a confirmation message, store in an attribute the result\n  if (linkWidget.getAttribute('onclick') != null) {\n    linkWidget.setAttribute('onclick', linkWidget.getAttribute('onclick').toString().replace(\"if( ret != true )\", \"$('\" + linkId + \"').get(0).setAttribute('confirmed', ret); if( ret != true )\"));\n  }\n\n\n  function menuPositionNotify(id, context) {\n    //var _this = $(this);\n    var _this = $(\"#\" + id);\n    var Xx = 0;\n    var Yy = 0;\n    var Ww = 0;\n    var Hh = 0;\n\n    /* Get the menu element. */\n    var _el = $(\"div[menu-type=\" + id + \"]\");\n\n    /* Get the dimensions of the button. */\n    buttonHh = _this.outerHeight();\n    buttonWw = _this.outerWidth();\n\n    var buttonY = (_this.position().top + buttonHh) - (buttonHh / 2);\n    var buttonX = _this.offset().left - (buttonWw / 2);\n    //var buttonX = _this.position().left;\n\n    /* Get the distance of menu button and the parent element */\n    var popupParentXx = (_this.offset().left - _this.position().left);\n\n    var popupXx = _el.offset().left;\n    var popupWw = _el.outerWidth();\n\n    Xx = Math.abs(buttonX - $('body').scrollLeft() - popupParentXx);\n    Yy = Math.abs((buttonHh - buttonY) - $('body').scrollTop());\n\n    /* Check if clicked position plus the popup width exceed the window width. */\n    if ((buttonX + popupWw - $('body').scrollLeft()) > $(context).width()) {\n      Xx = ((buttonX - popupWw) - $('body').scrollLeft() - popupParentXx) + (buttonWw);\n      //Xx = ($(window).width() - popupWw) - $('body').scrollLeft();\n    }\n\n    /* Set menu position. */\n    _el.css({ 'left': Xx + 'px', 'top': buttonY + 'px' });\n\n    /* Refresh value */\n    popupXx = _el.offset().left;\n\n    var _balloonEl = _el.children(\".menu-inline\").children(\".menu-inline-balloon\");\n\n    var _balloonXx = _balloonEl.offset().left;\n    var _balloonWw = _balloonEl.outerWidth();\n    var _balloonPosXx = Math.abs(buttonX - Xx - popupParentXx);\n\n    //console.log(\"res: \" + (_balloonPosXx + _balloonWw) + \" (\" + _balloonXx + \" or \" + (_balloonPosXx + Xx) + \" + \" + _balloonWw + \") \" + \" > \" + (Xx + popupWw) +  \" (\" + Xx + \" + \" + popupWw + \") \");\n\n    /* Is the balloon icon positioned out of the popup menu? */\n    if (((_balloonPosXx + Xx) + _balloonWw) > (Xx + popupWw)) {\n      _balloonPosXx = (_balloonPosXx - _balloonWw);\n    }\n\n    /* Set position of the balloon effect. */\n    _balloonEl.css('left', _balloonPosXx + 'px');\n\n    inlineMenu_notifyWidget = notifyId;\n  }\n\n  function menuNotifyEvents(id) {\n    var context = \"MainWorkArea\";\n    menuPositionNotify(id, context);\n\n    /* v *** Hide popup when click outside *** v */\n    function PMClickOutside(event) {\n      if (event.hasOwnProperty('target')) {\n        var target = $(event.target);\n        /*if ((target.parents().index($('a[sapphirehospital], .HospitalPopUp')) == -1)) {}*/\n        if (!$(event.target).closest('.menu-inline, .os-internal-ui-autocomplete, .os-internal-ui-menu-item, .os-internal-ui-corner-all, ui-autocomplete-ite').length) {\n          $('.menu-inline:visible').remove();\n        }\n      }\n    }\n\n    var _PMIsDrag = false;\n    var _PMIsClick = false;\n    $(document).on('touchstart', function (event) {\n      _PMIsDrag = false;\n      _PMIsClick = true;\n    });\n    $(document).on('touchmove', function (event) {\n      _PMIsDrag = true;\n    });\n    $(document).on('click', function (event) {\n      PMClickOutside(event);\n      _PMIsDrag = false;\n      _PMIsClick = false;\n    });\n    $(document).on('touchend', function (event) {\n      if (!_PMIsDrag && _PMIsClick) {\n        PMClickOutside(event);\n      }\n      _PMIsDrag = false;\n      _PMIsClick = false;\n    });\n    /* ^ *** Hide popup when click outside *** ^ */\n  }\n\n\n  $(linkId).off('click').on('click', function (event) {\n    if (type == typeBALLON) {\n      /* Ensure to close all the opened menus in the page. */\n      $(\"div.menu-inline-wrapper[menu-type]\").html(\"\");\n    }\n\n    var _linkId = $(this).attr('id');\n    //The clickHandler event is registered in osjs and $ for compatibillity reasons, they must not run both for the same click.\n    //Variable is set to false in RichWidgets_Popup_Editor_resize function.\n    /* if($.data(event.target,\"os-internal-processing\") == true){\n        return false;\n    } else {\n        $.data(event.target,\"os-internal-processing\", true);\n    }*/\n\n    //Check if the clicked link is disabled\n    if (linkWidget.getAttribute('disabled') != null) {\n      var linkDisabled = linkWidget.getAttribute('disabled').toString().toLowerCase();\n      if (linkDisabled == 'disabled' || linkDisabled.indexOf('true') != -1) {\n        return false;\n      }\n    }\n\n    if (linkWidget.getAttribute(\"confirmed\") == 'false') {\n      return false;\n    }\n    if (OsIsIE()) {\n      osFocusBackend.ClearFocusedElement();\n    }\n\n    var wrapper = $(\"#\" + $(\"div[menu-type=\" + _linkId + \"]\").attr(\"id\"));\n    wrapper.html(\"\");\n    var popupDiv;\n    var _iframe;\n    var pleaseWaitDiv;\n\n    var _menu;\n    var _menuContent;\n    var waitText = \"Loading...\";\n\n    if (type == typeINLINE) {\n      popupDiv = $(\"<div class='iframe-loading' style='text-align: center;'></div>\").appendTo(wrapper);\n      _iframe = $('<iframe scrolling=\"auto\" frameborder=\"0\" src=\"javascript:void(0);\" style=\"width: ' + (isFullWidth ? '100%' : '0') + '; height: 0;\" />');\n\n      if (dataId) {\n        _iframe.attr('data-id', dataId);\n      }\n\n      _iframe.appendTo(wrapper);\n    }\n    else if (type == typeBALLON) {\n      wrapper.attr(\"class\", \"menu-inline-wrapper\");\n\n      _menu = $('<div class=\"menu-inline\"></div>').appendTo(wrapper);\n      var _menuBallon = $('<div class=\"menu-inline-balloon\"></div>').appendTo(_menu);\n      _menuContent = $('<div class=\"menu-inline-content\"></div>').appendTo(_menu);\n      popupDiv = $(\"<div class='iframe-loading' style='text-align: center;'></div>\").appendTo(_menuContent);\n\n      _iframe = $('<iframe scrolling=\"auto\" frameborder=\"0\" src=\"javascript:void(0);\" style=\"width: ' + (isFullWidth ? '100%' : '0') + '; height: 0;\" />');\n\n      if (dataId) {\n        _iframe.attr('data-id', dataId);\n      }\n\n      _iframe.appendTo(_menuContent);\n    }\n\n    pleaseWaitDiv = popupDiv.prepend(\"<span style='margin-top: 25px;' class='Text_Note'>\" + waitText + \"</span>\");\n\n    //load target page\n    var ohref = GetLinkHref(linkWidget)[0];\n    var rhref = ohref.replace(/(\\?|&)_=.*?(&|$)/, \"$1_=\" + (+ new Date().now) + \"$2\");\n    var xhref = rhref + ((rhref == ohref) ? (rhref.indexOf('?') >= 0 ? \"&\" : \"?\") + \"_=\" + (+new Date) : '');\n\n    _iframe.attr('src', xhref);\n    (function (popupDiv) {\n      _iframe.load(function () {\n        var iframeContext = $(this).contents();\n\n        const $header = iframeContext.find('.MainInteractiveCard-iframe-actions');\n\n        if ($header.length && actionsClass) {\n          $header.addClass(actionsClass);\n        }\n\n        iframeContext.find(\"head\").append($(\"<style type='text/css'>\" +\n          \"    html > body { background-color: \" + _backgroundColor + \"; min-width: \" + (isFullWidth ? \"100%\" : \"inherit\") + \"; display: inline-block; } \" +\n          \"    html { width: inherit; display: inline-block; overflow-y: hidden; } \" +\n          \"    html form { width: \" + (isFullWidth ? \"100%\" : \"inherit\") + \"; display: inline-block; } \" +\n          \"</style>\"));\n        //after loading try to resize, if it is possible resize also after each ajax call\n        popupDiv.remove();\n        $(this).css({\n          'width': (isFullWidth ? '100%' : (iframeContext.find('html form').outerWidth(true) + 1) + 'px'),\n          'height': (iframeContext.find('html form').outerHeight(true) + 1) + 'px'\n        });\n\n        if (type == typeBALLON) {\n          menuNotifyEvents(_linkId);\n        }\n\n      });\n    })(popupDiv);\n\n\n    return false;\n  });\n};\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/iframe-loader/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/input-lasa/scripts.js":
/*!*******************************************************************!*\
  !*** ./src/components/05-components/v3-pat/input-lasa/scripts.js ***!
  \*******************************************************************/
/***/ (function() {

eval("/* Component InputLASA */\n(function() {\n\tvar setupInput = function(config) {\n\t\t$('body').off('click', '#' + config.labelId);\n\t\t$('body').off('blur change input', '#' + config.inputId);\n\n\t\t$('#' + config.inputId).css('width', '100%');\n\t\t$('#' + config.labelId).css('width', '100%');\n\n\t\t$('#' + config.inputId).hide();\n\t\t$('#' + config.labelId).show();\n\n\t\tSapphireWidgets.MarkWordsFromList.handlePrompt(config);\n\n\t\t$('body').on('click', '#' + config.labelId, function() {\n\t\t\t$('#' + config.labelId).hide();\n\t\t\t$('#' + config.inputId).show();\n\t\t\t$('#' + config.inputId).focus();\n\t\t});\n\n\t\t$('body').on('blur', '#' + config.inputId, function() {\n\t\t\tSapphireWidgets.MarkWordsFromList.handlePrompt(config);\n\t\t\t$('#' + config.inputId).hide();\n\t\t\t$('#' + config.labelId).show();\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tSapphireWidgets.MarkWordsFromList.handlePrompt(config);\n\t\t\t\tSapphireWidgets.MarkWordsFromList.applyMarking({ target: config.labelId });\n\t\t\t}, 250);\n\t\t});\n\n\t\t$('body').on('change input', '#' + config.inputId, function() {\n\t\t\t$('#' + config.labelId).text($('#' + config.inputId).val());\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tSapphireWidgets.MarkWordsFromList.applyMarking({ target: 'page' });\n\t\t\t}, 250);\n\t\t});\n\t};\n\n\tvar handlePrompt = function(config) {\n\t\tif (!$('#' + config.inputId).val().length) {\n\t\t\t$('#' + config.labelId)\n\t\t\t\t.text($('#' + config.inputId).prop('placeholder'))\n\t\t\t\t.css('color', '#999');\n\t\t} else {\n\t\t\t$('#' + config.labelId)\n\t\t\t\t.text($('#' + config.inputId).val())\n\t\t\t\t.css('color', '');\n\t\t}\n\t};\n\n\tSapphireWidgets.MarkWordsFromList = SapphireWidgets.MarkWordsFromList = SapphireWidgets.MarkWordsFromList || {};\n\tSapphireWidgets.MarkWordsFromList.setupInput = setupInput;\n\tSapphireWidgets.MarkWordsFromList.handlePrompt = handlePrompt;\n})();\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/input-lasa/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/input-with-clear/scripts.js":
/*!*************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/input-with-clear/scripts.js ***!
  \*************************************************************************/
/***/ (function() {

eval("(function() {\n\tclass InputWithClear {\n\t\tconstructor(config) {\n\t\t\tthis.config = config;\n\t\t\tthis.$widget = $(`#${config.widgetId}`);\n\t\t\tthis.$input = this.$widget.find('input[type]');\n\t\t\tthis.$clear = this.$widget.find('.InputWithClear-clear');\n\t\t\tthis.$notifyLink = this.$widget.find('.InputWithClear-notify-link');\n\t\t\tthis.$widgetShield = this.$widget.find('.InputWithClear--shield');\n\t\t\tthis.onInit();\n\t\t}\n\n\t\tonInit() {\n\t\t\tthis.$input.on('keyup', e => {\n\t\t\t\tif (this.$input.val() !== '') this.$clear.show();\n\t\t\t\telse this.$clear.show();\n\t\t\t});\n\n\t\t\tthis.$input.on('blur', () => {\n\t\t\t\tif (this.$input.val() === '') {\n\t\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\t\tif ($('.daterangepicker:visible').length === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.$clear.hide();\n\t\t\t\t\t\tthis.$notifyLink.trigger('click');\n\t\t\t\t\t}, 100);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.$clear.on('click', () => {\n\t\t\t\tthis.$input.val('');\n\t\t\t\tthis.$clear.hide();\n\t\t\t\tthis.$notifyLink.trigger('click');\n\t\t\t});\n\t\t\tif (this.config.hasShield) {\n\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\tthis.$widgetShield.hide();\n\t\t\t\t}, this.config.shieldTimeout);\n\t\t\t\tif (this.config.shieldTimeout > 0) {\n\t\t\t\t\tthis.$widgetShield.on('click', () => {\n\t\t\t\t\t\tthis.$clear.hide();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst create = config => (window[config.widgetId] = new InputWithClear(config));\n\n\tSapphireWidgets.InputWithClear = {\n\t\tcreate,\n\t};\n})();\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/input-with-clear/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/input-with-list/scripts.js":
/*!************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/input-with-list/scripts.js ***!
  \************************************************************************/
/***/ (function() {

eval("(function() {\n\tclass InputWithList {\n\t\tconstructor(config) {\n\t\t\tthis.config = config;\n\t\t\tthis.$widget = $(`#${config.widgetId}`);\n\t\t\tthis.$input = this.$widget.find('input[type]');\n\t\t\tthis.$list = this.$widget.find('.InputWithList__List');\n\n\t\t\tthis.$input.val('');\n\n\t\t\tthis.onInit();\n\t\t}\n\n\t\tonInit() {\n\t\t\tthis.$input.on('keyup', e => {\n\t\t\t\t// Getting elements again in order to work when this component is cloned (e.g. when using inside ActionsMenu)\n\t\t\t\tthis.$widget = $(`#${this.config.widgetId}`);\n\t\t\t\tconst $input = this.$widget.find('input[type]');\n\t\t\t\tconst $list = this.$widget.find('.InputWithList__List');\n\t\t\t\tthis.$hiddenInput = this.$widget.find('.InputWithList__HiddenInput input');\n\n\t\t\t\tif ($input.val().trim() !== '') {\n\t\t\t\t\t$list.empty();\n\n\t\t\t\t\t$list.append(`<div><b>Create:</b> ${$input.val()}</div>`);\n\n\t\t\t\t\tif (!$list.is(':visible')) $list.show();\n\t\t\t\t} else {\n\t\t\t\t\t$list.hide();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.$list.on('click', e => {\n\t\t\t\tconst $linkNotify = this.$widget.find('.InputWithList-notify-link');\n\t\t\t\tconst $list = this.$widget.find('.InputWithList__List');\n\t\t\t\tconst $input = this.$widget.find('input[type]');\n\n\t\t\t\tthis.$hiddenInput.val($input.val());\n\t\t\t\tthis.$hiddenInput.change();\n\n\t\t\t\t$linkNotify.click();\n\t\t\t\t$list.hide();\n\t\t\t});\n\t\t}\n\t}\n\n\tconst create = config => (window[config.widgetId] = new InputWithList(config));\n\n\tSapphireWidgets.InputWithList = {\n\t\tcreate,\n\t};\n})();\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/input-with-list/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/line-add/scripts.js":
/*!*****************************************************************!*\
  !*** ./src/components/05-components/v3-pat/line-add/scripts.js ***!
  \*****************************************************************/
/***/ (function() {

eval("/* Component LineAdd */\n(function($, window, SapphireWidgets) {\n\tconst create = function(config) {\n\t\t$(window).load(function() {\n\t\t\tsetWidth(config.widgetId);\n\t\t\tSapphireWidgets.LineAdd.widgetId = config.widgetId;\n\n\t\t\tosAjaxBackend.BindAfterAjaxRequest(() => setWidth(config.widgetId));\n\t\t});\n\n\t\t$(window).on('resize.LineAdd', () => setWidth(config.widgetId));\n\t};\n\n\tconst setWidth = function(widgetId) {\n\t\twindow.setTimeout(function() {\n\t\t\tconst $widget = $(`#${widgetId || SapphireWidgets.LineAdd.widgetId}`);\n\t\t\tconst widths = [];\n\n\t\t\tfor (i = 1; i < 8; i++) {\n\t\t\t\tlet maxWidthContent = Math.max.apply(\n\t\t\t\t\tnull,\n\t\t\t\t\t$widget\n\t\t\t\t\t\t.find('.lacol' + i)\n\t\t\t\t\t\t.map(function() {\n\t\t\t\t\t\t\treturn $(this).width();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.get()\n\t\t\t\t);\n\n\t\t\t\twidths.push(maxWidthContent);\n\t\t\t\t$widget.find('.lacol' + i).width(maxWidthContent);\n\t\t\t}\n\t\t}, 100);\n\t};\n\n\tSapphireWidgets.LineAdd = { create, setWidth };\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/line-add/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/line-details-expand-box/script.js":
/*!*******************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/line-details-expand-box/script.js ***!
  \*******************************************************************************/
/***/ (function() {

eval("/* Component LineDetailsExpandBox */\n(function($, window, SapphireWidgets) {\n\tconst init = config => {\n\t\t$(`#${config.widgetId} + .LineDetailsExpandBox_action`).click(event => {\n\t\t\tevent.stopPropagation();\n\t\t});\n\t};\n\n\tconst create = config => $(document).ready(() => init(config));\n\n\tSapphireWidgets.LineDetailsExpandBox = { create };\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/line-details-expand-box/script.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/location-box/scripts.js":
/*!*********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/location-box/scripts.js ***!
  \*********************************************************************/
/***/ (function() {

eval("/* Component LocationBox */\nSapphireWidgets.LocationBox = function(widgetId) {\n\tconst $component = $(`#${widgetId}`);\n\n\tif ($component.hasClass('On')) {\n\t\t$('.DisableRoom').each(function() {\n\t\t\t$(this)\n\t\t\t\t.removeClass('Off')\n\t\t\t\t.removeClass('On');\n\t\t\t$(this)\n\t\t\t\t.parent('.RoomBox')\n\t\t\t\t.css({\n\t\t\t\t\topacity: '1',\n\t\t\t\t})\n\t\t\t\t.removeClass('Selected');\n\t\t});\n\t} else {\n\t\t$component\n\t\t\t.addClass('On')\n\t\t\t.removeClass('Off')\n\t\t\t.parent('.RoomBox')\n\t\t\t.css({\n\t\t\t\topacity: '1',\n\t\t\t})\n\t\t\t.addClass('Selected');\n\n\t\t$('.DisableRoom:not(#' + widgetId + ')').each(function() {\n\t\t\t$(this).addClass('Off');\n\t\t\t$(this).removeClass('On');\n\t\t});\n\n\t\t$('.DisableRoom.Off')\n\t\t\t.parent('.RoomBox')\n\t\t\t.css({\n\t\t\t\topacity: '0.50',\n\t\t\t})\n\t\t\t.removeClass('Selected');\n\t}\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/location-box/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/main-interactive-card/scripts.js":
/*!******************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/main-interactive-card/scripts.js ***!
  \******************************************************************************/
/***/ (function() {

eval("/* Component MainInteractiveCard */\n(function($, window, document, SapphireWidgets) {\n\tvar allMainInteractiveCards = [];\n\tvar defaultDuration = 300;\n\n\tvar create = function(config) {\n\t\tfor (var i = 0; i < allMainInteractiveCards.length; i++) {\n\t\t\tif (allMainInteractiveCards[i].config.widgetId === config.widgetId) {\n\t\t\t\tallMainInteractiveCards.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\twindow[config.widgetId] = new MainInteractiveCard(config);\n\t\tallMainInteractiveCards.push(window[config.widgetId]);\n\n\t\tif (!!!SapphireWidgets.MainInteractiveCard.afterAjaxRequestBinded && !!osAjaxBackend) {\n\t\t\tosAjaxBackend.BindAfterAjaxRequest(function() {\n\t\t\t\tvar allMainInteractiveCards = SapphireWidgets.MainInteractiveCard.all();\n\t\t\t\tallMainInteractiveCards.forEach(function(element) {\n\t\t\t\t\telement.handleHeaderWithAbsoluteButtons();\n\t\t\t\t});\n\t\t\t});\n\t\t\tSapphireWidgets.MainInteractiveCard.afterAjaxRequestBinded = true;\n\t\t}\n\t};\n\n\tvar MainInteractiveCard = function(config) {\n\t\tvar _this = this;\n\t\tthis.config = config;\n\t\tthis.isLockedOnClose = false;\n\t\tthis.isOpen = config.isOpen;\n\t\tthis.isEnabled = config.isEnabled;\n\t\tthis.isSelectable = config.isSelectable;\n\t\tthis.allowOpening = config.allowOpening;\n\t\tthis.allowMultipleOpen = config.allowMultipleOpen;\n\t\tthis.emitNotifyOnOpen = config.emitNotifyOnOpen;\n\t\tthis.hideActionsOnOpen = config.hideActionsOnOpen;\n\t\tthis.hideCaptionOnOpen = config.hideCaptionOnOpen;\n\t\tthis.hideTitleOnOpen = config.hideTitleOnOpen;\n\t\tthis.hideSubTitleOnOpen = config.hideSubTitleOnOpen;\n\t\tthis.headerHeightWhenOpen = config.headerHeightWhenOpen;\n\t\tthis.MainInteractiveCardFakeNotifyId = config.mainInteractiveCardFakeNotifyId;\n\n\t\tthis.$widget = $('#' + config.widgetId);\n\t\tthis.$widget.css('display', 'block');\n\t\tthis.$card = this.$widget.find('> .MainInteractiveCard');\n\t\tthis.$header = this.$widget.find('> .MainInteractiveCard > .MainInteractiveCard-header');\n\t\tthis.$headerText = this.$header.find('.MainInteractiveCard-header-text');\n\t\tthis.$expandIcon = this.$header.find('.MainInteractiveCard-expand-icon');\n\t\tthis.$body = this.$widget.find('> .MainInteractiveCard > div > .MainInteractiveCard-body');\n\t\tthis.$actions = this.$widget.find(\n\t\t\t'> .MainInteractiveCard > .MainInteractiveCard-header .MainInteractiveCard-header-actions'\n\t\t);\n\t\tthis.$caption = this.$widget.find(\n\t\t\t'> .MainInteractiveCard > .MainInteractiveCard-header .MainInteractiveCard-header-text-caption'\n\t\t);\n\t\tthis.$title = this.$widget.find(\n\t\t\t'> .MainInteractiveCard > .MainInteractiveCard-header .MainInteractiveCard-header-text-title'\n\t\t);\n\t\tthis.$subTitle = this.$widget.find(\n\t\t\t'> .MainInteractiveCard > .MainInteractiveCard-header .MainInteractiveCard-header-text-subtitle'\n\t\t);\n\t\tthis.$selectTrigger = this.$widget.find(\n\t\t\t'> .MainInteractiveCard > .MainInteractiveCard-header > .MainInteractiveCard-header-selectable > .MainInteractiveCard-header-selectable-trigger'\n\t\t);\n\t\tthis.$selectPlaceholder = this.$widget.find(\n\t\t\t'> .MainInteractiveCard > .MainInteractiveCard-header .MainInteractiveCard-header-selectable-placeholder'\n\t\t);\n\t\tthis.$triggerPlaceholder = this.$widget.find(\n\t\t\t'> .MainInteractiveCard > .MainInteractiveCard-header-triggerAction-placeholder'\n\t\t);\n\n\t\tif (this.$triggerPlaceholder.find('a').length === 1) {\n\t\t\tthis.$trigger = this.$triggerPlaceholder.find('a');\n\t\t}\n\n\t\tif (this.isOpen) {\n\t\t\tthis.open(false, -1);\n\t\t\tthis.$card.addClass('forceOpen');\n\t\t}\n\n\t\tthis.$card.addClass(this.headerHeightWhenOpen + 'Header');\n\n\t\tif (this.allowOpening) {\n\t\t\tthis.$card.addClass('allowOpening');\n\t\t}\n\n\t\tthis.attachEvents();\n\n\t\tvar observer = new MutationObserver(function(mutations) {\n\t\t\tmutations.forEach(function(mutation, index) {\n\t\t\t\t_this.handleHeaderWithAbsoluteButtons();\n\t\t\t});\n\t\t});\n\n\t\tobserver.observe(document.getElementById(config.widgetId), {\n\t\t\tchildList: true,\n\t\t\tsubtree: true,\n\t\t\tattributes: false,\n\t\t});\n\t};\n\n\tMainInteractiveCard.prototype.handleHeaderWithAbsoluteButtons = function() {\n\t\tvar _this = this;\n\t\tif (!!this.$body.find('> div .MainInteractiveCard-absolute-actions').length && this.isOpen) {\n\t\t\tvar absoluteActionsWidth = Math.max.apply(\n\t\t\t\tMath,\n\t\t\t\tthis.$body\n\t\t\t\t\t.find('> div .MainInteractiveCard-absolute-actions')\n\t\t\t\t\t.map(function() {\n\t\t\t\t\t\treturn $(this).outerWidth(true);\n\t\t\t\t\t})\n\t\t\t\t\t.get()\n\t\t\t);\n\t\t\tvar headerMaxWidth = this.$header.width() - absoluteActionsWidth;\n\t\t\tif (headerMaxWidth > 10) {\n\t\t\t\tthis.$headerText.css({\n\t\t\t\t\tmaxWidth: headerMaxWidth + 'px',\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.$body\n\t\t\t\t.find('> div .MainInteractiveCard-absolute-actions .MainInteractiveCard--close')\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\t_this.close();\n\t\t\t\t});\n\t\t}\n\t};\n\n\tMainInteractiveCard.prototype.attachEvents = function() {\n\t\tvar _this = this;\n\t\tthis.$header\n\t\t\t.find('.MainInteractiveCard--open:not([disabled])')\n\t\t\t.off('click')\n\t\t\t.on('click', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\t_this.open(true);\n\t\t\t});\n\t\tthis.$header\n\t\t\t.find('.MainInteractiveCard--close')\n\t\t\t.off('click')\n\t\t\t.on('click', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\t_this.close();\n\t\t\t});\n\t\tif (this.allowOpening) {\n\t\t\tconst clickAction = function(evt) {\n\t\t\t\tif ($(evt.target).hasClass('Button')) {\n\t\t\t\t\t// the user clicked on a Button inside the header, nothing to do here\n\t\t\t\t} else {\n\t\t\t\t\tif (_this.isOpen) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t_this.$widget.find('iframe').length === 1 &&\n\t\t\t\t\t\t\t!_this.$widget.find('iframe').hasClass('cke_wysiwyg_frame')\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// do not close when and iframe exists\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t_this.$actions.find('a').length > 0 &&\n\t\t\t\t\t\t\t_this.$actions.find('.MainInteractiveCard--close').length > 0\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// do not close when the card has actions\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_this.close();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this.open(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.$headerText.off('click').on('click', function(e) {\n\t\t\t\tclickAction(e);\n\t\t\t});\n\t\t\tthis.$expandIcon.off('click').on('click', function(e) {\n\t\t\t\tclickAction(e);\n\t\t\t});\n\t\t}\n\t\tif (this.isSelectable) {\n\t\t\tthis.$selectTrigger.off('click').on('click', function(e) {\n\t\t\t\tif (_this.$selectPlaceholder.find('a').length === 1) {\n\t\t\t\t\t_this.$selectPlaceholder.find('a').click();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('You need 1 link in this placeholder.');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\tMainInteractiveCard.prototype.open = function(sendNotify, duration) {\n\t\tvar duration = duration || defaultDuration;\n\t\tthis.isOpen = true;\n\t\tthis.$card.addClass('isOpen');\n\t\tif (this.hideActionsOnOpen) {\n\t\t\tthis.$actions.css('display', 'none');\n\t\t}\n\t\tif (this.hideTitleOnOpen) {\n\t\t\tthis.$title.css('display', 'none');\n\t\t}\n\t\tif (this.hideSubTitleOnOpen) {\n\t\t\tthis.$subTitle.css('display', 'none');\n\t\t}\n\t\tif (this.hideCaptionOnOpen) {\n\t\t\tthis.$caption.css('display', 'none');\n\t\t}\n\t\tif (this.emitNotifyOnOpen) {\n\t\t\tif (sendNotify) {\n\t\t\t\tOsNotifyWidget(this.MainInteractiveCardFakeNotifyId, 'open');\n\t\t\t}\n\t\t\tthis.$body.css('display', 'block');\n\t\t} else if (this.$trigger) {\n\t\t\tthis.$trigger.click();\n\t\t\tthis.$body.css('display', 'block');\n\t\t} else {\n\t\t\tif (duration > 0) {\n\t\t\t\tthis.$body.slideDown(duration);\n\t\t\t} else {\n\t\t\t\tthis.$body.css('display', 'block');\n\t\t\t}\n\t\t}\n\t\tif (this.$widget.find('iframe').length === 1 && !this.$widget.find('iframe').hasClass('cke_wysiwyg_frame')) {\n\t\t\tvar iframeContents = this.$widget.find('iframe').contents();\n\t\t\tiframeContents.find('.MainInteractiveCard-iframe-actions').css('visibility', 'visible');\n\t\t} else {\n\t\t\tthis.handleHeaderWithAbsoluteButtons();\n\t\t}\n\t\tif (!this.allowMultipleOpen) {\n\t\t\tallMainInteractiveCards.forEach(item => (item !== this && item.allowOpening ? item.close(duration) : null));\n\t\t}\n\t};\n\n\tMainInteractiveCard.prototype.close = function(duration) {\n\t\tvar self = this;\n\t\tvar duration = duration || defaultDuration;\n\t\tthis.isOpen = false;\n\t\tthis.$card.removeClass('isOpen');\n\t\tif (this.$widget.find('iframe').length === 1 && !this.$widget.find('iframe').hasClass('cke_wysiwyg_frame')) {\n\t\t\tthis.$widget\n\t\t\t\t.find('iframe')\n\t\t\t\t.find('.MainInteractiveCard-iframe-actions')\n\t\t\t\t.css('visibility', 'hidden');\n\t\t}\n\t\tthis.$body.slideUp(duration, function() {\n\t\t\tif (self.$card.hasClass('forceOpen')) {\n\t\t\t\tself.$card.removeClass('forceOpen');\n\t\t\t}\n\t\t});\n\t\tif (this.hideActionsOnOpen) {\n\t\t\tthis.$actions.show();\n\t\t}\n\t\tif (this.hideTitleOnOpen) {\n\t\t\tthis.$title.css('display', 'block');\n\t\t}\n\t\tif (this.hideSubTitleOnOpen) {\n\t\t\tthis.$subTitle.css('display', 'block');\n\t\t}\n\t\tif (this.hideCaptionOnOpen) {\n\t\t\tthis.$caption.css('display', 'block');\n\t\t}\n\n\t\tif (this.$header.width() - this.$actions.width() > 10) {\n\t\t\tthis.$headerText.css({\n\t\t\t\tmaxWidth: this.$header.width() - this.$actions.width() + 'px',\n\t\t\t});\n\t\t}\n\t};\n\n\tMainInteractiveCard.prototype.isOpen = function() {\n\t\treturn this.isOpen;\n\t};\n\n\tSapphireWidgets.MainInteractiveCard = {\n\t\tcreate: create,\n\t\tall: function() {\n\t\t\treturn allMainInteractiveCards;\n\t\t},\n\t};\n})(jQuery, window, document, SapphireWidgets);\n\n$(window).load(function() {\n\tif (!!$('.MainInteractiveCard').length) {\n\t\tif (!!!SapphireWidgets.MainInteractiveCard.afterAjaxRequestBinded) {\n\t\t\tosAjaxBackend.BindAfterAjaxRequest(function() {\n\t\t\t\tvar allMainInteractiveCards = SapphireWidgets.MainInteractiveCard.all();\n\t\t\t\tallMainInteractiveCards.forEach(function(element) {\n\t\t\t\t\telement.handleHeaderWithAbsoluteButtons();\n\t\t\t\t});\n\t\t\t});\n\t\t\tSapphireWidgets.MainInteractiveCard.afterAjaxRequestBinded = true;\n\t\t}\n\t}\n\n\tsetTimeout(function() {\n\t\tvar allMainInteractiveCards = SapphireWidgets.MainInteractiveCard.all();\n\t\tallMainInteractiveCards.forEach(function(element) {\n\t\t\telement.handleHeaderWithAbsoluteButtons();\n\t\t});\n\t}, 1000);\n});\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/main-interactive-card/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/menu-bar/scripts.js":
/*!*****************************************************************!*\
  !*** ./src/components/05-components/v3-pat/menu-bar/scripts.js ***!
  \*****************************************************************/
/***/ (function() {

eval("/* Component MenuBar */\nSapphireWidgets.MenuBar = function(config) {\n\t$(function() {\n\t\tvar $menuWidget = $('#' + config.menuWidget);\n\n\t\tvar menuResider = function() {\n\t\t\tvar navWidth = 0;\n\t\t\tvar availabeEspace = $menuWidget.find('.Menubar_item').width();\n\n\t\t\t$menuWidget.find('.Menubar_item .MenuItem').each(function() {\n\t\t\t\tnavWidth += $(this).outerWidth(true);\n\t\t\t});\n\n\t\t\tif (navWidth > availabeEspace) {\n\t\t\t\tvar lastItem = $menuWidget.find('.Menubar_item .MenuItem').last();\n\t\t\t\tlastItem.attr('data-width', lastItem.outerWidth(true));\n\t\t\t\tlastItem.prependTo($menuWidget.find('.Menubar__extraContainer'));\n\t\t\t\tmenuResider();\n\t\t\t} else {\n\t\t\t\tvar firstMoreElement = $menuWidget.find('.Menubar__extraContainer .MenuItem').first();\n\t\t\t\tif (navWidth + firstMoreElement.data('width') < availabeEspace) {\n\t\t\t\t\tfirstMoreElement.insertAfter($menuWidget.find('.Menubar_item .MenuItem').last());\n\t\t\t\t\tmenuResider();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$menuWidget.find('.Menubar__extraContainer').is(':empty')) {\n\t\t\t\t$menuWidget.find('.Menubar_extraItem').addClass('show');\n\t\t\t} else {\n\t\t\t\t$menuWidget.find('.Menubar_extraItem').removeClass('show');\n\t\t\t}\n\t\t};\n\n\t\t$menuWidget.find('.MenuItem').click(function() {\n\t\t\tif (\n\t\t\t\t!$(this)\n\t\t\t\t\t.parent()\n\t\t\t\t\t.hasClass('Menubar__extraContainer')\n\t\t\t) {\n\t\t\t\tif (!$(this).hasClass('active') && !$(this).hasClass('activeIndicator')) {\n\t\t\t\t\t$(this).addClass('active');\n\t\t\t\t\t$menuWidget.find('.activeIndicator').addClass('shadow');\n\t\t\t\t\t$(this)\n\t\t\t\t\t\t.find('.MenuItem_subItems')\n\t\t\t\t\t\t.toggleClass('show');\n\t\t\t\t} else if (!$(this).hasClass('active') && $(this).hasClass('activeIndicator')) {\n\t\t\t\t\t$(this).addClass('active');\n\t\t\t\t\t$(this)\n\t\t\t\t\t\t.find('.MenuItem_subItems')\n\t\t\t\t\t\t.toggleClass('show');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(this)\n\t\t\t\t\t.find('.MenuItem_subItems')\n\t\t\t\t\t.toggleClass('show');\n\t\t\t}\n\t\t});\n\n\t\t$menuWidget.find('.Menubar_extraItem .icon').click(function() {\n\t\t\t$menuWidget.find('.Menubar__extraContainer ').toggleClass('show');\n\t\t});\n\n\t\t$(document).mouseup(e => {\n\t\t\tvar $menu = $menuWidget.find('.MenuItem.active');\n\t\t\tvar $moreOptions = $menuWidget.find('.Menubar_extraItem');\n\n\t\t\t// if the target of the click isn't the menu or a descendant of the menu\n\t\t\tif ($menu.length > 0) {\n\t\t\t\tif (!$menu.is(e.target) && $menu.has(e.target).length === 0) {\n\t\t\t\t\t$menu.find('.MenuItem_subItems').removeClass('show');\n\t\t\t\t\t$('.activeIndicator').removeClass('shadow');\n\t\t\t\t\t$menuWidget.find('.MenuItem.active').removeClass('active');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$moreOptions.is(e.target) && $moreOptions.has(e.target).length === 0) {\n\t\t\t\t$moreOptions.find('.Menubar__extraContainer').removeClass('show');\n\t\t\t\t$('.activeIndicator').removeClass('shadow');\n\t\t\t}\n\t\t});\n\n\t\t$(window).on('resize load', function() {\n\t\t\tmenuResider();\n\t\t});\n\t});\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/menu-bar/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/multiple-selection-button/scripts.js":
/*!**********************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/multiple-selection-button/scripts.js ***!
  \**********************************************************************************/
/***/ (function() {

eval("/* Component MultipleSelectionButton */\nSapphireWidgets.MultipleSelectionButton = function(WrapperId) {\n\tconst $widget = $(WrapperId);\n\tconst $control = $widget.find('input[type=\"checkbox\"]');\n\n\tif ($(WrapperId + ' input[type=\"checkbox\"]').is(':disabled')) {\n\t\t$widget.addClass('disabled');\n\t} else {\n\t\t$widget.removeClass('disabled');\n\t}\n\n\tif ($(WrapperId + ' input[type=\"checkbox\"]').is(':checked')) {\n\t\t$widget.addClass('active');\n\t} else {\n\t\t$widget.removeClass('active');\n\t}\n\n\t$widget.find('input[type=\"checkbox\"]').change(function() {\n\t\tconst $parent = $(this).parent();\n\n\t\tif ($(this).is(':checked')) $parent.parent().addClass('active');\n\t\telse $parent.parent().removeClass('active');\n\t});\n\n\t$widget.find('.MultipleSelectionButton-label').click(function() {\n\t\t$control[0].click();\n\n\t\tsetTimeout(function() {\n\t\t\tif ($control.is(':checked')) $widget.addClass('active');\n\t\t\telse $widget.removeClass('active');\n\t\t}, 10);\n\t});\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/multiple-selection-button/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/panel/confirmation-panel.js":
/*!*************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/panel/confirmation-panel.js ***!
  \*************************************************************************/
/***/ (function() {

eval("/* Component ConfirmationPanel3Options ConfirmationPanel same javascript code*/\n\nSapphireWidgets.ConfirmationPanel = {\n\tisAnyPanelOpened: function() {\n\t\treturn $('body').hasClass('PanelOpened') && $('.PanelContainer:visible').length;\n\t},\n\n\ttogglePanel: function(PanelId) {\n\t\tif (!OsValidatorOnSubmit()) return;\n\n\t\tif (!SapphireWidgets.ConfirmationPanel.isAnyPanelOpened()) {\n\t\t\t$('body').addClass('PanelOpened');\n\t\t\t$('#' + PanelId).fadeIn(140);\n\n\t\t\tsetTimeout(function() {\n\t\t\t\t$('#' + PanelId)\n\t\t\t\t\t.find('.PanelContainer')\n\t\t\t\t\t.slideToggle(150);\n\t\t\t}, 100);\n\n\t\t\tif (window.frameElement) {\n\t\t\t\tSapphireWidgets.RemoteAppointment.setModalMinimized();\n\t\t\t}\n\t\t}\n\t},\n\n\tclosePanel: function(PanelId) {\n\t\t$('body').removeClass('PanelOpened');\n\t\t$('#' + PanelId).fadeOut(140);\n\n\t\tsetTimeout(function() {\n\t\t\t$('#' + PanelId)\n\t\t\t\t.find('.PanelContainer')\n\t\t\t\t.slideUp(150);\n\t\t}, 100);\n\t},\n\n\tsetPanelBehavior: function() {\n\t\t$('.Panel[confirmation-panel-trigger-elementid]').each(function() {\n\t\t\tvar this_panel = $(this);\n\t\t\t$('#' + this_panel.attr('confirmation-panel-trigger-elementid') + '')\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', function() {\n\t\t\t\t\tSapphireWidgets.ConfirmationPanel.togglePanel(this_panel.attr('id'));\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t});\n\t},\n};\n\n$(document).ready(function() {\n\tSapphireWidgets.ConfirmationPanel.setPanelBehavior();\n\tif (osAjaxBackend.EventHandlers.AfterAjaxRequest.toString().indexOf('setPanelBehavior') == -1) {\n\t\tosAjaxBackend.BindAfterAjaxRequest(SapphireWidgets.ConfirmationPanel.setPanelBehavior);\n\t}\n});\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/panel/confirmation-panel.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/panel/confirmation-popup.js":
/*!*************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/panel/confirmation-popup.js ***!
  \*************************************************************************/
/***/ (function() {

eval("/* Component ConfirmationPopup */\nvar _isInIframe = window.frameElement != undefined || false;\nSapphireWidgets.ConfirmationPopup = {\n\tisAnyConfirmationOpened: function() {\n\t\tif (_isInIframe) {\n\t\t\treturn window.top.$('body').hasClass('confirmation-opened') && window.top.$('.confirm-container:visible').length;\n\t\t} else {\n\t\t\treturn $('body').hasClass('confirmation-opened') && $('.confirm-container:visible').length;\n\t\t}\n\t},\n\n\ttoggleConfirm: function(_id, _question, _message, _notifyId, _HasNotifyOnCancel) {\n\t\tif (!OsValidatorOnSubmit()) return;\n\n\t\tif (!this.isAnyConfirmationOpened()) {\n\t\t\tvar _body = $('body');\n\t\t\tvar _bodyJS = document.body;\n\t\t\tif (_isInIframe) {\n\t\t\t\t_body = window.top.$('body');\n\t\t\t\t_bodyJS = window.top.document.body;\n\t\t\t}\n\n\t\t\t_body.addClass('confirmation-opened');\n\n\t\t\tvar _confirmId = 'confirm_' + _id;\n\n\t\t\tvar _container = document.createElement('DIV');\n\t\t\t_container.setAttribute('id', _confirmId);\n\t\t\t_container.setAttribute('class', 'confirm confirm-wb');\n\t\t\t_container.setAttribute('confirm-trigger-elementid', _id);\n\n\t\t\tvar _background = document.createElement('DIV');\n\t\t\t_background.setAttribute('class', 'confirm-background confirm-wb');\n\t\t\t_background.setAttribute('id', 'bg_' + _confirmId);\n\t\t\t_container.appendChild(_background);\n\n\t\t\tvar _confirm = document.createElement('DIV');\n\t\t\t_confirm.setAttribute('class', 'confirm-container confirm-wb');\n\t\t\t_container.appendChild(_confirm);\n\n\t\t\tvar _confirmTitle = document.createElement('DIV');\n\t\t\t_confirmTitle.setAttribute('class', 'confirm-title');\n\t\t\tvar _title = document.createTextNode(_question);\n\t\t\t_confirmTitle.appendChild(_title);\n\t\t\t_confirm.appendChild(_confirmTitle);\n\n\t\t\tvar _confirmMsg = document.createElement('DIV');\n\t\t\t_confirmMsg.setAttribute('class', 'confirm-message');\n\n\t\t\t_confirmMsg.innerHTML = _message; /* Set HTML to render the message HTML tags, similar to the Escape Content set as No. */\n\t\t\t_confirm.appendChild(_confirmMsg);\n\n\t\t\tvar _confirmActions = document.createElement('DIV');\n\t\t\t_confirmActions.setAttribute('class', 'confirm-actions');\n\t\t\t_confirm.appendChild(_confirmActions);\n\n\t\t\tvar _noBtnLnk = document.createElement('A');\n\t\t\t_noBtnLnk.setAttribute('class', 'Button Third MultiMarginRight10');\n\t\t\t_noBtnLnk.setAttribute('cancel-button', 'cancel-button');\n\t\t\t_noBtnLnk.setAttribute('ui', 'ConfirmNo1');\n\t\t\tif (_HasNotifyOnCancel == 'True') {\n\t\t\t\tif (_isInIframe) {\n\t\t\t\t\t_noBtnLnk.setAttribute(\n\t\t\t\t\t\t'onclick',\n\t\t\t\t\t\t'document.getElementById(\"' +\n\t\t\t\t\t\t\t'iframe_' +\n\t\t\t\t\t\t\t_id +\n\t\t\t\t\t\t\t'\").contentWindow.OsNotifyWidget(\"' +\n\t\t\t\t\t\t\t_notifyId +\n\t\t\t\t\t\t\t'\",\"CANCEL\"); SapphireWidgets.ConfirmationPopup.closeConfirmPopup(\"' +\n\t\t\t\t\t\t\t_confirmId +\n\t\t\t\t\t\t\t'\");'\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t_noBtnLnk.setAttribute(\n\t\t\t\t\t\t'onclick',\n\t\t\t\t\t\t'OsNotifyWidget(\"' +\n\t\t\t\t\t\t\t_notifyId +\n\t\t\t\t\t\t\t'\",\"CANCEL\"); SapphireWidgets.ConfirmationPopup.closeConfirmPopup(\"' +\n\t\t\t\t\t\t\t_confirmId +\n\t\t\t\t\t\t\t'\");'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (_isInIframe) {\n\t\t\t\t\t_noBtnLnk.setAttribute(\n\t\t\t\t\t\t'onclick',\n\t\t\t\t\t\t'SapphireWidgets.ConfirmationPopup.closeConfirmPopup(\"' + _confirmId + '\");'\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t_noBtnLnk.setAttribute(\n\t\t\t\t\t\t'onclick',\n\t\t\t\t\t\t'SapphireWidgets.ConfirmationPopup.closeConfirmPopup(\"' + _confirmId + '\");'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _noBtn = document.createTextNode('No');\n\t\t\t_noBtnLnk.appendChild(_noBtn);\n\t\t\t_confirmActions.appendChild(_noBtnLnk);\n\n\t\t\tvar _yesBtnLnk = document.createElement('A');\n\t\t\t_yesBtnLnk.setAttribute('class', 'Button SetAsValid Is_Default');\n\t\t\t_yesBtnLnk.setAttribute('cancel-button', '');\n\t\t\t_yesBtnLnk.setAttribute('ui', 'ConfirmYes1');\n\n\t\t\tif (_isInIframe) {\n\t\t\t\t_yesBtnLnk.setAttribute(\n\t\t\t\t\t'onclick',\n\t\t\t\t\t'document.getElementById(\"' +\n\t\t\t\t\t\t'iframe_' +\n\t\t\t\t\t\t_id +\n\t\t\t\t\t\t'\").contentWindow.OsNotifyWidget(\"' +\n\t\t\t\t\t\t_notifyId +\n\t\t\t\t\t\t'\",\"OK\"); SapphireWidgets.ConfirmationPopup.closeConfirmPopup(\"' +\n\t\t\t\t\t\t_confirmId +\n\t\t\t\t\t\t'\");'\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t_yesBtnLnk.setAttribute(\n\t\t\t\t\t'onclick',\n\t\t\t\t\t'OsNotifyWidget(\"' +\n\t\t\t\t\t\t_notifyId +\n\t\t\t\t\t\t'\",\"OK\"); SapphireWidgets.ConfirmationPopup.closeConfirmPopup(\"' +\n\t\t\t\t\t\t_confirmId +\n\t\t\t\t\t\t'\");'\n\t\t\t\t);\n\t\t\t}\n\t\t\tvar _yesBtn = document.createTextNode('Yes');\n\t\t\t_yesBtnLnk.appendChild(_yesBtn);\n\t\t\t_confirmActions.appendChild(_yesBtnLnk);\n\n\t\t\t_confirm.appendChild(_confirmActions);\n\n\t\t\t_container.appendChild(_confirm);\n\n\t\t\t_bodyJS.appendChild(_container);\n\n\t\t\tif (_isInIframe) {\n\t\t\t\twindow.top.$('#bg_' + _confirmId).fadeIn(140);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\twindow.top\n\t\t\t\t\t\t.$('#' + _confirmId)\n\t\t\t\t\t\t.find('.confirm-container')\n\t\t\t\t\t\t.slideToggle(150);\n\t\t\t\t\twindow.top.$('#' + _confirmId + ' [cancel-button]').focus();\n\t\t\t\t}, 100);\n\n\t\t\t\tSapphireWidgets.RemoteAppointment.setModalMinimized();\n\t\t\t} else {\n\t\t\t\t$('#bg_' + _confirmId).fadeIn(140);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t$('#' + _confirmId)\n\t\t\t\t\t\t.find('.confirm-container')\n\t\t\t\t\t\t.slideToggle(150);\n\t\t\t\t\t$('#' + _confirmId + ' [cancel-button]').focus();\n\t\t\t\t}, 100);\n\t\t\t}\n\t\t}\n\t},\n\n\tcloseConfirmPopup: function(_confirmId) {\n\t\t$('body').removeClass('confirmation-opened');\n\t\t$('body').css('overflow-y', 'scroll');\n\t\t$('#bg_' + _confirmId).fadeOut(140);\n\n\t\tsetTimeout(function() {\n\t\t\t$('#' + _confirmId)\n\t\t\t\t.find('.confirm-container')\n\t\t\t\t.slideUp(150);\n\t\t\t$('#' + _confirmId).remove();\n\t\t}, 100);\n\t},\n\n\tcreate: function(_id, _question, _message, _notifyId, _HasNotifyOnCancel) {\n\t\t$(document).ready(function() {\n\t\t\t$('#' + _id)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', function() {\n\t\t\t\t\tSapphireWidgets.ConfirmationPopup.toggleConfirm(_id, _question, _message, _notifyId, _HasNotifyOnCancel);\n\t\t\t\t\tif (_isInIframe) {\n\t\t\t\t\t\twindow.frameElement.setAttribute('menu-id', _id);\n\t\t\t\t\t\twindow.frameElement.setAttribute('id', 'iframe_' + _id);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t});\n\t},\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/panel/confirmation-popup.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/panel/modal-popup.js":
/*!******************************************************************!*\
  !*** ./src/components/05-components/v3-pat/panel/modal-popup.js ***!
  \******************************************************************/
/***/ (function() {

eval("/* Component ModalPopup */\n\nvar _isInIframe = window.frameElement != undefined || false;\n\nSapphireWidgets.ModalPopup = {\n\tcreate: function(widgetId) {\n\t\t$(document).ready(function() {\n\t\t\t// Use this code to append the component to the root body\n\t\t\t// window.frameElement && $(window.frameElement).closest('.MainInteractiveCard-body').length > 0\n\t\t\tif (false) {} else {\n\t\t\t\tconst $widget = $(`#${widgetId}`);\n\t\t\t\tconst $btnClose = $widget.find('.modalPopup_close');\n\n\t\t\t\tif (window.frameElement) {\n\t\t\t\t\tconst $modalRemoteAppt = window.top.$('.RemoteAppointment');\n\n\t\t\t\t\tif ($modalRemoteAppt.length) {\n\t\t\t\t\t\tconst $minimizeModal = $modalRemoteAppt.find('.Minimize');\n\t\t\t\t\t\t$minimizeModal.click();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$btnClose.click(function() {\n\t\t\t\t\t$widget.removeClass('Open');\n\t\t\t\t\t$widget.removeClass('showclose');\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/panel/modal-popup.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/panel/panel-by-id-notify.js":
/*!*************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/panel/panel-by-id-notify.js ***!
  \*************************************************************************/
/***/ (function() {

eval("/* Component PanelByIDNotify */\nvar panelNotifyWidget;\nSapphireWidgets.PanelByIdNotify = {\n\tisAnyPanelOpenedDeprecated: function() {\n\t\treturn $('body').hasClass('PanelOpened');\n\t},\n\ttogglePanelByNotify: function(Id) {\n\t\tif (!isAnyPanelOpenedDeprecated()) {\n\t\t\t$('body').addClass('PanelOpened');\n\t\t\t$('#' + Id)\n\t\t\t\t.parents('.ToggleButton')\n\t\t\t\t.parent()\n\t\t\t\t.children('.Panel')\n\t\t\t\t.fadeIn(140);\n\n\t\t\ttry {\n\t\t\t\tif (justDragged == false) {\n\t\t\t\t\t$('.PanelContainer')\n\t\t\t\t\t\t.css('margin-left', panelMarginLeft)\n\t\t\t\t\t\t.css('left', panelLeft)\n\t\t\t\t\t\t.addClass(panelArrowClass);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\n\t\t\tsetTimeout(function() {\n\t\t\t\t$('#' + Id)\n\t\t\t\t\t.parents('.ToggleButton')\n\t\t\t\t\t.parent()\n\t\t\t\t\t.children('.Panel')\n\t\t\t\t\t.children('.PanelContainer')\n\t\t\t\t\t.slideDown(150);\n\t\t\t}, 100);\n\t\t} else {\n\t\t\t$('body').removeClass('PanelOpened');\n\t\t\t$('#' + Id)\n\t\t\t\t.parents('.ToggleButton')\n\t\t\t\t.parent()\n\t\t\t\t.children('.Panel')\n\t\t\t\t.fadeOut(140);\n\t\t\tsetTimeout(function() {\n\t\t\t\t$('#' + Id)\n\t\t\t\t\t.parents('.ToggleButton')\n\t\t\t\t\t.parent()\n\t\t\t\t\t.children('.Panel')\n\t\t\t\t\t.children('.PanelContainer')\n\t\t\t\t\t.slideUp(150);\n\t\t\t}, 100);\n\t\t}\n\t},\n\ttogglePanelNotifyById: function(Id) {\n\t\t$('body').toggleClass('PanelOpened');\n\t\t$('#' + Id)\n\t\t\t.parents('.ToggleButton')\n\t\t\t.parent()\n\t\t\t.children('.Panel')\n\t\t\t.fadeToggle(140);\n\n\t\tpanelNotifyWidget = $('#' + Id)\n\t\t\t.parents('.ToggleButton')\n\t\t\t.attr('NotifyId');\n\n\t\tsetTimeout(function() {\n\t\t\t$('#' + Id)\n\t\t\t\t.parents('.ToggleButton')\n\t\t\t\t.parent()\n\t\t\t\t.children('.Panel')\n\t\t\t\t.children('.PanelContainer')\n\t\t\t\t.slideToggle(150);\n\t\t}, 100);\n\t},\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/panel/panel-by-id-notify.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/panel/panel-by-id.js":
/*!******************************************************************!*\
  !*** ./src/components/05-components/v3-pat/panel/panel-by-id.js ***!
  \******************************************************************/
/***/ (function() {

eval("/* Component PanelByID */\nSapphireWidgets.PanelById = {\n\tisAnyPanelOpenedDeprecated: function() {\n\t\treturn $('body').hasClass('PanelOpened');\n\t},\n\n\ttoggleButton: function(id) {\n\t\tconst $toggleButton = $(`#${id}`).parents('.ToggleButton').length\n\t\t\t? $(`#${id}`).parents('.ToggleButton')\n\t\t\t: $(`#${id}`);\n\n\t\t$toggleButton.click();\n\t},\n\n\ttogglePanelById: function(Id) {\n\t\tconst $toggleButton = $(`#${Id}`).parents('.ToggleButton');\n\t\tconst $panel = $toggleButton.parent().children('.Panel');\n\t\tconst $panelContainer = $panel.children('.PanelContainer');\n\t\tconst $panelBackground = $panel.children('.PanelBackground');\n\n\t\tif (!this.isAnyPanelOpenedDeprecated()) {\n\t\t\t$('body').addClass('PanelOpened');\n\t\t\t$('body').css('overflow-y', 'hidden');\n\n\t\t\t$panel.show();\n\t\t\t$panelContainer.slideDown(200);\n\n\t\t\ttry {\n\t\t\t\tif (typeof justDragged !== 'undefined') {\n\t\t\t\t\tif (justDragged == false) {\n\t\t\t\t\t\t$('.PanelByIdNew_PanelContainer')\n\t\t\t\t\t\t\t.css('margin-left', panelMarginLeft)\n\t\t\t\t\t\t\t.css('left', panelLeft)\n\t\t\t\t\t\t\t.addClass(panelArrowClass);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\n\t\t\tsetTimeout(function() {\n\t\t\t\t$panelBackground.fadeIn(80);\n\n\t\t\t\t$toggleButton.click();\n\t\t\t}, 50);\n\t\t} else {\n\t\t\t$panelContainer.slideUp(200);\n\n\t\t\t$panelBackground.fadeOut(80, () => {\n\t\t\t\t$toggleButton.click();\n\n\t\t\t\t$('body').css('overflow-y', 'scroll');\n\t\t\t\t$('body').removeClass('PanelOpened');\n\n\t\t\t\t$panel.hide();\n\t\t\t});\n\t\t}\n\t},\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/panel/panel-by-id.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/panel/popup-menu.js":
/*!*****************************************************************!*\
  !*** ./src/components/05-components/v3-pat/panel/popup-menu.js ***!
  \*****************************************************************/
/***/ (function() {

eval("/* Component PopUpMenu */\nSapphireWidgets.PopUpMenu = {\n\tmenuPosition: function(id, Context, Locale) {\n\t\t/* Hide any other menus on page and set button as collapsed. */\n\t\t$('.popup-menu:visible').hide();\n\n\t\t//var _this = $(this);\n\t\tvar _this = $('#' + id);\n\t\tvar Xx = 0;\n\t\tvar Yy = 0;\n\t\tvar Ww = 0;\n\t\tvar Hh = 0;\n\n\t\t//_this.children('.button-expand:visible').hide();\n\n\t\t/* Get the menu element. */\n\t\tvar _el = _this.next('.popup-menu');\n\n\t\t/* Display the menu. */\n\t\t_el.show();\n\n\t\t/* Set button collapse. */\n\t\t_this.children('.button-collapse').show();\n\n\t\t/* Get the dimensions of the button. */\n\t\tbuttonHh = _this.outerHeight();\n\t\tbuttonWw = _this.outerWidth();\n\n\t\tvar buttonY = _this.position().top + buttonHh + 10;\n\t\tvar buttonX = _this.offset().left;\n\t\t//var buttonX = _this.position().left;\n\n\t\t/* Get the distance of menu button and the parent element */\n\t\tvar popupParentXx = _this.offset().left - _this.position().left;\n\n\t\tvar popupXx = _el.offset().left;\n\t\tvar popupWw = _el.outerWidth();\n\n\t\tXx = Math.abs(buttonX - $('body').scrollLeft() - popupParentXx);\n\t\tYy = Math.abs(buttonHh - buttonY - $('body').scrollTop());\n\n\t\tif (Locale != 'AR') {\n\t\t\t/* Check if clicked position plus the popup width exceed the window width. */\n\t\t\tif (buttonX + popupWw - $('body').scrollLeft() > $(Context).width()) {\n\t\t\t\tXx = buttonX - popupWw - $('body').scrollLeft() - popupParentXx + buttonWw;\n\t\t\t\t//Xx = ($(window).width() - popupWw) - $('body').scrollLeft();\n\t\t\t}\n\t\t}\n\n\t\t/* Set menu position. */\n\t\t_el.css({\n\t\t\tleft: Xx + 'px',\n\t\t\ttop: buttonY + 'px',\n\t\t});\n\n\t\t/* Refresh value */\n\t\tpopupXx = _el.offset().left;\n\n\t\tvar _balloonEl = _el.children('.popup-menu-balloon');\n\n\t\tvar _balloonXx = _balloonEl.offset().left;\n\t\tvar _balloonWw = _balloonEl.outerWidth();\n\t\tvar _balloonPosXx = Math.abs(buttonX - Xx - popupParentXx);\n\n\t\t/* Is the balloon icon positioned out of the popup menu? */\n\t\tif (_balloonPosXx + Xx + _balloonWw > Xx + popupWw) {\n\t\t\t_balloonPosXx = _balloonPosXx - _balloonWw;\n\t\t}\n\n\t\t/* Set position of the balloon effect. */\n\t\t_balloonEl.css('left', _balloonPosXx + 'px');\n\t},\n\tmenuEvents: function(Context, Locale) {\n\t\t$('.popup-button')\n\t\t\t.off('click')\n\t\t\t.on('click', function(e) {\n\t\t\t\tvar id = $(this).attr('id');\n\t\t\t\tSapphireWidgets.PopUpMenu.menuPosition(id, Context, Locale);\n\n\t\t\t\t/*e.stopPropagation();*/\n\n\t\t\t\t/* Prevent link submission */\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t/* v *** Hide popup when click outside *** v */\n\t\tfunction PMClickOutside(event) {\n\t\t\tif (event.hasOwnProperty('target')) {\n\t\t\t\tvar target = $(event.target);\n\t\t\t\t/*if ((target.parents().index($('a[sapphirehospital], .HospitalPopUp')) == -1)) {}*/\n\t\t\t\tif (\n\t\t\t\t\t!$(event.target).closest(\n\t\t\t\t\t\t'.popup-button, .popup-menu, .os-internal-ui-autocomplete, .os-internal-ui-menu-item, .os-internal-ui-corner-all, ui-autocomplete-item'\n\t\t\t\t\t).length\n\t\t\t\t) {\n\t\t\t\t\t$('.popup-menu:visible').hide();\n\t\t\t\t\t$('.button-collapse:visible').hide();\n\t\t\t\t\t//$('.button-expand').show();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar _PMIsDrag = false;\n\t\tvar _PMIsClick = false;\n\t\t$(document).on('touchstart', function(event) {\n\t\t\t_PMIsDrag = false;\n\t\t\t_PMIsClick = true;\n\t\t});\n\t\t$(document).on('touchmove', function(event) {\n\t\t\t_PMIsDrag = true;\n\t\t});\n\t\t$(document).on('click', function(event) {\n\t\t\tPMClickOutside(event);\n\t\t\t_PMIsDrag = false;\n\t\t\t_PMIsClick = false;\n\t\t});\n\t\t$(document).on('touchend', function(event) {\n\t\t\tif (!_PMIsDrag && _PMIsClick) {\n\t\t\t\tPMClickOutside(event);\n\t\t\t}\n\t\t\t_PMIsDrag = false;\n\t\t\t_PMIsClick = false;\n\t\t});\n\n\t\t$('.button-collapse').on('click', function(event) {\n\t\t\t$('body').trigger('click');\n\t\t\treturn false;\n\t\t});\n\t\t/* ^ *** Hide popup when click outside *** ^ */\n\t},\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/panel/popup-menu.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/panel/sapphire-panel.js":
/*!*********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/panel/sapphire-panel.js ***!
  \*********************************************************************/
/***/ (function() {

eval("/* Component SapphirePanel */\nSapphireWidgets.SapphirePanel = {\n\tcheckOpenPanel: function() {\n\t\treturn $('body').hasClass('SapphirePanelOpen') && $('.SapphirePanel_Container:visible').length;\n\t},\n\n\ttoggleSapphirePanel: function(PanelId) {\n\t\tif (!OsValidatorOnSubmit()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!SapphireWidgets.SapphirePanel.checkOpenPanel()) {\n\t\t\t$('body').addClass('SapphirePanelOpen');\n\t\t\t$('#' + PanelId).fadeIn(140);\n\n\t\t\tsetTimeout(function() {\n\t\t\t\t$('#' + PanelId)\n\t\t\t\t\t.find('.SapphirePanel_Container')\n\t\t\t\t\t.slideToggle(150);\n\t\t\t}, 100);\n\t\t}\n\t},\n\n\tcloseSapphirePanel: function(PanelId) {\n\t\t$('body').removeClass('SapphirePanelOpen');\n\t\t$('#' + PanelId).fadeOut(140);\n\n\t\tsetTimeout(function() {\n\t\t\t$('#' + PanelId)\n\t\t\t\t.find('.SapphirePanel_Container')\n\t\t\t\t.slideUp(150);\n\t\t}, 100);\n\t},\n\n\tsetPanelBehavior: function() {\n\t\t$('.Panel[panel-trigger-elementid]').each(function() {\n\t\t\tvar this_panel = $(this);\n\t\t\t$('#' + this_panel.attr('panel-trigger-elementid') + '')\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', function() {\n\t\t\t\t\tSapphireWidgets.SapphirePanel.toggleSapphirePanel(this_panel.attr('id'));\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t});\n\t},\n};\n\n$(document).ready(function() {\n\tSapphireWidgets.SapphirePanel.setPanelBehavior();\n\n\tif (osAjaxBackend.EventHandlers.AfterAjaxRequest.toString().indexOf('setPanelBehavior') == -1) {\n\t\tosAjaxBackend.BindAfterAjaxRequest(SapphireWidgets.SapphirePanel.setPanelBehavior);\n\t}\n});\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/panel/sapphire-panel.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/panel/scripts.js":
/*!**************************************************************!*\
  !*** ./src/components/05-components/v3-pat/panel/scripts.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("__webpack_require__(/*! ./confirmation-panel */ \"./src/components/05-components/v3-pat/panel/confirmation-panel.js\");\n__webpack_require__(/*! ./modal-popup */ \"./src/components/05-components/v3-pat/panel/modal-popup.js\");\n__webpack_require__(/*! ./panel-by-id */ \"./src/components/05-components/v3-pat/panel/panel-by-id.js\");\n__webpack_require__(/*! ./popup-menu */ \"./src/components/05-components/v3-pat/panel/popup-menu.js\");\n__webpack_require__(/*! ./sapphire-panel */ \"./src/components/05-components/v3-pat/panel/sapphire-panel.js\");\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/panel/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/patient-call-cancel/patient-call-cancel-structure.js":
/*!**************************************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/patient-call-cancel/patient-call-cancel-structure.js ***!
  \**************************************************************************************************/
/***/ (function() {

eval("/* Component PatientCallCancelStructure */\n(function($, window, document, SapphireWidgets) {\n\tconst create = function(config) {\n\t\tconst $widget = $('#' + config.widgetId).find('.PatientCallCancelStructure');\n\t\tconst $listQueueWrapper = $widget.find('.PatientCallCancelStructure__ListQueues');\n\t\tconst $dropdown = $listQueueWrapper.find('.InlineDropdown_label');\n\n\t\t$listQueueWrapper.on('click', event => {\n\t\t\tif (!$dropdown.length) return;\n\t\t\tevent.stopPropagation();\n\n\t\t\t$widget.toggleClass('PatientCallCancelStructure--active');\n\n\t\t\t$(document).on('click.PatientCallCancelStructure', () => {\n\t\t\t\t$widget.removeClass('PatientCallCancelStructure--active');\n\t\t\t\t$(document).off('click.PatientCallCancelStructure');\n\t\t\t});\n\n\t\t\t$dropdown.trigger('click');\n\t\t\tevent.preventDefault();\n\t\t});\n\t};\n\n\tSapphireWidgets.PatientCallCancelStructure = { create };\n})(jQuery, window, document, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/patient-call-cancel/patient-call-cancel-structure.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/patient-call-cancel/patient-call-cancel.js":
/*!****************************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/patient-call-cancel/patient-call-cancel.js ***!
  \****************************************************************************************/
/***/ (function() {

eval("/* Component PatientCallCancel */\n(function($, window, document, SapphireWidgets) {\n\tconst create = function(config) {\n\t\tconst $widget = $('#' + config.widgetId);\n\t\tconst $countdown = $widget.find('[ui=data-counter]');\n\t\tlet $callButton = $widget.find('[ui=data-button-call]');\n\t\tlet $cancelButton = $widget.find('[ui=data-button-cancel]');\n\t\tconst $otherContent = $widget.find('.PatientCallCancel__Other');\n\n\t\tlet interval;\n\t\tlet timeCounter;\n\n\t\tconst callPatient = function($widget) {\n\t\t\ttoggleCallingState();\n\n\t\t\tif (config.showCountdown) $countdown.text(config.txtCallingIn + ' ' + config.timeToCancel);\n\t\t\telse $countdown.text(config.txtCallingIn);\n\n\t\t\tstartCounter();\n\t\t};\n\n\t\tconst toggleCallingState = () => {\n\t\t\t$widget.toggleClass('CallingPatient');\n\t\t\t$countdown.text(config.txtCallPatient);\n\t\t};\n\n\t\tconst setInitialState = () => {\n\t\t\t$widget.removeClass('CallingPatient');\n\t\t\t$callButton.show();\n\t\t\t$otherContent.show();\n\t\t};\n\n\t\tconst startCounter = () => {\n\t\t\ttimeCounter = config.timeToCancel;\n\t\t\tinterval = window.setInterval(updateCounter, 1000);\n\t\t};\n\n\t\tconst updateCounter = () => {\n\t\t\ttimeCounter--;\n\n\t\t\tif (timeCounter === 0) {\n\t\t\t\tclearInterval(interval);\n\t\t\t\tOsNotifyWidget(config.patientCallFakeNotifyId, '');\n\n\t\t\t\tsetInitialState();\n\t\t\t}\n\n\t\t\tif (config.showCountdown) $countdown.text(config.txtCallingIn + ' ' + timeCounter);\n\t\t\telse $countdown.text(config.txtCallingIn);\n\t\t};\n\n\t\tif (config.startCounting) callPatient($widget);\n\n\t\t$callButton.on('click', () => {\n\t\t\tif ($widget.hasClass('CallingPatient')) return;\n\n\t\t\tcallPatient($widget);\n\n\t\t\t$callButton.hide();\n\t\t\t$otherContent.hide();\n\t\t});\n\n\t\t$cancelButton.on('click', event => {\n\t\t\ttimeCounter = config.timeToCancel;\n\t\t\t$countdown.text(timeCounter);\n\t\t\tclearInterval(interval);\n\n\t\t\ttoggleCallingState();\n\n\t\t\t$callButton.show();\n\t\t\t$otherContent.show();\n\t\t});\n\t};\n\n\tSapphireWidgets.PatientCallCancel = { create };\n})(jQuery, window, document, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/patient-call-cancel/patient-call-cancel.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/prescription-card/scripts.js":
/*!**************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/prescription-card/scripts.js ***!
  \**************************************************************************/
/***/ (function() {

eval("/* Component PrescriptionCard */\n(function($, window, SapphireWidgets) {\n\tconst create = config => {\n\t\tconst $component = $(`#${config.widgetId} .PrescriptionCard`);\n\n\t\tif (config.isExpandable) {\n\t\t\tconst $expandLink = $component.find('.PrescriptionCard__ExpandIcon');\n\n\t\t\t$expandLink.click(() => {\n\t\t\t\t$component.toggleClass('PrescriptionCard--expanded');\n\t\t\t});\n\t\t}\n\t};\n\n\tSapphireWidgets.PrescriptionCard = { create };\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/prescription-card/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/prescription-expandable/scripts.js":
/*!********************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/prescription-expandable/scripts.js ***!
  \********************************************************************************/
/***/ (function() {

eval("/* Component PrescriptionExpandable */\n(function($, window, SapphireWidgets) {\n\tconst PrescriptionExpandable = function(config) {\n\t\tconst widgetId = config.widgetId;\n\t\tconst previewstat = [];\n\n\t\tconst $elementWrapper = $(`#${config.widgetId}`);\n\n\t\tconst clickEvents = ob => {\n\t\t\tif ($(ob).hasClass('PrescriptionExpandable_header__LinksDiv')) {\n\t\t\t\tvar Section = $(ob)\n\t\t\t\t\t.parent()\n\t\t\t\t\t.parent()\n\t\t\t\t\t.parent();\n\t\t\t} else {\n\t\t\t\tvar Section = $(ob).parent();\n\t\t\t}\n\n\t\t\tvar SectionContent = Section.children('.PrescriptionExpandable_content');\n\n\t\t\t// get id\n\t\t\tvar id = Section.attr('id');\n\n\t\t\tvar tempHeight = 0;\n\n\t\t\t// has class expanded\n\t\t\tif (Section.hasClass('expanded')) {\n\t\t\t\t// Calc and set a fixed height, during this process, transitions are disabled\n\t\t\t\tSectionContent.addClass('noTransition');\n\t\t\t\tSectionContent.height(SectionContent.height());\n\t\t\t\tSectionContent[0].offsetHeight; // hack to force a repaint\n\t\t\t\tSectionContent.removeClass('noTransition');\n\n\t\t\t\t// Collapse content\n\t\t\t\tSectionContent.height(0);\n\t\t\t\tSection.removeClass('expanded');\n\t\t\t\tSectionContent.css('overflow', 'hidden');\n\n\t\t\t\t// Remove class, set height and save state\n\t\t\t\tpreviewstat[id]['client'] = false;\n\t\t\t} else {\n\t\t\t\t// Calc and set a fixed height\n\t\t\t\tSectionContent.height('auto');\n\t\t\t\ttempHeight = SectionContent.height();\n\t\t\t\tSectionContent.height(0);\n\t\t\t\tSectionContent.height(tempHeight);\n\t\t\t\tSectionContent.css('overflow', 'hidden');\n\n\t\t\t\t// remove class, set height and save state\n\t\t\t\tSection.addClass('expanded');\n\t\t\t\tpreviewstat[id]['client'] = true;\n\t\t\t}\n\t\t};\n\n\t\tthis.init = () => {\n\t\t\tconst $header = $elementWrapper.find('.PrescriptionExpandable_header');\n\t\t\tconst $links = $header.find('.PrescriptionExpandable_header__LinksDiv');\n\n\t\t\t// Create array stat\n\t\t\t$('.SectionPrescriptionExpandableArea').each(() => {\n\t\t\t\tconst stat = $header.hasClass('expanded') ? true : false;\n\t\t\t\tpreviewstat[widgetId] = { client: stat, server: stat };\n\t\t\t});\n\n\t\t\tif ($header.hasClass('NotExpandable')) {\n\t\t\t\t$header.on('click', e => e.preventDefault());\n\t\t\t} else if ($header.hasClass('isLinkEpandableClick')) {\n\t\t\t\t$links.on('click', e => clickEvents($links));\n\t\t\t} else {\n\t\t\t\t$header.on('click', e => clickEvents($header));\n\t\t\t}\n\n\t\t\tconst elements =\n\t\t\t\t'.PrescriptionExpandable_header input, .PrescriptionExpandable_header select, .PrescriptionExpandable_header a';\n\t\t\t$(elements).click(function(event) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\n\t\t\tosAjaxBackend && osAjaxBackend.BindAfterAjaxRequest(ajaxRefresh);\n\t\t};\n\n\t\tconst ajaxRefresh = function(event) {\n\t\t\t// remove click events\n\t\t\t//$('.PrescriptionExpandable_header').off();\n\n\t\t\t// add stop prepagation\n\t\t\t$(\n\t\t\t\t'.PrescriptionExpandable_header input, .PrescriptionExpandable_header select, .PrescriptionExpandable_header a'\n\t\t\t).click(function(event) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\n\t\t\t// each all sections\n\t\t\t$('.SectionPrescriptionExpandableArea').each(function() {\n\t\t\t\t// if new SectionExpandable then add to previewstat array\n\t\t\t\tif (previewstat[$(this).attr('id')] == null) {\n\t\t\t\t\t// add stat on array\n\t\t\t\t\tvar stat = false;\n\t\t\t\t\t// if open\n\t\t\t\t\tif ($(this).hasClass('expanded')) {\n\t\t\t\t\t\tstat = true;\n\t\t\t\t\t}\n\t\t\t\t\t// add row\n\t\t\t\t\tpreviewstat[$(this).attr('id')] = { client: stat, server: stat };\n\t\t\t\t}\n\n\t\t\t\t// curent state (ajax state x initial state)\n\t\t\t\tvar curState = false;\n\n\t\t\t\t// check if start expandable\n\t\t\t\tif ($(this).hasClass('expanded')) {\n\t\t\t\t\tcurState = true;\n\t\t\t\t}\n\n\t\t\t\t// check if ajax != initial server\n\t\t\t\tif (curState != previewstat[$(this).attr('id')]['server']) {\n\t\t\t\t\t// curstate\n\t\t\t\t\tpreviewstat[$(this).attr('id')]['client'] = curState;\n\t\t\t\t\tpreviewstat[$(this).attr('id')]['server'] = curState;\n\t\t\t\t} else {\n\t\t\t\t\t// has class expanded\n\t\t\t\t\tif (previewstat[$(this).attr('id')]['client'] == false && $(this).hasClass('expanded')) {\n\t\t\t\t\t\t$(this).removeClass('expanded');\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.children('.PrescriptionExpandable_content')\n\t\t\t\t\t\t\t.height(0);\n\t\t\t\t\t} else if (previewstat[$(this).attr('id')]['client'] == true && !$(this).hasClass('expanded')) {\n\t\t\t\t\t\t$(this).addClass('expanded');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t};\n\n\tconst create = config => {\n\t\tconst expandable = new PrescriptionExpandable(config);\n\n\t\texpandable.init();\n\t};\n\n\tSapphireWidgets.PrescriptionExpandable = { create };\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/prescription-expandable/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/resize-parent-iframe/scripts.js":
/*!*****************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/resize-parent-iframe/scripts.js ***!
  \*****************************************************************************/
/***/ (function() {

eval("var SapphireWidgets = (window.SapphireWidgets = window.SapphireWidgets || {});\n\nSapphireWidgets.ResizeParentIframe = function (options = {}) {\n  $(window).load(function () {\n    const _body = document.body;\n    const _iframe = window.frameElement;\n    const DATA_BODY_RESIZE_ATTRIBUTE_NAME = \"data-resize-parent-iframe-top\";\n    const DATA_ELEMENT_CAUSED_BODY_OFFSET = \"data-element-caused-body-offset\";\n    const RESIZE_TOP_OFFSET = 5;\n\n    _body.classList.add(\"ResizeParentIframe\");\n    \n    var _mutationHandler = function (mutations) {\n\n      setTimeout(function(){\n        _clearBodyTop();\n        var _elementOutsideBodyTop = _checkAnyElementOutsideBodyTop();\n        if (_elementOutsideBodyTop != null) {\n          _setBodyTop(_elementOutsideBodyTop.getBoundingClientRect().top * -1);\n        }\n        \n        SapphireWidgets.ResizeParentIframe.resize ? SapphireWidgets.ResizeParentIframe.resize() : resize();\n      }, 200);\n    };\n\n    var _setBodyTop = function(top) {\n      _body.removeAttribute(DATA_BODY_RESIZE_ATTRIBUTE_NAME);\n      _body.style.marginTop = top + \"px\";\n      \n      if(top == 0)\n        return;\n      \n      _body.setAttribute(DATA_BODY_RESIZE_ATTRIBUTE_NAME, top);\n    }\n\n    var _getBodyTop = function() {\n      return parseFloat(_body.getAttribute(DATA_BODY_RESIZE_ATTRIBUTE_NAME) || 0);\n    }\n\n    var _clearBodyTop = function() {\n      if(document.querySelectorAll(\"[\" + DATA_ELEMENT_CAUSED_BODY_OFFSET + \"]\").length > 0)\n        return;\n\n      _setBodyTop(0);\n    }\n\n    var _checkAnyElementOutsideBodyTop = function() {\n      var _topMostElement = null;\n      var _topMostY = 0;\n\n      for (let index = 0; index <= window.document.body.clientWidth; index += 10) {\n        var _elementFromPoint = document.elementFromPoint(index, 0);\n        var _elementFromPointY = _elementFromPoint != null ? (_elementFromPoint.getBoundingClientRect().top * -1) : 0;\n        \n        if(_elementFromPoint != document.body && _elementFromPointY > _topMostY) {\n          _topMostElement = _elementFromPoint;\n          _topMostY = _elementFromPointY;\n        }\n      }\n      \n      return _topMostElement;\n    }\n    \n    var resize = function (addedNodes) {\n      if (_iframe) {\n        try {\n          if (_iframe.id === \"tooltipster-frame\") {\n            if (options.resizeWidth) {\n              const _contentDocument = _iframe.contentDocument;\n              _iframe.style.width = _contentDocument ? _contentDocument.querySelector(\".ResizeIframeTooltip\").getBoundingClientRect().width + \"px\" : \"100%\";\n            }\n            else {\n              _iframe.style.width = \"100%\";\n            }\n          }\n\n          var _iframeHeight = _iframe.clientHeight;\n          var _iframeParentViewportHeight = _iframe.ownerDocument.documentElement.clientHeight;\n\n          // iframe is full height?\n          if (_iframeHeight == _iframeParentViewportHeight) {\n            //if full height, doesn't make sense to resize it.\n            return;\n          }\n\n          let _bodyHeight = _body.scrollHeight + _getBodyTop();\n          _bodyHeight += window.innerHeight - document.documentElement.clientHeight; // Adding scrollbar height in case it exists.\n          _iframe.style.height = _bodyHeight + \"px\";\n        }\n        catch (error) {\n          console.error(\"Error trying to resize parent iframe: \" + error.message);\n        }\n      }\n      else {\n        console.warn(\"Not an iframe, resize ignored.\");\n      }\n    };\n\n    var _mutationObserver = new MutationObserver(_mutationHandler);\n    var _resizeObserver = new ResizeObserver(_mutationHandler);\n\n    if (_iframe) {\n      _mutationObserver.observe(document.body, {\n        childList: true,\n        subtree: true\n      });\n\n      _resizeObserver.observe(document.body, {\n        box: \"border-box\"\n      });\n    }\n    else {\n      console.warn(\"Not an iframe, resize observer ignored.\");\n    }\n    \n    SapphireWidgets.ResizeParentIframe = {\n      resize: resize,\n    };\n\n    osAjaxBackend.BindAfterAjaxRequest(function () {\n      setTimeout(SapphireWidgets.ResizeParentIframe.resize, 500);\n    });\n\n    resize();\n  });\n};\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/resize-parent-iframe/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/sapphire-header/scripts.js":
/*!************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/sapphire-header/scripts.js ***!
  \************************************************************************/
/***/ (function() {

eval("/* Component SapphireHeader */\n(function($, window, document, SapphireWidgets) {\n\tvar create = function(config) {\n\t\twindow[config.widgetId] = new SapphireHeader(config);\n\t\tSapphireWidgets.SapphireHeader.widgetId = config.widgetId;\n\t};\n\n\tvar handleDemographics = function() {\n\t\twindow[SapphireWidgets.SapphireHeader.widgetId].handleDemographics();\n\t};\n\n\tvar SapphireHeader = function(config) {\n\t\tvar _this = this;\n\t\tthis.config = config;\n\t\tthis.isConfidential = config.isConfidential;\n\t\tthis.$widget = $('#' + config.widgetId);\n\t\tthis.$widget.css({\n\t\t\tdisplay: 'block',\n\t\t});\n\t\tthis.$header = this.$widget.find('.SapphireHeader');\n\t\tthis.$navigation = this.$widget.find('.SapphireHeader-navigation');\n\t\tthis.$identification = this.$widget.find('.SapphireHeader-identification');\n\t\tthis.$demographic = this.$widget.find('.SapphireHeader-demographics');\n\t\tthis.$information = this.$widget.find('.SapphireHeader-information');\n\t\tthis.$actions = this.$widget.find('.SapphireHeader-actions');\n\t\tthis.$additionalTrigger = this.$widget.find('.SapphireHeader-additional-trigger');\n\t\tthis.$additionalContent = this.$widget.find('.SapphireHeader-additional-content');\n\n\t\tthis.handleResize();\n\t\tthis.attachEvents();\n\n\t\tif (this.$information.text() === '') {\n\t\t\tthis.$information.hide();\n\t\t}\n\t};\n\n\tSapphireHeader.prototype.getConfig = function() {\n\t\treturn this.config;\n\t};\n\n\tSapphireHeader.prototype.handleResize = function() {\n\t\tvar _this = this;\n\t\t$(window).resize(function() {\n\t\t\t_this.handleDemographics();\n\t\t});\n\t};\n\n\tSapphireHeader.prototype.attachEvents = function() {\n\t\tvar _this = this;\n\t\tthis.$additionalTrigger.on('click', function() {\n\t\t\tif (_this.$header.hasClass('isOpen')) {\n\t\t\t\t_this.$header.removeClass('isOpen');\n\t\t\t\t//$('.LayoutBase-header').css('z-index', 2);\n\t\t\t} else {\n\t\t\t\t_this.$header.addClass('isOpen');\n\t\t\t\t//$('.LayoutBase-header').css('z-index', 3);\n\t\t\t}\n\t\t});\n\t};\n\n\tSapphireHeader.prototype.handleDemographics = function() {\n\t\tconst _this = this;\n\t\tthis.$demographic.find('.Demographic-item').css('display', 'none');\n\n\t\tthis.$additionalTrigger.hide();\n\t\tthis.$additionalContent.empty();\n\n\t\tconst demographicWidth = this.$demographic.outerWidth(true);\n\t\tlet itemsTotal = 0;\n\n\t\tconst componentWidth = this.$widget.outerWidth(true);\n\t\tconst navigationWidth = this.$navigation.width();\n\t\tconst identificationWidth = this.$identification.width();\n\t\tconst demographicsWidth = this.$demographic.width();\n\t\tconst informationWidth = this.$information.width();\n\t\tconst actionsWidth = this.$actions.width();\n\n\t\tthis.$demographic.find('.Demographic-item').each(function(index) {\n\t\t\titemsTotal += parseInt($(this).outerWidth(true), 10);\n\n\t\t\t// 64 -> margins and 99 -> More Info button\n\t\t\tif (itemsTotal + 64 + 110 < demographicWidth) {\n\t\t\t\t$(this).css('display', 'inline-block');\n\t\t\t} else {\n\t\t\t\t$(this)\n\t\t\t\t\t.clone()\n\t\t\t\t\t.css('display', 'inline-block')\n\t\t\t\t\t.appendTo(_this.$additionalContent);\n\t\t\t\t_this.$additionalTrigger.show();\n\t\t\t}\n\t\t});\n\n\t\tif (this.$additionalContent.find('.Demographic-item').length === 0) {\n\t\t\tthis.$header.removeClass('isOpen');\n\t\t}\n\t};\n\n\tSapphireHeader.prototype.showAdditional = function() {\n\t\treturn this.$header.addClass('isOpen');\n\t};\n\n\tSapphireHeader.prototype.hideAdditional = function() {\n\t\treturn this.$header.removeClass('isOpen');\n\t};\n\n\tSapphireWidgets.SapphireHeader = {\n\t\tcreate: create,\n\t\thandleDemographics: handleDemographics,\n\t};\n})(jQuery, window, document, SapphireWidgets);\n\n$(window).load(function() {\n\tif (!!SapphireWidgets.SapphireHeader.widgetId) {\n\t\twindow[SapphireWidgets.SapphireHeader.widgetId].handleDemographics();\n\t}\n\tif (!!$('.SapphireHeader-demographics').length) {\n\t\tosAjaxBackend &&\n\t\t\tosAjaxBackend.BindAfterAjaxRequest(function() {\n\t\t\t\twindow[SapphireWidgets.SapphireHeader.widgetId].handleDemographics();\n\t\t\t});\n\t}\n});\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/sapphire-header/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/sapphire-popup/scripts.js":
/*!***********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/sapphire-popup/scripts.js ***!
  \***********************************************************************/
/***/ (function() {

eval("/* Component SapphirePopup */\nvar RichWidgets_Popup_Editor_notifyWidget;\n\n(function($, window, SapphireWidgets) {\n\t// Check if the widget is loaded inside an iFrame\n\tlet isInsideIframe = window.frameElement != undefined || false;\n\n\t// Constants\n\tconst POPUP_INITIAL_WIDTH = 300;\n\tconst POPUP_INITIAL_HEIGHT = 100;\n\tconst POPUP_WINDOW_INDEX = 4010;\n\tconst POPUP_CLOSING_TAG = 'closing';\n\tconst POPUP_CLOSING_VALUE = 'true';\n\n\tlet POPUP_NOTIFY_WIDGET;\n\tlet POPUP_PARENT_URL;\n\n\tconst create = config => {\n\t\tif (config.ignoreIframe) isInsideIframe = false;\n\n\t\t$().ready(function($) {\n\t\t\tconst _id = config.linkId;\n\t\t\tconst linkQuery = `#${config.linkId}`;\n\t\t\tlet linkWidget;\n\n\t\t\ttry {\n\t\t\t\tlinkWidget = $(linkQuery).get(0);\n\t\t\t} catch (e) {}\n\n\t\t\tif (typeof linkWidget == 'undefined') {\n\t\t\t\t//Case the widget is inexistent or invisible, it will show no errors.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tPOPUP_PARENT_URL = config.parentUrl;\n\n\t\t\tconst linkResult = getLinkHREF(linkWidget);\n\t\t\tconst linkHref = linkResult[0];\n\t\t\tconst isAButton = linkResult[1];\n\n\t\t\tif (typeof linkHref == 'undefined' || linkHref == '' || linkHref == '#' || linkHref.indexOf('javascript:') == 0) {\n\t\t\t\ttry {\n\t\t\t\t\twindow.OsHandleException(\n\t\t\t\t\t\tnew Error('Popup link id must be the id of a Link or Button Widget with Method Navigate.'),\n\t\t\t\t\t\toutsystems.osErrorCodes.SystemJavascriptError,\n\t\t\t\t\t\t'Popup_Editor'\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Remove the existing on-click event\n\t\t\tif (isAButton) {\n\t\t\t\tlinkWidget.setAttribute(\n\t\t\t\t\t'onclick',\n\t\t\t\t\tlinkWidget\n\t\t\t\t\t\t.getAttribute('onclick')\n\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t.replace('window.location.href=', 'return false;window.location.href=')\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// If there's a confirmation message, store in an attribute the result\n\t\t\tif (linkWidget.getAttribute('onclick') != null) {\n\t\t\t\tlinkWidget.setAttribute(\n\t\t\t\t\t'onclick',\n\t\t\t\t\tlinkWidget\n\t\t\t\t\t\t.getAttribute('onclick')\n\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t'if( ret != true )',\n\t\t\t\t\t\t\t\"$('\" + linkQuery + \"').get(0).setAttribute('confirmed', ret); if( ret != true )\"\n\t\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst clickHandler = function(event) {\n\t\t\t\t// The clickHandler event is registered in osjs and $ for compatibillity reasons, they must not run both for the same click.\n\t\t\t\t// Variable is set to false in resize function.\n\t\t\t\tif ($.data(event.target, 'os-internal-processing') == true) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\t$.data(event.target, 'os-internal-processing', true);\n\t\t\t\t}\n\n\t\t\t\t// Check if the clicked link is disabled\n\t\t\t\tif (linkWidget.getAttribute('disabled') != null) {\n\t\t\t\t\tvar linkDisabled = linkWidget\n\t\t\t\t\t\t.getAttribute('disabled')\n\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t.toLowerCase();\n\n\t\t\t\t\tif (linkDisabled == 'disabled' || linkDisabled.indexOf('true') != -1) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (linkWidget.getAttribute('confirmed') == 'false') return false;\n\t\t\t\tif (OsIsIE()) osFocusBackend.ClearFocusedElement();\n\n\t\t\t\tlet popupDiv;\n\t\t\t\tlet pleaseWaitDiv;\n\n\t\t\t\tconst waitText = `<div style=\"margin-top: 36px;\">${config.loadingMessage}</div>`;\n\t\t\t\tconst imgHTML = '<div class=\"lds-ring\"><div></div></div>';\n\t\t\t\tconst loadingElement = `<div class=\"LayoutPopup-loading\">${imgHTML} ${waitText}</div>`;\n\t\t\t\tconst iFrameElement = `<iframe id=\"iframe_${_id}\" width=\"100%\" scrolling=\"no\" height=\"100%\" frameborder=\"0\" src=\"javascript:void(0);\"/>`;\n\n\t\t\t\tif (isInsideIframe) {\n\t\t\t\t\tlet _div = document.createElement('DIV');\n\t\t\t\t\t_div.setAttribute('style', 'text-align: center; display: none;');\n\t\t\t\t\t_div.setAttribute('id', 'window_' + _id);\n\t\t\t\t\twindow.top.document.body.appendChild(_div);\n\n\t\t\t\t\tpopupDiv = window.top.$('#window_' + _id);\n\t\t\t\t\tpopupDiv.append(iFrameElement);\n\n\t\t\t\t\tpleaseWaitDiv = popupDiv.prepend(loadingElement);\n\t\t\t\t} else {\n\t\t\t\t\tpopupDiv = $(\"<div style='text-align: center; display: none;'></div>\").appendTo('body');\n\t\t\t\t\tpopupDiv.append(iFrameElement);\n\n\t\t\t\t\tpleaseWaitDiv = popupDiv.prepend(loadingElement);\n\t\t\t\t}\n\n\t\t\t\tconst loadTargetPage = function() {\n\t\t\t\t\tif (isInsideIframe) {\n\t\t\t\t\t\twindow.top.POPUP_NOTIFY_WIDGET = config.notifyId;\n\t\t\t\t\t\t// Create a reference to the iframe object on the document parent\n\t\t\t\t\t\twindow.top._iframePopup = window.frameElement.contentWindow;\n\t\t\t\t\t} else {\n\t\t\t\t\t\twindow.top._iframePopup = window;\n\t\t\t\t\t}\n\n\t\t\t\t\tPOPUP_NOTIFY_WIDGET = config.notifyId;\n\t\t\t\t\tRichWidgets_Popup_Editor_notifyWidget = config.notifyId;\n\t\t\t\t\twindow.top._iframePopup.RichWidgets_Popup_Editor_notifyWidget = config.notifyId;\n\n\t\t\t\t\t// Load target page\n\t\t\t\t\tconst ohref = getLinkHREF(linkWidget)[0];\n\t\t\t\t\tconst rhref = ohref.replace(/(\\?|&)_=.*?(&|$)/, '$1_=' + +new Date().now + '$2');\n\t\t\t\t\tconst xhref = rhref + (rhref == ohref ? (rhref.indexOf('?') >= 0 ? '&' : '?') + '_=' + +new Date() : '');\n\n\t\t\t\t\tpopupDiv.find('iframe').attr('src', xhref);\n\n\t\t\t\t\t(function(popupDiv) {\n\t\t\t\t\t\tpopupDiv.find('iframe').load(function() {\n\t\t\t\t\t\t\t// After loading try to resize\n\t\t\t\t\t\t\tresize(popupDiv, _id, config.setWidth, config.setHeight, true, event);\n\t\t\t\t\t\t});\n\t\t\t\t\t})(popupDiv);\n\n\t\t\t\t\tpopupDiv = null;\n\t\t\t\t\tpleaseWaitDiv = null;\n\t\t\t\t};\n\n\t\t\t\topenPopup(popupDiv, pleaseWaitDiv, loadTargetPage, event, config);\n\n\t\t\t\treturn false;\n\t\t\t};\n\n\t\t\t$(linkQuery).click(clickHandler);\n\n\t\t\tSapphireWidgets.SapphirePopup.popupWidth = config.setWidth || POPUP_INITIAL_WIDTH;\n\t\t});\n\t};\n\n\tconst resize = (divToPopup, _id, setWidth, setHeight, recenter, event) => {\n\t\t// Code to support old resize method Popup_Window_resize(setWidth, setHeight, recenter)\n\t\tif (typeof recenter == 'undefined') {\n\t\t\trecenter = setHeight;\n\t\t\tsetHeight = setWidth;\n\t\t\tsetWidth = divToPopup;\n\n\t\t\tif (isInsideIframe) {\n\t\t\t\tdivToPopup = window.top.$('.os-internal-ui-dialog-content');\n\t\t\t} else {\n\t\t\t\tdivToPopup = $('.os-internal-ui-dialog-content');\n\t\t\t}\n\t\t}\n\n\t\t// Resize must bail out immediately if the popup is marked as closing, and not start the animation.\n\t\tif ($.data(divToPopup.get(0), POPUP_CLOSING_TAG) == POPUP_CLOSING_VALUE) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet documentServer;\n\t\tlet frameObj = divToPopup.find('iframe')[0];\n\n\t\tif (typeof frameObj == 'undefined') {\n\t\t\tframeObj = window.top.$('#iframe_' + _id)[0];\n\t\t}\n\n\t\tif (isInsideIframe) {\n\t\t\tdocumentServer = window.top.document.location.href.replace(/(https?:\\/\\/[^\\/]*).*/, '$1');\n\t\t} else {\n\t\t\tdocumentServer = document.location.href.replace(/(https?:\\/\\/[^\\/]*).*/, '$1');\n\t\t}\n\n\t\tif (typeof frameObj != 'undefined') {\n\t\t\tconst frameServer = frameObj.src.replace(/(https?:\\/\\/[^\\/]*).*/, '$1');\n\t\t\tconst sameOrigin = frameServer.toLowerCase() == documentServer.toLowerCase() || frameServer.indexOf('http') != 0;\n\n\t\t\tif (!sameOrigin && (setWidth == -1 || setHeight == -1)) {\n\t\t\t\tthrow new Error('A Popup with a screen from a different server (or https) needs explicict width, height set.');\n\t\t\t}\n\n\t\t\tif (sameOrigin) {\n\t\t\t\tif (frameObj.contentDocument !== null || frameObj.contentWindow !== null) {\n\t\t\t\t\tvar innerDoc = frameObj.contentDocument ? frameObj.contentDocument : frameObj.contentWindow.document;\n\t\t\t\t\tif (innerDoc.documentElement.scrollHeight == 0)\n\t\t\t\t\t\t// Strangely this event is also triggered on close\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet oldHeight;\n\t\t\tif (isInsideIframe) {\n\t\t\t\toldHeight = window.top\n\t\t\t\t\t.$(divToPopup)\n\t\t\t\t\t.parents('.os-internal-Popup')\n\t\t\t\t\t.outerHeight();\n\t\t\t} else {\n\t\t\t\toldHeight = $(divToPopup)\n\t\t\t\t\t.parents('.os-internal-Popup')\n\t\t\t\t\t.outerHeight();\n\t\t\t}\n\n\t\t\tlet width = setWidth == -1 ? $(innerDoc).width() : setWidth;\n\t\t\tlet height = setHeight == -1 ? $(innerDoc).height() : setHeight;\n\n\t\t\tvar titleHeight;\n\t\t\tif (isInsideIframe) {\n\t\t\t\ttitleHeight = window.top.$('.os-internal-ui-dialog-titlebar').height();\n\t\t\t} else {\n\t\t\t\ttitleHeight = $('.os-internal-ui-dialog-titlebar').height();\n\t\t\t}\n\n\t\t\t// Verify if the parent window width is less than the pop-up window, if so set the responsive class on the iframe body (for responsive themes)\n\t\t\tif (window.innerWidth < width) {\n\t\t\t\t// only set the class if the origin is the same\n\t\t\t\tif (sameOrigin) {\n\t\t\t\t\t$(innerDoc)\n\t\t\t\t\t\t.find('body')\n\t\t\t\t\t\t.addClass('Responsive');\n\t\t\t\t\twidth = window.innerWidth - 20; // 10px \"padding\" effect, to keep the popup look and feel on top of content\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fix issues with scrollbars\n\t\t\tif (setHeight == -1) {\n\t\t\t\t// IE7 needs a little more space to remove the scrollbars\n\t\t\t\tif ($.browser.msie) height = height + 1;\n\t\t\t}\n\n\t\t\tif (isInsideIframe) {\n\t\t\t\twindow.top.$(divToPopup).height(height);\n\t\t\t} else {\n\t\t\t\t$(divToPopup).height(height);\n\t\t\t}\n\n\t\t\t//Hide ECT\n\t\t\tif (isInsideIframe) {\n\t\t\t\twindow.top\n\t\t\t\t\t.$(innerDoc)\n\t\t\t\t\t.find('.ECT_FeedbackContainer')\n\t\t\t\t\t.hide();\n\t\t\t\tvar divPopupOuterWindow = window.top.$(divToPopup).parents('.os-internal-Popup');\n\t\t\t} else {\n\t\t\t\t$(innerDoc)\n\t\t\t\t\t.find('.ECT_FeedbackContainer')\n\t\t\t\t\t.hide();\n\t\t\t\tvar divPopupOuterWindow = $(divToPopup).parents('.os-internal-Popup');\n\t\t\t}\n\n\t\t\tvar animateFinal = {};\n\n\t\t\tif (setHeight == -1) {\n\t\t\t\tvar oldTop = parseInt(divPopupOuterWindow.css('top'));\n\t\t\t\tif (recenter) animateFinal.top = Math.max(20, oldTop + (oldHeight - (height + titleHeight)) / 2);\n\t\t\t\tanimateFinal.height = height + titleHeight;\n\t\t\t}\n\n\t\t\tif (setWidth == -1) {\n\t\t\t\tvar oldLeft = parseInt(divPopupOuterWindow.css('left'));\n\t\t\t\tif (recenter) animateFinal.left = oldLeft + (divPopupOuterWindow.width() - width) / 2;\n\t\t\t\tanimateFinal.width = width;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tdivPopupOuterWindow.width() == animateFinal.width &&\n\t\t\t\tdivPopupOuterWindow.height() == animateFinal.height - ($.browser.msie ? 1 : 0)\n\t\t\t) {\n\t\t\t\t$('.os-internal-ui-dialog-content>.LayoutPopup-loading').hide();\n\t\t\t\t$(divToPopup).height(height - ($.browser.msie ? 1 : 0)); // restore size\n\t\t\t\treturn true; // nothing to do...\n\t\t\t}\n\n\t\t\t// hide content in first resize - readjustments will not flickr\n\t\t\tif (divPopupOuterWindow.width() == POPUP_INITIAL_WIDTH && divPopupOuterWindow.height() == POPUP_INITIAL_HEIGHT) {\n\t\t\t\t$(frameObj).height(0);\n\t\t\t}\n\n\t\t\tvar onAnimationComplete = function() {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tif (isInsideIframe) {\n\t\t\t\t\t\twindow.top.$('.os-internal-ui-dialog-titlebar-close-no-title').css('display', 'block');\n\t\t\t\t\t\twindow.top\n\t\t\t\t\t\t\t.$(divToPopup)\n\t\t\t\t\t\t\t.find('iframe')\n\t\t\t\t\t\t\t.height('100%')\n\t\t\t\t\t\t\t.width(animateFinal.width);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('.os-internal-ui-dialog-titlebar-close-no-title').css('display', 'block');\n\t\t\t\t\t\t$(divToPopup)\n\t\t\t\t\t\t\t.find('iframe')\n\t\t\t\t\t\t\t.height('100%')\n\t\t\t\t\t\t\t.width(animateFinal.width);\n\t\t\t\t\t}\n\t\t\t\t}, 13);\n\t\t\t};\n\n\t\t\tvar divPleaseWait;\n\t\t\tif (isInsideIframe) {\n\t\t\t\tdivPleaseWait = window.top.$('.os-internal-ui-dialog-content>.LayoutPopup-loading');\n\t\t\t} else {\n\t\t\t\tdivPleaseWait = $('.os-internal-ui-dialog-content>.LayoutPopup-loading');\n\t\t\t}\n\n\t\t\tdivPleaseWait.hide();\n\n\t\t\tif (setHeight == -1 || setWidth == -1) {\n\t\t\t\tdivPopupOuterWindow.animate(animateFinal, {\n\t\t\t\t\tduration: 200,\n\t\t\t\t\tcomplete: onAnimationComplete,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tonAnimationComplete();\n\t\t\t}\n\t\t\tinnerDoc = null;\n\t\t\tdivPopupOuterWindow = null;\n\t\t\tif (isInsideIframe) {\n\t\t\t\twindow.top.$.data(event.target, 'os-internal-processing', false);\n\t\t\t} else {\n\t\t\t\t$.data(event.target, 'os-internal-processing', false);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t};\n\n\tconst close = () => {\n\t\tlet popupToClose;\n\t\tlet popupContainer;\n\n\t\tif (isInsideIframe) {\n\t\t\tpopupToClose = window.top.$('.os-internal-ui-dialog-content');\n\t\t\tpopupContainer = window.top.$('.SapphirePopup');\n\t\t} else {\n\t\t\tpopupToClose = $('.os-internal-ui-dialog-content');\n\t\t\tpopupContainer = $('.SapphirePopup');\n\t\t}\n\n\t\tpopupToClose.data(POPUP_CLOSING_TAG, POPUP_CLOSING_VALUE);\n\n\t\t//setTimeout(function() {\n\t\tif (popupToClose.length) popupToClose.dialog('close');\n\n\t\tpopupToClose.remove();\n\t\tpopupContainer.remove();\n\t\t//}, 0);\n\t};\n\n\tconst getLinkHREF = widget => {\n\t\tlet linkHref;\n\t\tlet isAButton = false;\n\n\t\ttry {\n\t\t\t//Checks if the id is from a link or not\n\t\t\tlinkHref = $(widget).attr('href');\n\n\t\t\t//Tests for visibility/existence\n\t\t\tif (typeof linkHref == 'undefined') {\n\t\t\t\tconst onClick = widget.getAttribute('onclick');\n\n\t\t\t\tif (typeof onClick != 'undefined') {\n\t\t\t\t\tisAButton = true;\n\n\t\t\t\t\tif (onClick != null) {\n\t\t\t\t\t\tlet hrefMatch;\n\n\t\t\t\t\t\tif ((hrefMatch = onClick.toString().match(/href='([^']*)'/)) != null) {\n\t\t\t\t\t\t\tlinkHref = hrefMatch[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {}\n\n\t\treturn [linkHref, isAButton];\n\t};\n\n\tconst openPopup = (divToPopup, divPleaseWait, loadTargetPage, event, config) => {\n\t\t// Destroy any previous dialog\n\t\tclose(null);\n\n\t\tif (isInsideIframe) {\n\t\t\tconst $jParent = window.top.$;\n\t\t\t$jParent('.os-internal-Popup').remove();\n\t\t}\n\n\t\t// If any close is pending, schedule to execute itself asynchronously exit\n\t\t// If no close is pending, continue with open operation\n\t\tlet closingPopups;\n\n\t\tif (isInsideIframe) closingPopups = window.top.$('.os-internal-ui-dialog-content');\n\t\telse closingPopups = $('.os-internal-ui-dialog-content');\n\n\t\tfor (var i = 0; i < closingPopups.length; i++) {\n\t\t\tif ($.data(closingPopups.get(i), POPUP_CLOSING_TAG) == POPUP_CLOSING_VALUE) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\topenPopup(divToPopup, divPleaseWait, loadTargetPage, event, config);\n\t\t\t\t}, 13);\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tlet _dialog;\n\n\t\tif (isInsideIframe) {\n\t\t\tconst popupContainer = document.createElement('DIV');\n\t\t\tpopupContainer.setAttribute('class', 'SapphirePopup');\n\n\t\t\twindow.top.document.body.appendChild(popupContainer);\n\n\t\t\t_dialog = window.top.$(divToPopup);\n\t\t} else {\n\t\t\t$('<div class=\"SapphirePopup\"></div>').appendTo('body');\n\n\t\t\t_dialog = $(divToPopup);\n\t\t}\n\n\t\t$(divPleaseWait).show();\n\n\t\tif ($('.ISidebar').length) window.parent.SapphireWidgets.LayoutBase.openSidebarIframe(0);\n\n\t\t_dialog.show().dialog({\n\t\t\tappendTo: '.SapphirePopup',\n\t\t\tdialogClass: 'os-internal-Popup',\n\t\t\tresizable: false,\n\t\t\tautoResize: false,\n\t\t\tcloseOnEscape: !config.hideCloseButton,\n\t\t\tbgiframe: true,\n\t\t\tdraggable: false,\n\t\t\tautoOpen: true,\n\t\t\ttitle: config.setTitle,\n\t\t\tmodal: !(config.useModal === false),\n\t\t\theight: config.setHeight == -1 ? POPUP_INITIAL_HEIGHT : config.setHeight,\n\t\t\tposition: 'center',\n\t\t\twidth: config.setWidth == -1 ? POPUP_INITIAL_WIDTH : config.setWidth,\n\t\t\tzIndex: POPUP_WINDOW_INDEX,\n\t\t\tclose: function() {\n\t\t\t\t// If the popup is closed before it is resized (ESC) we need to set the processing event to false.\n\t\t\t\t$.data(event.target, 'os-internal-processing', false);\n\n\t\t\t\t_dialog.find('iframe').unbind('load');\n\t\t\t\t_dialog.find('iframe').attr('src', 'about:blank');\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t_dialog.find('iframe').empty();\n\t\t\t\t\t_dialog.empty();\n\t\t\t\t}, 13);\n\t\t\t},\n\t\t});\n\n\t\t_dialog.find('iframe').height(0);\n\t\t_dialog.parents('.os-internal-ui-dialog').dropShadow();\n\n\t\tif (config.CssClasses !== ' ') {\n\t\t\tif (isInsideIframe) window.top.$('.os-internal-ui-dialog').addClass(config.CssClasses);\n\t\t\telse $('.os-internal-ui-dialog').addClass(config.CssClasses);\n\t\t}\n\n\t\tloadTargetPage();\n\t};\n\n\tSapphireWidgets.SapphirePopup = { create, close, resize };\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/sapphire-popup/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/sapphire-radio-button/scripts.js":
/*!******************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/sapphire-radio-button/scripts.js ***!
  \******************************************************************************/
/***/ (function() {

eval("/* Component SapphireRadioButton */\nSapphireWidgets.SapphireRadioButton = widgetId => {\n\tconst $widget = $(`#${widgetId}`);\n\tconst $input = $widget.find('input[type=\"radio\"]');\n\tconst $label = $widget.find('.ButtonRadioInp_radioText');\n\tconst name = $input.prop('name');\n\n\tconst addRemoveClass = ($el, toAdd) => {\n\t\tif (toAdd) $el.addClass('active');\n\t\telse $el.removeClass('active');\n\t};\n\n\tconst isChecked = $el => {\n\t\tif ($el.is(':checked')) addRemoveClass($widget, true);\n\t\telse addRemoveClass($widget, false);\n\t};\n\n\t$input.click(function() {\n\t\t$widget.removeClass('active');\n\n\t\t$(`input[type=\"radio\"][name=\"${name}\"]`).each(function() {\n\t\t\taddRemoveClass($(this).closest('.ButtonRadioInp'), $(this).is(':checked'));\n\t\t});\n\t});\n\n\t$input.on('change', function() {\n\t\tisChecked($(this));\n\t});\n\n\t$label.click(function() {\n\t\tconst $closestElement = $(this).closest('.ButtonRadioInp');\n\n\t\tif ($closestElement.hasClass('disabled')) return false;\n\n\t\t$input[0].click();\n\t\t//isChecked($input);\n\t});\n\n\tisChecked($input);\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/sapphire-radio-button/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/scales/scale-main-structure.js":
/*!****************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/scales/scale-main-structure.js ***!
  \****************************************************************************/
/***/ (function() {

eval("/* Component ScaleMainStructure */\r\n(function($, window, SapphireWidgets) {\r\n\tconst create = config => {\r\n\t\t$(document).ready(function() {\r\n\t\t\tsetupScale();\r\n\t\t\tbindClicks();\r\n\r\n\t\t\tosAjaxBackend &&\r\n\t\t\t\tosAjaxBackend.BindAfterAjaxRequest(function() {\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tbindClicks();\r\n\t\t\t\t\t}, 1000);\r\n\t\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tScaleCount = conf => {\r\n\t\t$(function() {\r\n\t\t\tvar CardScale = conf.IsCardScale;\r\n\t\t\tvar RulerScale = conf.IsRulerScale;\r\n\t\t\tvar MultipleScale = conf.IsMultipleScale;\r\n\t\t\tvar $totalPlace = $('.ScaleMainStructure_footerResult');\r\n\t\t\tvar totalCardScale = 0;\r\n\t\t\tvar totalMultipleScale = 0;\r\n\t\t\tvar totalRulerScale = 0;\r\n\r\n\t\t\tvar ScaleTypeCard = function() {\r\n\t\t\t\tvar totalSelected = $('.ScaleList.CardScale').find('.ScaleCard.active').length;\r\n\t\t\t\tvar totalNumber = 0;\r\n\t\t\t\t$(\".ScaleList.CardScale:not('.isTitle')\").each(function() {\r\n\t\t\t\t\tif ($(this).find('.ScaleCard').length > 0) {\r\n\t\t\t\t\t\ttotalNumber += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (totalNumber === totalSelected) {\r\n\t\t\t\t\tvar total = [];\r\n\t\t\t\t\tvar inputValue = '';\r\n\t\t\t\t\tvar $scaleRow = $('.ScaleList.CardScale:not(.isTitle)');\r\n\t\t\t\t\t$scaleRow.each(function() {\r\n\t\t\t\t\t\tinputValue = $(this)\r\n\t\t\t\t\t\t\t.find('.ScaleCard.active')\r\n\t\t\t\t\t\t\t.data('value');\r\n\t\t\t\t\t\t$(this)\r\n\t\t\t\t\t\t\t.find('.ScaleList_inputValue input')\r\n\t\t\t\t\t\t\t.val(inputValue);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t$('.ScaleList.CardScale .ScaleCard.active').each(function() {\r\n\t\t\t\t\t\ttotal.push($(this).data('value'));\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar finalTotal = eval(total.join('+'));\r\n\t\t\t\t\treturn finalTotal;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tvar ScaleTypeRuler = function() {\r\n\t\t\t\tvar activeRulerValue = '';\r\n\t\t\t\tvar $activeRuler = $('.RulerScale_number.active');\r\n\t\t\t\tif ($activeRuler.length > 0) {\r\n\t\t\t\t\tvar activeRulerValue = $('.RulerScale_number.active')\r\n\t\t\t\t\t\t.closest('.RulerScale')\r\n\t\t\t\t\t\t.data().value;\r\n\t\t\t\t\t$('.ScaleList.Ruler')\r\n\t\t\t\t\t\t.find('.ScaleList_inputValue input')\r\n\t\t\t\t\t\t.val(activeRulerValue);\r\n\r\n\t\t\t\t\treturn activeRulerValue;\r\n\t\t\t\t}\r\n\t\t\t\treturn activeRulerValue;\r\n\t\t\t};\r\n\r\n\t\t\tvar ScaleTypeMultiple = function() {\r\n\t\t\t\tvar numberofCols = $('.ScaleList.MultipleScale')\r\n\t\t\t\t\t.first()\r\n\t\t\t\t\t.find('.ButtonGroupScale').length;\r\n\t\t\t\tvar numberofRows = $('.ButtonGroupScale').closest('.ScaleList.MultipleScale:not(.isTitle):not(.isSubtotal)')\r\n\t\t\t\t\t.length;\r\n\t\t\t\tvar total = [];\r\n\t\t\t\tvar i = 0;\r\n\t\t\t\tvar j = 0;\r\n\t\t\t\tvar countActive = 0;\r\n\t\t\t\tvar countallActiveCols = 0;\r\n\t\t\t\tvar totalOfItems = numberofCols * numberofRows;\r\n\t\t\t\tvar totalScore = [];\r\n\r\n\t\t\t\tfor (i = 0; i < numberofCols; i++) {\r\n\t\t\t\t\tfor (j = 0; j < numberofRows; j++) {\r\n\t\t\t\t\t\tvar ScaleListSelected = document.querySelectorAll(\r\n\t\t\t\t\t\t\t'.ScaleList.MultipleScale:not(.isTitle):not(.isSubtotal)'\r\n\t\t\t\t\t\t)[j];\r\n\t\t\t\t\t\tvar ButtonScaleSelected = ScaleListSelected.querySelectorAll('.ButtonGroupScale')[i];\r\n\r\n\t\t\t\t\t\tif (ButtonScaleSelected.querySelectorAll('.ButtonGroup_button.active').length > 0) {\r\n\t\t\t\t\t\t\tvar ScaleValue = ButtonScaleSelected.querySelectorAll('.ButtonGroup_button.active')[0].innerText;\r\n\t\t\t\t\t\t\ttotal.push(parseInt(ScaleValue));\r\n\t\t\t\t\t\t\ttotalScore.push(parseInt(ScaleValue));\r\n\t\t\t\t\t\t\tcountActive = countActive + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($('.ScaleList.MultipleScale.isSubtotal').length > 0) {\r\n\t\t\t\t\t\tif (countActive === numberofRows) {\r\n\t\t\t\t\t\t\tvar subTotal = eval(total.join('+'));\r\n\t\t\t\t\t\t\tvar subtotalScale = document.querySelectorAll('.ScaleList.MultipleScale.isSubtotal .ButtonGroupScale')[i];\r\n\t\t\t\t\t\t\tsubtotalScale.innerText = subTotal;\r\n\t\t\t\t\t\t\tcountallActiveCols = countallActiveCols + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcountActive = 0;\r\n\t\t\t\t\ttotal = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (document.querySelectorAll('.ButtonGroup_button.active').length === totalOfItems) {\r\n\t\t\t\t\tvar i = 0;\r\n\t\t\t\t\tvar j = 0;\r\n\t\t\t\t\tfor (i = 0; i < numberofRows; i++) {\r\n\t\t\t\t\t\tvar ScaleListRow = $('.ScaleList.MultipleScale:not(.isTitle):not(.isSubttotal)')[i];\r\n\t\t\t\t\t\tvar $ScaleListInput = $(ScaleListRow).find('.ScaleList_inputValue input');\r\n\t\t\t\t\t\tvar valuesSelected = '';\r\n\t\t\t\t\t\tfor (j = 0; j < numberofCols; j++) {\r\n\t\t\t\t\t\t\tvar ActiveButton = $(ScaleListRow).find('.ButtonGroup_button.active')[j];\r\n\t\t\t\t\t\t\tvar ActiveValue = ActiveButton.innerText;\r\n\t\t\t\t\t\t\t//valuesSelected=valuesSelected+','+ActiveValue;\r\n\t\t\t\t\t\t\tif (j === numberofCols - 1) {\r\n\t\t\t\t\t\t\t\tvaluesSelected += ActiveValue;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvaluesSelected += ActiveValue + ',';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$ScaleListInput.val(valuesSelected);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar getTotal = eval(totalScore.join('+'));\r\n\t\t\t\t\treturn getTotal;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tconst TotalCalc = function() {\r\n\t\t\t\tlet isEmpty = false;\r\n\r\n\t\t\t\tif (CardScale === true) {\r\n\t\t\t\t\ttotalCardScale = ScaleTypeCard();\r\n\t\t\t\t\tisEmpty = totalCardScale === '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (RulerScale === true) {\r\n\t\t\t\t\ttotalRulerScale = ScaleTypeRuler();\r\n\t\t\t\t\tisEmpty = totalRulerScale === '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (MultipleScale === true) {\r\n\t\t\t\t\ttotalMultipleScale = ScaleTypeMultiple();\r\n\t\t\t\t\tisEmpty = totalMultipleScale === '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst $footerResult = $('.ScaleMainStructure_footerResult');\r\n\t\t\t\tconst $totalScore = $('.ScaleMainStructure_totalScore');\r\n\t\t\t\tconst $scoreLabel = $('.ScaleMainStructure_footerResult .TotalLabel');\r\n\r\n\t\t\t\tif (isEmpty) {\r\n\t\t\t\t\t$totalScore.text('---');\r\n\t\t\t\t\t$scoreLabel.text('-');\r\n\r\n\t\t\t\t\t$footerResult.removeClass('ColorZetaBG');\r\n\t\t\t\t} else if (!isNaN(totalMultipleScale) && !isNaN(totalCardScale) && !isNaN(totalRulerScale)) {\r\n\t\t\t\t\tconst totalAbsoluteScore = totalCardScale + totalMultipleScale + totalRulerScale;\r\n\t\t\t\t\tconst totalAbsoluteLabel = totalAbsoluteScore > 11 ? 'High' : 'Low';\r\n\r\n\t\t\t\t\t$totalScore.text(totalAbsoluteLabel);\r\n\t\t\t\t\t$scoreLabel.text(totalAbsoluteScore);\r\n\r\n\t\t\t\t\t$footerResult.addClass('ColorZetaBG');\r\n\r\n\t\t\t\t\tconst $hiddenLink = $('.ScaleMainStructure_hiddingLink a');\r\n\r\n\t\t\t\t\tif ($hiddenLink.length > 0) $hiddenLink.click();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif (CardScale === true) {\r\n\t\t\t\t$('.ScaleCard').click(function() {\r\n\t\t\t\t\tif (!$(this).hasClass('disabled')) {\r\n\t\t\t\t\t\t$parentScaleCard = $(this).closest('.ScaleList.CardScale');\r\n\t\t\t\t\t\t$parentScaleCard.find('.ScaleCard').removeClass('active');\r\n\t\t\t\t\t\t$(this).addClass('active');\r\n\t\t\t\t\t\tTotalCalc();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tTotalCalc();\r\n\t\t\t}\r\n\r\n\t\t\tif (RulerScale === true) {\r\n\t\t\t\t$('.RulerScale').click(function() {\r\n\t\t\t\t\tif ($(this).find('.viewmode').length === 0) {\r\n\t\t\t\t\t\tvar $rulerScaleList = $(this).closest('.ScaleList.Ruler');\r\n\t\t\t\t\t\t$rulerScaleList.find('.RulerScale_number').removeClass('active');\r\n\t\t\t\t\t\t$(this)\r\n\t\t\t\t\t\t\t.find('.RulerScale_number')\r\n\t\t\t\t\t\t\t.addClass('active');\r\n\t\t\t\t\t\tTotalCalc();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tTotalCalc();\r\n\t\t\t}\r\n\r\n\t\t\tif (MultipleScale === true) {\r\n\t\t\t\tvar counter;\r\n\t\t\t\tvar ScaleListTitle = document.querySelector('.ScaleList.MultipleScale.isTitle');\r\n\t\t\t\tvar ScaleListSubTotal = document.querySelector('.ScaleList.MultipleScale.isSubtotal');\r\n\t\t\t\tvar ScaleList = document.querySelector('.ScaleList.MultipleScale:not(.isTitle):not(.isSubtotal)');\r\n\r\n\t\t\t\t$('.ButtonGroupScale')\r\n\t\t\t\t\t.closest('.ScaleList.MultipleScale:nth-child(2n)')\r\n\t\t\t\t\t.addClass('EvenLine');\r\n\t\t\t\tvar numberOfGroupScale = ScaleList.querySelectorAll('.ButtonGroupScale').length;\r\n\r\n\t\t\t\t$('.ScaleList.MultipleScale.isSubtotal .ButtonGroupScale').text(0);\r\n\t\t\t\t// Check if Multiple Scale Title exists then adjust title width\r\n\t\t\t\tif ($('.ScaleList.MultipleScale.isTitle').length > 0) {\r\n\t\t\t\t\tfor (counter = 0; counter < numberOfGroupScale; counter++) {\r\n\t\t\t\t\t\tvar ScaleListWidth = ScaleList.querySelectorAll('.ButtonGroupScale')[counter].offsetWidth;\r\n\t\t\t\t\t\tScaleListTitle.querySelectorAll('.ButtonGroupScale')[counter].style.width = ScaleListWidth + 'px';\r\n\t\t\t\t\t\tScaleListSubTotal.querySelectorAll('.ButtonGroupScale')[counter].style.width = ScaleListWidth + 'px';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$('.ButtonGroup_button').click(function() {\r\n\t\t\t\t\tTotalCalc();\r\n\t\t\t\t});\r\n\t\t\t\tTotalCalc();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tsetupScale = () => {\r\n\t\tvar IsCardScale;\r\n\t\tvar IsRulerScale;\r\n\t\tvar IsMultipleScale;\r\n\r\n\t\t$('.ScaleCard').length > 0 ? (IsCardScale = true) : (IsCardScale = false);\r\n\t\t$('.ButtonGroupScale').length > 0 ? (IsMultipleScale = true) : (IsMultipleScale = false);\r\n\t\t$('.RulerScale').length > 0 ? (IsRulerScale = true) : (IsRulerScale = false);\r\n\r\n\t\tsetTimeout(function() {\r\n\t\t\tScaleCount({\r\n\t\t\t\tIsCardScale: IsCardScale,\r\n\t\t\t\tIsRulerScale: IsRulerScale,\r\n\t\t\t\tIsMultipleScale: IsMultipleScale,\r\n\t\t\t});\r\n\t\t}, 500);\r\n\r\n\t\tif ($('.ScaleMainStructure_options .ToggleItemControl').length > 0) {\r\n\t\t\t$('.ScaleMainStructure_options .ToggleItemControl').click(function() {\r\n\t\t\t\t$('.ScaleMainStructure_totalScore').text('---');\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tresetScales = () => {\r\n\t\t$('.ScaleMainStructure_content').css('visibility', 'hidden');\r\n\t\t$('.ScaleMainStructure_options .ToggleItemControl').addClass('disabled');\r\n\t\tsetTimeout(function() {\r\n\t\t\t$('.ScaleMainStructure_totalScore').text('---');\r\n\t\t\tsetupScale();\r\n\t\t}, 600);\r\n\t\tsetTimeout(function() {\r\n\t\t\t$('.ScaleMainStructure_content').css('visibility', 'visible');\r\n\t\t\t$('.ScaleMainStructure_options .ToggleItemControl').removeClass('disabled');\r\n\t\t}, 1000);\r\n\t};\r\n\r\n\tbindClicks = () => {\r\n\t\tif ($('.ScaleMainStructure_options .ToggleItemControl ').length > 0) {\r\n\t\t\t$('.ScaleMainStructure')\r\n\t\t\t\t.off('click')\r\n\t\t\t\t.on('click', '.ToggleItemControl', function() {\r\n\t\t\t\t\tresetScales();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tif ($('.Navigation_control').length > 0) {\r\n\t\t\t$('.Navigation_right').click(function() {\r\n\t\t\t\tif (\r\n\t\t\t\t\t!$(this)\r\n\t\t\t\t\t\t.find('a')[0]\r\n\t\t\t\t\t\t.hasAttribute('disabled')\r\n\t\t\t\t) {\r\n\t\t\t\t\tresetScales();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$('.Navigation_left').click(function() {\r\n\t\t\t\tif (\r\n\t\t\t\t\t!$(this)\r\n\t\t\t\t\t\t.find('a')[0]\r\n\t\t\t\t\t\t.hasAttribute('disabled')\r\n\t\t\t\t) {\r\n\t\t\t\t\tresetScales();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tSapphireWidgets.ScaleMainStructure = { create };\r\n})(jQuery, window, SapphireWidgets);\r\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/scales/scale-main-structure.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/scales/toggle-item-control.js":
/*!***************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/scales/toggle-item-control.js ***!
  \***************************************************************************/
/***/ (function() {

eval("/* Component ToggleItemControl */\nSapphireWidgets.ToggleItemControl = () => {\n\t$(document).ready(function() {\n\t\t$('.ToggleItemControl input[type=\"radio\"]').each(function() {\n\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t$(this)\n\t\t\t\t\t.parent()\n\t\t\t\t\t.parent()\n\t\t\t\t\t.addClass('active');\n\t\t\t}\n\t\t});\n\n\t\t$('.ToggleItemControl')\n\t\t\t.off('click')\n\t\t\t.on('click', function() {\n\t\t\t\t$('.ToggleItemControl').removeClass('active');\n\t\t\t\t$(this)\n\t\t\t\t\t.find('input[type=\"radio\"]')\n\t\t\t\t\t.not(':checked')\n\t\t\t\t\t.prop('checked', true)\n\t\t\t\t\t.click();\n\t\t\t\tif (\n\t\t\t\t\t$(this)\n\t\t\t\t\t\t.find('input[type=\"radio\"]')\n\t\t\t\t\t\t.is(':checked')\n\t\t\t\t) {\n\t\t\t\t\t$(this).addClass('active');\n\t\t\t\t} else {\n\t\t\t\t\t$(this).removeClass('active');\n\t\t\t\t}\n\t\t\t});\n\n\t\tosAjaxBackend &&\n\t\t\tosAjaxBackend.BindAfterAjaxRequest(function() {\n\t\t\t\t$('.ToggleItemControl input[type=\"radio\"]').each(function() {\n\t\t\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.parent()\n\t\t\t\t\t\t\t.parent()\n\t\t\t\t\t\t\t.addClass('active');\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$('.ToggleItemControl')\n\t\t\t\t\t.off('click')\n\t\t\t\t\t.on('click', function() {\n\t\t\t\t\t\t$('.ToggleItemControl').removeClass('active');\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t\t.find('input[type=\"radio\"]')\n\t\t\t\t\t\t\t\t.is(':checked')\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t$(this).addClass('active');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$(this).removeClass('active');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t});\n\t});\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/scales/toggle-item-control.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/search-and-select/select-ssd.js":
/*!*****************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/search-and-select/select-ssd.js ***!
  \*****************************************************************************/
/***/ (function() {

eval("var SearchSelectDefine = (window.SearchSelectDefine = window.SearchSelectDefine || {});\n\nSapphireWidgets.SelectSSD = function SSDSelectSetup(config) {\n\t$(function() {\n\t\tvar $SSDselectId = $('#' + config.SSDSelectId);\n\t\tvar isMultiple = config.isMultiple;\n\n\t\tvar $ComponentSSD = $SSDselectId.closest('.SearchSD');\n\t\tvar $ComponentSSDinput = $ComponentSSD.find('.SearchSD___input input');\n\t\tvar Componentinputlength = $ComponentSSDinput.val().length;\n\n\t\tif (Componentinputlength > 0) {\n\t\t\t$SSDselectId.find('.SelectSD__contentTitle').highlight($ComponentSSDinput.val(), {\n\t\t\t\tclassName: 'SelectSD-searched-term',\n\t\t\t\tcaseSensitive: false,\n\t\t\t\twordsOnly: false,\n\t\t\t});\n\t\t}\n\n\t\tvar $favoritesSearchInput = $ComponentSSD.find('.SearchSD_filterfavorites input');\n\n\t\tif ($favoritesSearchInput.length) {\n\t\t\tvar favoritesSearchLength = $favoritesSearchInput.val().length;\n\n\t\t\tif (config.HasFavorite === 'True' && favoritesSearchLength > 0) {\n\t\t\t\t$SSDselectId.find('.SelectSD__contentTitle').highlight($favoritesSearchInput.val(), {\n\t\t\t\t\tclassName: 'SelectSD-searched-term',\n\t\t\t\t\tcaseSensitive: false,\n\t\t\t\t\twordsOnly: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tvar OpenConfirmPopup = function($SSDselectId) {\n\t\t\t$ComponentSSD = $SSDselectId.closest('.SearchSD');\n\t\t\t$PopupID = $ComponentSSD.siblings('.SSDPopupWrapper');\n\n\t\t\t$PopupID.fadeIn('fast', function() {\n\t\t\t\t$ComponentSSD.addClass('Dont_Close');\n\t\t\t\t$PopupID\n\t\t\t\t\t.find('.SSDpopupOk')\n\t\t\t\t\t.off('click')\n\t\t\t\t\t.on('click', function() {\n\t\t\t\t\t\t$PopupID.fadeOut('fast', function() {\n\t\t\t\t\t\t\t$SSDselectId.find('.SelectSD__starTrigger > a').click();\n\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\t$ComponentSSD.removeClass('Dont_Close')\n\t\t\t\t\t\t\t}, 500);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t$PopupID\n\t\t\t\t\t.find('.SSDpopupCancel')\n\t\t\t\t\t.off('click')\n\t\t\t\t\t.on('click', function() {\n\t\t\t\t\t\t$PopupID.fadeOut('fast', function() {\n\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\t$ComponentSSD.removeClass('Dont_Close')\n\t\t\t\t\t\t\t}, 500);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t\t};\n\n\t\tvar SSDCheckBoxSelect = function($widgetId) {\n\t\t\tvar checkBoxCount = 0;\n\t\t\tif (isMultiple === 'True') {\n\t\t\t\tcheckBoxCount = $widgetId\n\t\t\t\t\t.closest('.SearchSD.showFavorite')\n\t\t\t\t\t.find('.SelectSD__multiple > input[type=\"checkbox\"]:checked').length;\n\n\t\t\t\t$allListcard = $widgetId.closest('.SearchSD_content');\n\n\t\t\t\tif (checkBoxCount > 0) {\n\t\t\t\t\t$widgetId.closest('.SearchSD.showFavorite').addClass('MultiSelectActive');\n\t\t\t\t\t$widgetId.closest('.SearchSD_content .SelectSD').each(function() {\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.find('.SelectSD_contentWrapper')\n\t\t\t\t\t\t\t.off('click');\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.find('.SelectSD_actionLink')\n\t\t\t\t\t\t\t.off('click');\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t$widgetId.closest('.SearchSD.showFavorite').removeClass('MultiSelectActive');\n\t\t\t\t\t$widgetId.closest('.SearchSD_content .SelectSD ').each(function() {\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.find('.SelectSD_contentWrapper')\n\t\t\t\t\t\t\t.on('click', function(e) {\n\t\t\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t\t\t.find('.LineActionLINK > a')\n\t\t\t\t\t\t\t\t\t.click();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.find('.SelectSD_actionLink')\n\t\t\t\t\t\t\t.on('click', function(e) {\n\t\t\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t\t\t.find('.LineActionLINK > a')\n\t\t\t\t\t\t\t\t\t.click();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (isMultiple === 'True') {\n\t\t\t$SSDselectId.find('.SelectSD__multiple > input').click(function() {\n\t\t\t\tSSDCheckBoxSelect($SSDselectId);\n\t\t\t});\n\t\t}\n\n\t\t$SSDselectId.find('.SelectSD__starLink').on('click', function(e) {\n\t\t\tif (!$SSDselectId.find('.SelectSD .SelectSD__starWrapper').hasClass('starDisabled')) {\n\t\t\t\tif ($SSDselectId.find('.SelectSD .SelectSD__starWrapper').hasClass('starSelected')) {\n\t\t\t\t\tOpenConfirmPopup($SSDselectId);\n\t\t\t\t} else {\n\t\t\t\t\t$SSDselectId.find('.SelectSD__starTrigger > a').click();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t$SSDselectId.find('.SelectSD_contentWrapper').on('click', function(e) {\n\t\t\t$ComponentSSD = $SSDselectId.closest('.SearchSD');\n\t\t\t$SSDselectId.find('.LineActionLINK > a').click();\n\t\t\tif (!$ComponentSSD.hasClass('MultiSelectActive')) {\n\t\t\t\tSearchSelectDefine.SSDSearch.returnToSearch($SSDselectId.closest('.SearchSD'));\n\t\t\t\tSearchSelectDefine.SSDSearch.closeSSD($SSDselectId.closest('.SearchSD'));\n\t\t\t}\n\n\t\t\t$ComponentSSDinput.val('');\n\t\t});\n\n\t\t$SSDselectId.find('.SelectSD_actionLink').on('click', function(e) {\n\t\t\t$ComponentSSD = $SSDselectId.closest('.SearchSD');\n\t\t\t$SSDselectId.find('.LineActionLINK > a').click();\n\t\t\tif (!$ComponentSSD.hasClass('MultiSelectActive')) {\n\t\t\t\tSearchSelectDefine.SSDSearch.returnToSearch($SSDselectId.closest('.SearchSD'));\n\t\t\t\tSearchSelectDefine.SSDSearch.closeSSD($SSDselectId.closest('.SearchSD'));\n\t\t\t}\n\t\t});\n\t});\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/search-and-select/select-ssd.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/search-and-select/ssd-search.js":
/*!*****************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/search-and-select/ssd-search.js ***!
  \*****************************************************************************/
/***/ (function() {

eval("var SearchSelectDefine = (window.SearchSelectDefine = window.SearchSelectDefine || {});\n\nSapphireWidgets.SSDSearch = function SSDsearchSetup(config) {\n\t$(function() {\n\t\tvar $SSDwidget = $('#' + config.SSDWidgetId); // SSDComponent map not used again\n\t\tvar $SSDComponent = $SSDwidget.find('.SearchSD'); // SSDSearch Component id for use in the function and manipulate classes\n\t\tvar $SSDComponentContent = $SSDComponent.find('.SearchSD_content'); // SSDcomponent content\n\t\tvar hasClone = config.HasClone; // HasClone variable input parameter value\n\t\tvar hasFavorite = config.HasFavorite; // HasFavorite variable input parameter value\n\t\tvar showClones = config.ShowClones; // ShowClones variable input parameter value\n\t\tvar letterLimit = config.LimitLetter; // Number of letter to enter before trigger the search action\n\t\tvar hasShield = config.HasShield;\n\t\tvar shieldTimeout = config.ShieldTimeout;\n\t\tvar inputLength = config.SearchInputLength;\n\t\tvar $widgetShield = $SSDComponent.find('.SearchSD--shield');\n\t\tvar searchTriggerTimer;\n\t\tconst $SSDClearButton = $SSDComponent.find('.SearchSD___remove');\n\t\tconst $SSDInputElement = $SSDComponent.find('.SearchSD___input input');\n\n\t\t$SSDInputElement.attr('maxLength', inputLength);\n\n\t\tvar executeSearch = function() {\n\t\t\tclearTimeout(searchTriggerTimer);\n\t\t\tsearchTriggerTimer = setTimeout(function() {\n\t\t\t\tTriggerSearch($SSDComponent);\n\t\t\t}, 700);\n\t\t};\n\n\t\tif (hasShield) {\n\t\t\twindow.setTimeout(function() {\n\t\t\t\t$widgetShield.hide();\n\t\t\t}, shieldTimeout);\n\t\t}\n\n\t\t/*  Returns a function, that, as long as it continues to be invoked, will not\n\t\t *   be triggered. The function will be called after it stops being called for\n\t\t *   N milliseconds. If `immediate` is passed, trigger the function on the\n\t\t *   leading edge, instead of the trailing.\n\t\t */\n\t\tvar debounce = function(func, wait, immediate) {\n\t\t\tvar timeout;\n\t\t\treturn function executedFunction() {\n\t\t\t\tvar context = this;\n\t\t\t\tvar args = arguments;\n\n\t\t\t\tvar later = function() {\n\t\t\t\t\ttimeout = null;\n\t\t\t\t\tif (!immediate) func.apply(context, args);\n\t\t\t\t};\n\n\t\t\t\tvar callNow = immediate && !timeout;\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\ttimeout = setTimeout(later, wait);\n\t\t\t\tif (callNow) func.apply(context, args);\n\t\t\t};\n\t\t};\n\n\t\t/****\n\t\t *   Reset Search UI to the initial state\n\t\t */\n\t\tvar resetUI = function($SSDComponent) {\n\t\t\t$SSDComponent.find('.SearchSD__inputWrapper').show();\n\t\t\t$SSDComponent.find('.SearchSD_search_favoriteLink').hide();\n\t\t\t$SSDComponent.find('.SearchSD___goToFavorite').hide();\n\t\t\t$SSDComponent.find('.SearchSD__FavoriteActions').hide();\n\t\t\t$SSDComponent.find('.SearchSD__FavoriteRemove').hide();\n\t\t\t$SSDComponent.find('.SearchSD__cloneWrapper').hide();\n\t\t\t$SSDComponent.find('.SearchSD__inputWrapper .SearchSD__return').hide();\n\n\t\t\tif ($SSDInputElement.val().trim() === '') {\n\t\t\t\t$SSDComponent.find('.SearchSD___remove').hide();\n\t\t\t}\n\n\t\t\t$SSDComponent.removeClass('showFavorite');\n\t\t\t$SSDComponent.removeClass('showClone');\n\t\t};\n\n\t\t/*\n\t\t *\n\t\t *  Go to Favorites UI\n\t\t *  --  rest SSDcomponent\n\t\t *  --  show Favorite features\n\t\t *  --  remove class showClone if component have that class\n\t\t *  --  add class showFavorite to have component control\n\t\t *  --  addClass Open with slide\n\t\t */\n\t\tvar goToFavorites = function($SSDComponent) {\n\t\t\tresetUI($SSDComponent);\n\n\t\t\t$SSDComponent.find('.SearchSD___input input').val('');\n\t\t\t$SSDComponent.removeClass('Open');\n\t\t\t$SSDComponent.removeClass('MultiSelectActive');\n\t\t\t$SSDComponent.find('.SearchSD__return').hide();\n\t\t\t$SSDComponent.find('.SearchSD__inputWrapper').hide();\n\n\t\t\tif ($SSDComponent.hasClass('showClone')) {\n\t\t\t\t$SSDComponent.removeClass('showClone');\n\t\t\t}\n\n\t\t\t$SSDComponent.find('.SearchSD_search_favoriteLink ').show();\n\t\t\t$SSDComponent.find('.SearchSD__FavoriteRemove ').show();\n\t\t\t$SSDComponent.find('.SearchSD__FavoriteActions').show();\n\t\t\t$SSDComponent.addClass('showFavorite');\n\t\t\t$SSDComponent.find('.SelectSD.hasFavorite > a').focus();\n\t\t\t$SSDComponent.addClass('Open');\n\n\t\t\t// loading show hide list\n\t\t\t$SSDComponent.find('.SearchSD_contentList').hide();\n\t\t\t$SSDComponent.find('.SearchSD__loading').show();\n\t\t\tif ($SSDComponent.find('.SearchSD_showMore a').length > 0) {\n\t\t\t\t$SSDComponent.find('.SearchSD_showMore').hide();\n\t\t\t}\n\t\t};\n\n\t\t/**************\n\t\t *\n\t\t *  Go to Clone UI\n\t\t *  --  remove class Open\n\t\t *  -- Add ShowClone class\n\t\t *  -- SlideDown effect and add Open Class\n\t\t */\n\t\tvar goToClone = function($SSDComponent) {\n\t\t\t// loading show hide list\n\t\t\t$SSDComponent.find('.SearchSD_contentList').hide();\n\t\t\t$SSDComponent.find('.SearchSD__loading').show();\n\t\t\tif ($SSDComponent.find('.SearchSD_showMore a').length > 0) {\n\t\t\t\t$SSDComponent.find('.SearchSD_showMore').hide();\n\t\t\t}\n\n\t\t\t$SSDComponent.find('.SearchSD___input input').val('');\n\t\t\t$SSDComponent.removeClass('Open');\n\n\t\t\tif (!$SSDComponent.hasClass('showClone')) {\n\t\t\t\t$SSDComponent.addClass('showClone');\n\t\t\t}\n\t\t\t$SSDComponent.addClass('Open');\n\t\t};\n\n\t\t/*\n\t\t * Return to search from favorite or clone\n\t\t */\n\t\tvar returnToSearch = function($SSDComponent) {\n\t\t\t// loading show hide list\n\t\t\t$SSDComponent.find('.SearchSD_contentList').hide();\n\t\t\t$SSDComponent.find('.SearchSD__loading').show();\n\t\t\tif ($SSDComponent.find('.SearchSD_showMore a').length > 0) {\n\t\t\t\t$SSDComponent.find('.SearchSD_showMore').hide();\n\t\t\t}\n\n\t\t\tresetUI($SSDComponent);\n\t\t\t$SSDComponent.removeClass('showClone');\n\t\t\t$SSDComponent.removeClass('showFavorite');\n\t\t\t$SSDComponent.removeClass('Open');\n\t\t\t$SSDComponent.removeClass('MultiSelectActive');\n\n\t\t\t$SSDComponent.find('.SearchSD__inputWrapper .SearchSD__return').hide();\n\n\t\t\tif ($SSDComponent.hasClass('hasClone')) {\n\t\t\t\t$SSDComponent.addClass('hasClone');\n\t\t\t\t$SSDComponent.find('.SearchSD__cloneWrapper').css('display', 'flex');\n\t\t\t}\n\t\t\tif ($SSDComponent.hasClass('hasFavorite')) {\n\t\t\t\t$SSDComponent.addClass('hasFavorite');\n\t\t\t\t$SSDComponent.find('.SearchSD_search_favoriteLink').show();\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t *   SSDClear closes SSDSearch container\n\t\t *   and clear ssd filter input\n\t\t */\n\t\tvar ssdClear = function($SSDComponent) {\n\t\t\t$SSDComponent.removeClass('Open');\n\t\t\t$SSDComponent.find('.SearchSD___input input').val('');\n\t\t};\n\n\t\t/*\n\t\t *   CloseSSD closes SSDSearch container\n\t\t *   must remove hightlightSelection done by keyboard navigation\n\t\t */\n\t\tvar closeSSD = function($SSDComponent) {\n\t\t\t$SSDComponent.removeClass('Open');\n\t\t\t$SSDComponentContent.slideUp('250');\n\t\t\t$SSDComponent.find('.selected').removeClass('.selected');\n\t\t};\n\n\t\t/*\n\t\t *   Add Open class to SSDComponent\n\t\t *   if SSDComponent has class Open then focus\n\t\t *   makes open effect, check the characters inside the input to filter\n\t\t */\n\t\tvar ssdFocus = function($SSDComponent) {\n\t\t\tif (!$SSDComponent.hasClass('Open')) {\n\t\t\t\t// loading show hide list\n\t\t\t\t$SSDComponent.find('.SearchSD_contentList').hide();\n\t\t\t\t$SSDComponent.find('.SearchSD__loading').show();\n\t\t\t\tif ($SSDComponent.find('.SearchSD_showMore a').length > 0) {\n\t\t\t\t\t$SSDComponent.find('.SearchSD_showMore').hide();\n\t\t\t\t}\n\n\t\t\t\t$SSDComponent.removeClass('Open');\n\t\t\t\t$SSDComponent.removeClass('.showClone');\n\t\t\t\t$SSDComponent.removeClass('.showFavorite');\n\n\t\t\t\tif (!$SSDComponent.hasClass('Open')) {\n\t\t\t\t\t$SSDComponent.find('.SearchLinkInput a').click();\n\t\t\t\t\t$SSDComponent.addClass('Open');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t *   When clicking clicking outside the component\n\t\t *   the SSD must close and return to initial state\n\t\t */\n\t\tvar ClickOut = function(e, $SSDComponent) {\n\t\t\tif (!$SSDComponent.is(e.target) && $SSDComponent.has(e.target).length === 0) {\n\t\t\t\treturnToSearch($SSDComponent);\n\t\t\t\t$SSDComponent.removeClass('MultiSelectActive');\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t *   Triggers the link to initialize\n\t\t *   the database search based on current length of the string inserted on the input\n\t\t */\n\t\tvar TriggerSearch = function($SSDComponent) {\n\t\t\tvar currentWord = $SSDComponent.find('.SearchSD___input input').val();\n\t\t\tvar currentCount = currentWord.length;\n\t\t\tif (currentCount >= letterLimit || currentCount === 0) {\n\t\t\t\t$SSDComponent.find('.SearchLinkInput > a').click();\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t *   Removes all favorite checked boxes\n\t\t *   and ends MultipleSelect\n\t\t */\n\t\tvar MultiUncheck = function($SSDComponent) {\n\t\t\t$checkBoxes = $SSDComponent.parent().find('.SelectSD__multiple > input[type=\"checkbox\"]');\n\t\t\t$SSDComponent.removeClass('MultiSelectActive');\n\n\t\t\t$SSDComponent\n\t\t\t\t.parent()\n\t\t\t\t.find('.SelectSD__multiple > input[type=\"checkbox\"]')\n\t\t\t\t.each(function() {\n\t\t\t\t\t$(this).prop('checked', false);\n\t\t\t\t});\n\t\t};\n\n\t\t/*\n\t\t *   KeyBoard events up down and enter if not filter\n\t\t */\n\t\tvar keyboardEvents = function(e, $SSDComponent) {\n\t\t\tif ($SSDComponent.hasClass('Open')) {\n\t\t\t\tvar currentSelected = $SSDComponentContent.find('.ListRecords > span.selected'); // Current selectable item\n\t\t\t\tvar $firstSelect = $SSDComponentContent.find('.ListRecords > span:first-child'); // First selectable item\n\t\t\t\tvar $lastSelect = $SSDComponentContent.find('.ListRecords > span:last-child'); // Last selectable item\n\t\t\t\tvar countSelected = currentSelected.length; // Number of selected item\n\n\t\t\t\tif (e.which == 38) {\n\t\t\t\t\t// if key pressed is up arrow\n\t\t\t\t\tif (countSelected === 0) {\n\t\t\t\t\t\tcurrentSelected = $lastSelect;\n\t\t\t\t\t\t$lastSelect.addClass('selected');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrentSelected.removeClass('selected');\n\t\t\t\t\t\tnext = currentSelected.prev();\n\n\t\t\t\t\t\tif (next.length > 0) {\n\t\t\t\t\t\t\tcurrentSelected = next.addClass('selected');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrentSelected = currentSelected.last().addClass('selected');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (e.which == 40) {\n\t\t\t\t\t// if key pressed is down arrow\n\t\t\t\t\tif (countSelected === 0) {\n\t\t\t\t\t\t$firstSelect.addClass('selected');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext = currentSelected.next();\n\t\t\t\t\t\tcurrentSelected.removeClass('selected');\n\n\t\t\t\t\t\tif (next.length > 0) {\n\t\t\t\t\t\t\tcurrentSelected = next.addClass('selected');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrentSelected = currentSelected.eq(0).addClass('selected');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (e.which == 13) {\n\t\t\t\t\t// if key pressed is enter\n\t\t\t\t\tif (countSelected > 0) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tcurrentSelected.find('.SelectSD .SelectSD_actionLink').click();\n\t\t\t\t\t\tssdClear($SSDComponent);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if ($SSDComponent.find('SearchSD___input input').is(':active') && countSelected === 0) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\texecuteSearch();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t *   The first step is to reset the seetings to default\n\t\t */\n\t\tresetUI($SSDComponent);\n\n\t\t/*\n\t\t *  Remove autoComplete from search input\n\t\t */\n\t\t$SSDComponent.find('.SearchSD___input input').attr('autocomplete', 'off');\n\n\t\t/*\n\t\t *   If SSD has Clone and the clone list is visible\n\t\t *   onclick \"Clone previous medication\" then\n\t\t *   remove Open and show items to clone list\n\t\t */\n\t\tif (hasClone === 'True') {\n\t\t\t$SSDComponent.addClass('hasClone');\n\t\t\t$SSDComponent.find('.SearchSD__cloneWrapper').css('display', 'flex');\n\t\t}\n\n\t\tif (hasFavorite === 'True') {\n\t\t\t$SSDComponent.addClass('hasFavorite');\n\t\t\t$SSDComponent.find('.SearchSD_search_favoriteLink').show();\n\t\t}\n\n\t\tif ((hasClone === 'True') & (showClones === 'True')) {\n\t\t\t$SSDComponent.find('.SearchSD_cloneWrapper').click(function() {\n\t\t\t\t$SSDComponent.addClass('Open');\n\t\t\t});\n\t\t}\n\n\t\t$SSDComponent.find('.SearchSD__FavoriteRemove').click(function() {\n\t\t\tssdClear($SSDComponent);\n\t\t\treturnToSearch($SSDComponent);\n\t\t\tdebounce(TriggerSearch($SSDComponent), 550);\n\t\t\tdebounce($SSDComponent.find('.SearchSD___input input').focus(), 560);\n\t\t});\n\n\t\t$SSDComponent.find('.SearchSD__cloneWrapper').click(function() {\n\t\t\tgoToClone($SSDComponent);\n\t\t\t$SSDComponent.find('.SearchSD___goToClone > a').click();\n\t\t});\n\n\t\t$SSDComponent.find('.SearchSD__inputWrapper').click(function() {\n\t\t\tif ($SSDComponent.hasClass('showClone')) {\n\t\t\t\treturnToSearch($SSDComponent);\n\t\t\t}\n\t\t});\n\n\t\t$SSDComponent.find('.SearchSD__FavoriteActionsCancel').click(function() {\n\t\t\tMultiUncheck($SSDComponent);\n\t\t});\n\n\t\t$SSDComponent.find('.SearchSD___input input').focus(function() {\n\t\t\tdebounce(ssdFocus($SSDComponent), 600);\n\t\t});\n\n\t\t$('body').mouseup(function(e) {\n\t\t\tClickOut(e, $SSDComponent);\n\t\t});\n\t\t/*\n\t\t *   KeyBoard events on key press\n\t\t */\n\t\t$SSDComponent\n\t\t\t.find('.SearchSD___input input')\n\t\t\t.add($SSDComponent.find('.SelectSD_actionLink'))\n\t\t\t.on('keyup', function(e) {\n\t\t\t\tif (!e.which != 13) {\n\t\t\t\t\tkeyboardEvents(e, $SSDComponent);\n\t\t\t\t}\n\n\t\t\t\tif ($SSDInputElement.val().trim() === '') {\n\t\t\t\t\t$SSDClearButton.animate({ opacity: 'hide' }, 300);\n\t\t\t\t} else {\n\t\t\t\t\t$SSDClearButton.animate({ opacity: 'show' }, 300);\n\t\t\t\t}\n\t\t\t});\n\n\t\t/*\n\t\t *   Prevent form submission on enter,\n\t\t *   instead go to keyboard events to trigger\n\t\t *   the selection\n\t\t */\n\t\t$($SSDComponent).on('keydown', function(e) {\n\t\t\tif (e.which == 13) {\n\t\t\t\tkeyboardEvents(e, $SSDComponent);\n\t\t\t}\n\t\t});\n\n\t\t$SSDComponent.find('.SearchSD___remove').click(function() {\n\t\t\tssdClear($SSDComponent);\n\t\t\tdebounce(returnToSearch($SSDComponent), 600);\n\t\t});\n\n\t\t$SSDComponent.find('.SearchSD_search_favoriteLink').click(function() {\n\t\t\tssdClear($SSDComponent);\n\t\t\tgoToFavorites($SSDComponent);\n\t\t\t$SSDComponent.find('.SearchSD___goToFavorite > a').click();\n\t\t});\n\n\t\t$SSDComponent.find('.SearchSD__FavoriteActionsAdd > a').click(function() {\n\t\t\tdebounce(TriggerSearch($SSDComponent), 200);\n\t\t\tdebounce(returnToSearch($SSDComponent), 350);\n\t\t});\n\n\t\t/*\n\t\t *   On Ajax Request hide loading div if the SSD is open then show the\n\t\t *   ListRecords\n\t\t */\n\t\tosAjaxBackend &&\n\t\t\tosAjaxBackend.BindAfterAjaxRequest(function() {\n\t\t\t\tif ($SSDComponent.hasClass('Open')) {\n\t\t\t\t\t$SSDComponent.find('.SearchSD__loading').hide();\n\t\t\t\t\t$SSDComponentContent.slideDown('1000', function() {\n\t\t\t\t\t\t$SSDComponent.find('.SearchSD_contentList').show();\n\t\t\t\t\t\tif ($SSDComponent.find('.SearchSD_showMore a').length > 0) {\n\t\t\t\t\t\t\t$SSDComponent.find('.SearchSD_showMore').show();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t$('form').append('<input type=\"submit\" name=\"ssdInput\" onclick=\"return false;\"  style=\"display:none;\" />');\n\n\t\twindow.SearchSelectDefine.SSDSearch = {\n\t\t\treturnToSearch: returnToSearch,\n\t\t\tresetUI: resetUI,\n\t\t\tcloseSSD: closeSSD,\n\t\t\tssdFocus: ssdFocus,\n\t\t\tTriggerSearch: TriggerSearch,\n\t\t\tssdClear: ssdClear,\n\t\t};\n\t});\n};\n// Added to close the select list if we click the prescription Iframe;\nwindow.addEventListener('DOMContentLoaded', event => {\n\tvar rootElement = document.querySelector('body');\n\trootElement.addEventListener(\n\t\t'click',\n\t\tfunction(event) {\n\t\t\tdocument.querySelector(\"iframe[src*='Prescriptions_CW']\") &&\n\t\t\t\tdocument\n\t\t\t\t\t.querySelector(\"iframe[src*='Prescriptions_CW']\")\n\t\t\t\t\t.contentWindow.document.addEventListener('click', e => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tdocument.querySelector('.SearchSD').classList.remove('Open');\n\t\t\t\t\t\tvar allInput = document.querySelector('.SearchSD___input').children;\n\t\t\t\t\t\tfor (const element in allInput) {\n\t\t\t\t\t\t\treturn allInput[element].value != undefined ? (allInput[element].value = '') : null;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t},\n\t\ttrue\n\t);\n});\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/search-and-select/ssd-search.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/searchable-client-side/scripts.js":
/*!*******************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/searchable-client-side/scripts.js ***!
  \*******************************************************************************/
/***/ (function() {

eval("/* Component SearchClientSide */\n(function($, window, SapphireWidgets) {\n\tclass SearchClientSide {\n\t\tconstructor(config) {\n\t\t\tthis.options = {\n\t\t\t\t...config,\n\t\t\t};\n\n\t\t\tthis.onComponentInit();\n\n\t\t\t$(window).load(() => {\n\t\t\t\tosAjaxBackend &&\n\t\t\t\t\tosAjaxBackend.BindAfterAjaxRequest(() => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t$('#' + this.options.inputId).trigger('change');\n\t\t\t\t\t\t}, 200);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tonComponentInit() {\n\t\t\t$('#' + this.options.inputId).on('change keydown paste input', e => {\n\t\t\t\tif (e.keyCode === 13) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} else {\n\t\t\t\t\tthis.searchClientSide(\n\t\t\t\t\t\tthis.options.inputId,\n\t\t\t\t\t\tthis.options.searchableElementSelector,\n\t\t\t\t\t\tthis.options.searchableChildSelector\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tsearchClientSide(inputId, selector, childSelector) {\n\t\t\tif ($('#' + inputId).is(':visible')) {\n\t\t\t\tvar searchText = osjs('#' + inputId)\n\t\t\t\t\t.val()\n\t\t\t\t\t.toLowerCase();\n\t\t\t\tvar searchCounter = 0;\n\t\t\t\tvar selecion = osjs(selector);\n\n\t\t\t\tselecion.removeClass('searchNotFound');\n\t\t\t\tselecion.removeClass('searchFound');\n\t\t\t\tselecion.unhighlight();\n\n\t\t\t\tif (childSelector) {\n\t\t\t\t\tconst elementToSearch = osjs(childSelector);\n\t\t\t\t\telementToSearch.unhighlight();\n\t\t\t\t}\n\n\t\t\t\tif (searchText.length > 1) {\n\t\t\t\t\tselecion.each(function() {\n\t\t\t\t\t\tconst textToCompare = childSelector\n\t\t\t\t\t\t\t? $(this)\n\t\t\t\t\t\t\t\t\t.find(childSelector)\n\t\t\t\t\t\t\t\t\t.text()\n\t\t\t\t\t\t\t: this.innerText;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttextToCompare\n\t\t\t\t\t\t\t\t.trim()\n\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t.indexOf(searchText) > -1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tosjs(this).addClass('searchFound');\n\t\t\t\t\t\t\tsearchCounter++;\n\t\t\t\t\t\t\tosjs(this).highlight(searchText);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tosjs(this).addClass('searchNotFound');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst create = config => (window[config.widgetId] = new SearchClientSide(config));\n\n\tSapphireWidgets.SearchClientSide = {\n\t\tcreate,\n\t};\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/searchable-client-side/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/section-expandable-custom/scripts.js":
/*!**********************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/section-expandable-custom/scripts.js ***!
  \**********************************************************************************/
/***/ (function() {

eval("/* Component SectionExpandable */\n(function($, window, SapphireWidgets) {\n\tfunction SectionExpandableCustom() {\n\t\tvar that = this;\n\n\t\t// Object to save stats\n\t\tvar previewstat = [];\n\n\t\t// set click events\n\t\tfunction clickEvents(ob) {\n\t\t\t// store querys in a single var\n\t\t\tvar Section = $(ob).parent();\n\t\t\tvar SectionContent = Section.children('.SectionExpandableCustom_content');\n\n\t\t\t// get id\n\t\t\tvar id = Section.attr('id');\n\n\t\t\tvar tempHeight = 0;\n\n\t\t\t// has class expanded\n\t\t\tif (Section.hasClass('expanded')) {\n\t\t\t\t// Calc and set a fixed height, during this process, transitions are disabled\n\t\t\t\tSectionContent.addClass('noTransition');\n\t\t\t\tSectionContent.height(SectionContent.height());\n\t\t\t\tSectionContent[0].offsetHeight; // hack to force a repaint\n\t\t\t\tSectionContent.removeClass('noTransition');\n\n\t\t\t\t// Collapse content\n\t\t\t\tSectionContent.height(0);\n\t\t\t\tSection.removeClass('expanded');\n\t\t\t\tSectionContent.css('overflow', 'hidden');\n\n\t\t\t\t// Remove class, set height and save state\n\t\t\t\tpreviewstat[id]['client'] = false;\n\t\t\t} else {\n\t\t\t\t// Calc and set a fixed height\n\t\t\t\tSectionContent.height('auto');\n\t\t\t\ttempHeight = SectionContent.height();\n\t\t\t\tSectionContent.height(0);\n\t\t\t\tSectionContent.height(tempHeight);\n\t\t\t\tSectionContent.css('overflow', 'hidden');\n\n\t\t\t\t// remove class, set height and save state\n\t\t\t\tSection.addClass('expanded');\n\t\t\t\tpreviewstat[id]['client'] = true;\n\n\t\t\t\tif ($('.Page').hasClass('ie8') || $('.Page').hasClass('ie9')) {\n\t\t\t\t\tSectionContent.height('auto');\n\t\t\t\t\tSectionContent.css('overflow', 'visible');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// ajax refres function\n\t\tthat.ajaxRefresh = function() {\n\t\t\t// remove click events\n\t\t\t$('.SectionExpandable_headerCustom').off();\n\n\t\t\t// add stop prepagation\n\t\t\t$(\n\t\t\t\t'.SectionExpandable_headerCustom input, .SectionExpandable_headerCustom select, .SectionExpandable_headerCustom a'\n\t\t\t).click(function(event) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\n\t\t\t// add new click events\n\t\t\t$('.SectionExpandable_headerCustom').on('click', function() {\n\t\t\t\tclickEvents(this);\n\t\t\t});\n\n\t\t\t// each all sections\n\t\t\t$('.SectionExpandableCustom').each(function() {\n\t\t\t\t// if new SectionExpandable then add to previewstat array\n\t\t\t\tif (previewstat[$(this).attr('id')] == null) {\n\t\t\t\t\t// add stat on array\n\t\t\t\t\tvar stat = false;\n\t\t\t\t\t// if open\n\t\t\t\t\tif ($(this).hasClass('expanded')) {\n\t\t\t\t\t\tstat = true;\n\t\t\t\t\t}\n\t\t\t\t\t// add row\n\t\t\t\t\tpreviewstat[$(this).attr('id')] = {\n\t\t\t\t\t\tclient: stat,\n\t\t\t\t\t\tserver: stat,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// curent state (ajax state x initial state)\n\t\t\t\tvar curState = false;\n\n\t\t\t\t// check if start expandable\n\t\t\t\tif ($(this).hasClass('expanded')) {\n\t\t\t\t\tcurState = true;\n\t\t\t\t}\n\n\t\t\t\t// check if ajax != initial server\n\t\t\t\tif (curState != previewstat[$(this).attr('id')]['server']) {\n\t\t\t\t\t// curstate\n\t\t\t\t\tpreviewstat[$(this).attr('id')]['client'] = curState;\n\t\t\t\t\tpreviewstat[$(this).attr('id')]['server'] = curState;\n\t\t\t\t} else {\n\t\t\t\t\t// has class expanded\n\t\t\t\t\tif (previewstat[$(this).attr('id')]['client'] == false && $(this).hasClass('expanded')) {\n\t\t\t\t\t\t$(this).removeClass('expanded');\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.children('.SectionExpandableCustom_content')\n\t\t\t\t\t\t\t.height(0);\n\t\t\t\t\t} else if (previewstat[$(this).attr('id')]['client'] == true && !$(this).hasClass('expanded')) {\n\t\t\t\t\t\t$(this).addClass('expanded');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// set events\n\t\tthat.init = function() {\n\t\t\t// each all sections to create array stat\n\t\t\t$('.SectionExpandableCustom').each(function() {\n\t\t\t\t// add stat on array\n\t\t\t\tvar stat = false;\n\n\t\t\t\t// if open\n\t\t\t\tif ($(this).hasClass('expanded')) {\n\t\t\t\t\tstat = true;\n\t\t\t\t}\n\n\t\t\t\t// add row\n\t\t\t\tpreviewstat[$(this).attr('id')] = {\n\t\t\t\t\tclient: stat,\n\t\t\t\t\tserver: stat,\n\t\t\t\t};\n\n\t\t\t\tif (\n\t\t\t\t\t$(this).hasClass('HideWhenEmpty') &&\n\t\t\t\t\t$(this)\n\t\t\t\t\t\t.find('.SectionExpandableCustom_content')\n\t\t\t\t\t\t.text().length === 0\n\t\t\t\t) {\n\t\t\t\t\t$(this).hide();\n\t\t\t\t}\n\n\t\t\t\t// hack to display a message when SectionExpandableCustom has no child items\n\t\t\t\tvar isEmpty = true;\n\t\t\t\t$(this)\n\t\t\t\t\t.find('.SectionExpandableCustom_content div, .SectionExpandableCustom_content span')\n\t\t\t\t\t.not('.SectionExpandableCustom_content--empty')\n\t\t\t\t\t.each(function() {\n\t\t\t\t\t\tif ($(this).text().length > 0) {\n\t\t\t\t\t\t\tisEmpty = false;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tif (!isEmpty) {\n\t\t\t\t\t$(this)\n\t\t\t\t\t\t.find('.SectionExpandableCustom_content--empty')\n\t\t\t\t\t\t.css({\n\t\t\t\t\t\t\tdisplay: 'none',\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tvar $expandableInstance = $(this);\n\t\t\t\tvar $toggler = $(this).find('> .SectionExpandable-toggler');\n\t\t\t\tif ($toggler.length === 1) {\n\t\t\t\t\tvar $togglerState = false;\n\t\t\t\t\t$toggler.find('[data-labelvalue]').text($toggler.find('[data-labelshow]').data('labelshow'));\n\t\t\t\t\t$toggler.off('click').on('click', function(evt) {\n\t\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\t\t$togglerState = !$togglerState;\n\t\t\t\t\t\tif ($togglerState) {\n\t\t\t\t\t\t\t$expandableInstance.find('.SectionExpandable-toggled').show();\n\t\t\t\t\t\t\t$toggler.find('[data-labelvalue]').text($toggler.find('[data-labelhide]').data('labelhide'));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$expandableInstance.find('.SectionExpandable-toggled').hide();\n\t\t\t\t\t\t\t$toggler.find('[data-labelvalue]').text($toggler.find('[data-labelshow]').data('labelshow'));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// add click events\n\t\t\t$('.SectionExpandable_headerCustom')\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', function() {\n\t\t\t\t\tclickEvents(this);\n\t\t\t\t});\n\n\t\t\t// add stop prepagation\n\t\t\t$(\n\t\t\t\t'.SectionExpandable_headerCustom input, .SectionExpandable_headerCustom select, .SectionExpandable_headerCustom a'\n\t\t\t).click(function(event) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\n\t\t\t// event ajax\n\t\t\tosAjaxBackend && osAjaxBackend.BindAfterAjaxRequest(that.ajaxRefresh);\n\t\t};\n\t}\n\n\tconst create = () => {\n\t\tconst expandable = new SectionExpandableCustom();\n\n\t\texpandable.init();\n\t};\n\n\tSapphireWidgets.SectionExpandable = {\n\t\tcreate,\n\t};\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/section-expandable-custom/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/section-expandable-inside/scripts.js":
/*!**********************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/section-expandable-inside/scripts.js ***!
  \**********************************************************************************/
/***/ (function() {

eval("/* Component SectionExpandableInside */\n(function($, window, SapphireWidgets) {\n\tfunction SectionExpandableInside() {\n\t\tvar that = this;\n\n\t\t// Object to save stats\n\t\tvar previewstat = [];\n\n\t\t// set click events\n\t\tfunction clickEvents(ob) {\n\t\t\t// store querys in a single var\n\t\t\tvar Section = $(ob).parent();\n\t\t\tvar SectionContent = Section.children('.SectionExpandableInside_content');\n\n\t\t\t// get id\n\t\t\tvar id = Section.attr('id');\n\n\t\t\tvar tempHeight = 0;\n\n\t\t\t// has class expanded\n\t\t\tif (Section.hasClass('expanded')) {\n\t\t\t\t// Calc and set a fixed height, during this process, transitions are disabled\n\t\t\t\tSectionContent.addClass('noTransition');\n\t\t\t\tSectionContent.height(SectionContent.height());\n\t\t\t\tSectionContent[0].offsetHeight; // hack to force a repaint\n\t\t\t\tSectionContent.removeClass('noTransition');\n\n\t\t\t\t// Collapse content\n\t\t\t\tSectionContent.height(0);\n\t\t\t\tSection.removeClass('expanded');\n\t\t\t\tSectionContent.css('overflow', 'hidden');\n\n\t\t\t\t// Remove class, set height and save state\n\t\t\t\tpreviewstat[id]['client'] = false;\n\t\t\t} else {\n\t\t\t\t// Calc and set a fixed height\n\t\t\t\tSectionContent.height('auto');\n\t\t\t\t// tempHeight = SectionContent.height();\n\t\t\t\t// SectionContent.height(0);\n\t\t\t\t// SectionContent.height(tempHeight);\n\t\t\t\tSectionContent.css('overflow', 'hidden');\n\n\t\t\t\t// remove class, set height and save state\n\t\t\t\tSection.addClass('expanded');\n\t\t\t\tpreviewstat[id]['client'] = true;\n\t\t\t}\n\t\t}\n\n\t\t// ajax refres function\n\t\tthat.ajaxRefresh = function() {\n\t\t\t// remove click events\n\t\t\t$('.SectionExpandableInside .SectionExpandableInside_header').off();\n\n\t\t\t// add stop prepagation\n\t\t\t$(\n\t\t\t\t'.SectionExpandableInside .SectionExpandableInside_header input, .SectionExpandableInside .SectionExpandableInside_header select, .SectionExpandableInside .SectionExpandableInside_header a'\n\t\t\t).click(function(event) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\n\t\t\t// add new click events\n\t\t\t$('.SectionExpandableInside .SectionExpandableInside_header').on('click', function() {\n\t\t\t\tclickEvents(this);\n\t\t\t});\n\n\t\t\t// each all sections\n\t\t\t$('.SectionExpandableInside').each(function() {\n\t\t\t\t// if new SectionExpandable then add to previewstat array\n\t\t\t\tif (previewstat[$(this).attr('id')] == null) {\n\t\t\t\t\t// add stat on array\n\t\t\t\t\tvar stat = false;\n\t\t\t\t\t// if open\n\t\t\t\t\tif ($(this).hasClass('expanded')) {\n\t\t\t\t\t\tstat = true;\n\t\t\t\t\t}\n\t\t\t\t\t// add row\n\t\t\t\t\tpreviewstat[$(this).attr('id')] = { client: stat, server: stat };\n\t\t\t\t}\n\n\t\t\t\t// curent state (ajax state x initial state)\n\t\t\t\tvar curState = false;\n\n\t\t\t\t// check if start expandable\n\t\t\t\tif ($(this).hasClass('expanded')) {\n\t\t\t\t\tcurState = true;\n\t\t\t\t}\n\n\t\t\t\t// check if ajax != initial server\n\t\t\t\tif (curState != previewstat[$(this).attr('id')]['server']) {\n\t\t\t\t\t// curstate\n\t\t\t\t\tpreviewstat[$(this).attr('id')]['client'] = curState;\n\t\t\t\t\tpreviewstat[$(this).attr('id')]['server'] = curState;\n\t\t\t\t} else {\n\t\t\t\t\t// has class expanded\n\t\t\t\t\tif (previewstat[$(this).attr('id')]['client'] == false && $(this).hasClass('expanded')) {\n\t\t\t\t\t\t$(this).removeClass('expanded');\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.children('.SectionExpandableInside_content')\n\t\t\t\t\t\t\t.height(0);\n\t\t\t\t\t} else if (previewstat[$(this).attr('id')]['client'] == true && !$(this).hasClass('expanded')) {\n\t\t\t\t\t\t$(this).addClass('expanded');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// set events\n\t\tthat.init = function() {\n\t\t\t// each all sections to create array stat\n\t\t\t$('.SectionExpandableInside').each(function() {\n\t\t\t\t// add stat on array\n\t\t\t\tvar stat = false;\n\n\t\t\t\t// if open\n\t\t\t\tif ($(this).hasClass('expanded')) {\n\t\t\t\t\tstat = true;\n\t\t\t\t}\n\n\t\t\t\t// add row\n\t\t\t\tpreviewstat[$(this).attr('id')] = { client: stat, server: stat };\n\t\t\t});\n\n\t\t\t// add click events\n\t\t\t$('.SectionExpandableInside .SectionExpandableInside_header')\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', function() {\n\t\t\t\t\tclickEvents(this);\n\t\t\t\t});\n\n\t\t\t// add stop prepagation\n\t\t\t$(\n\t\t\t\t'.SectionExpandableInside .SectionExpandableInside_header input, .SectionExpandableInside .SectionExpandableInside_header select, .SectionExpandableInside .SectionExpandableInside_header a'\n\t\t\t).click(function(event) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\n\t\t\t// event ajax\n\t\t\tosAjaxBackend && osAjaxBackend.BindAfterAjaxRequest(that.ajaxRefresh);\n\t\t};\n\t}\n\n\tconst setOpenCloseClass = id => {\n\t\tid.click(function() {\n\t\t\tif (id.parent().hasClass('expanded')) {\n\t\t\t\t$(this)\n\t\t\t\t\t.find('.HeaderIcon')\n\t\t\t\t\t.removeClass('open');\n\t\t\t\t$(this)\n\t\t\t\t\t.find('.HeaderIcon')\n\t\t\t\t\t.addClass('closed');\n\t\t\t} else {\n\t\t\t\t$(this)\n\t\t\t\t\t.find('.HeaderIcon')\n\t\t\t\t\t.removeClass('closed');\n\t\t\t\t$(this)\n\t\t\t\t\t.find('.HeaderIcon')\n\t\t\t\t\t.addClass('open');\n\t\t\t}\n\t\t});\n\t};\n\n\tconst create = () => {\n\t\tconst expandable = new SectionExpandableInside();\n\n\t\texpandable.init();\n\t};\n\n\tSapphireWidgets.SectionExpandableInside = {\n\t\tcreate,\n\t\tsetOpenCloseClass,\n\t};\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/section-expandable-inside/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/segmented-control/scripts.js":
/*!**************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/segmented-control/scripts.js ***!
  \**************************************************************************/
/***/ (function() {

eval("/* Component SegmentedControl */\n(function($, window, document, SapphireWidgets) {\n\tconst create = function(config) {\n    $(document).ready(function() {\n      const $inputSegmented = $(`#${config.widgetId}`).find('.SegmentedControl');\n      const $labels = $(`#${config.widgetId}`).find('.SegmentedControl_Label');\n\n      if($inputSegmented){\n        if(config.hasError == true) {\n          $inputSegmented.addClass('Invalid');\n          Array.from($labels).forEach(label => {$(label).addClass('ColorRedText')});\n        }\n        else {\n          $inputSegmented.removeClass('Invalid');\n          Array.from($labels).forEach(label => {$(label).removeClass('ColorRedText')})\n        }\n      }\n    });\n  };\n\nSapphireWidgets.SegmentedControl = {\n  create,\n};\n})(jQuery, window, document, SapphireWidgets);\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/segmented-control/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/select-system/scripts.js":
/*!**********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/select-system/scripts.js ***!
  \**********************************************************************/
/***/ (function() {

eval("/* Component SelectSystem */\nSapphireWidgets.SelectSystem = (config) => {\n\t$(function () {\n\t\tvar Select2Options = {};\n\t\tvar $WidgetIdentifier;\n\n\t\tif (config.WidgetId === '' && config.WidgetClass != '') {\n\t\t\t$WidgetIdentifier = $('.' + config.WidgetClass);\n\t\t} else {\n\t\t\t$WidgetIdentifier = $('#' + config.WidgetId);\n\t\t}\n\n\t\tif (config.IsRTL) {\n\t\t\tSelect2Options.dir = 'rtl';\n\t\t}\n\t\tSelect2Options.theme = 'default SelectSystem';\n\t\tSelect2Options.width = $WidgetIdentifier.hasClass('OSFillParent') ? '100%' : 'resolve'; // DE72304\n\n\t\t/*  \n\t\t\t\t\tChange select2 search display \n\t\t\t\t\t\t\t\t\t-Multiple Select2 search UI like Single Select2\n\t\t\t*/\n\t\t$.fn.select2.amd.define(\n\t\t\t'SearchLikeSingle',\n\t\t\t[\n\t\t\t\t'select2/utils',\n\t\t\t\t'select2/dropdown',\n\t\t\t\t'select2/dropdown/attachBody',\n\t\t\t\t'select2/dropdown/attachContainer',\n\t\t\t\t'select2/dropdown/search',\n\t\t\t\t'select2/dropdown/minimumResultsForSearch',\n\t\t\t],\n\t\t\tfunction (Utils, Dropdown, AttachBody, AttachContainer, Search, minimumResultsForSearch) {\n\t\t\t\tlet dropdownSearch = Utils.Decorate(Dropdown, Search);\n\t\t\t\tdropdownSearch.prototype.render = function () {\n\t\t\t\t\tvar $rendered = Dropdown.prototype.render.call(this);\n\t\t\t\t\t// Add ability for a placeholder in the search box\n\t\t\t\t\tlet placeholder = this.options.get('placeholderForSearch') || '';\n\t\t\t\t\tvar $search = $(\n\t\t\t\t\t\t'<span class=\"select2-search select2-search--dropdown\">' +\n\t\t\t\t\t\t\t'<input class=\"select2-search__field\" placeholder=\"' +\n\t\t\t\t\t\t\tplaceholder +\n\t\t\t\t\t\t\t'\" type=\"search\"' +\n\t\t\t\t\t\t\t' tabindex=\"-1\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\"' +\n\t\t\t\t\t\t\t' spellcheck=\"false\" role=\"textbox\" />' +\n\t\t\t\t\t\t\t'</span>'\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.$searchContainer = $search;\n\t\t\t\t\tthis.$search = $search.find('input');\n\t\t\t\t\t$search.addClass('MultipleSelect');\n\n\t\t\t\t\t$rendered.prepend($search);\n\t\t\t\t\t$search.parent().addClass('MultipleSelect');\n\t\t\t\t\treturn $rendered;\n\t\t\t\t};\n\n\t\t\t\t// Decorate the dropdown+search with the containers\n\t\t\t\tlet adapter = Utils.Decorate(dropdownSearch, AttachContainer);\n\t\t\t\tadapter = Utils.Decorate(adapter, AttachBody);\n\n\t\t\t\treturn adapter;\n\t\t\t}\n\t\t);\n\n\t\t// Other possible values are inputTooLong, inputTooShort and maximumSelected (you can find in Select2 sources).\n\t\tSelect2Options.language = {\n\t\t\terrorLoading: function () {\n\t\t\t\treturn config.Texts.errorLoading ?? 'Results could not be loaded.';\n\t\t\t},\n\t\t\tloadingMore: function () {\n\t\t\t\treturn config.Texts.loadingMore ?? 'Loading more results…';\n\t\t\t},\n\t\t\tnoResults: function () {\n\t\t\t\treturn config.Texts.noResults ?? 'No results found.';\n\t\t\t},\n\t\t\tsearching: function () {\n\t\t\t\treturn config.Texts.searching ?? 'Searching…';\n\t\t\t},\n\t\t\tremoveAllItems: function () {\n\t\t\t\treturn config.Texts.removeAllItems ?? 'Remove all items';\n\t\t\t},\n\t\t};\n\n\t\tif (config.DropdownClass != '') {\n\t\t\tSelect2Options.dropdownCssClass = config.DropdownClass;\n\t\t}\n\n\t\tif (config.allowClear === 'True') {\n\t\t\tSelect2Options.allowClear = true;\n\t\t}\n\n\t\tif (config.MaximumLength != '') {\n\t\t\tSelect2Options.maximumInputLength = config.MaximumLength;\n\t\t}\n\n\t\tif (config.Texts.prompt != '') {\n\t\t\tSelect2Options.placeholder = config.Texts.prompt;\n\t\t}\n\n\t\tif (config.SelectType === 'Ajax') {\n\t\t\tSelect2Options.allowClear = false;\n\n\t\t\tSelect2Options.templateSelection = function (repo) {\n\t\t\t\tif (!repo.element) {\n\t\t\t\t\treturn config.Texts.prompt;\n\t\t\t\t}\n\n\t\t\t\treturn repo.full_name || repo.text;\n\t\t\t};\n\n\t\t\tSelect2Options.templateResult = function (repo) {\n\t\t\t\tif (repo.loading) {\n\t\t\t\t\treturn repo.text;\n\t\t\t\t}\n\t\t\t\tvar markup = '<div class=\"\"Clearfix\"\">' + '<div class=\"\"ThemeGrid_Width12\"\">' + repo.text + '</div>';\n\t\t\t\tif (repo.description) {\n\t\t\t\t\tmarkup += '<div class=\"\"OSAutoMarginTop\"\">' + repo.description + '</div>';\n\t\t\t\t}\n\t\t\t\tmarkup += '</div>';\n\t\t\t\treturn markup;\n\t\t\t};\n\n\t\t\tSelect2Options.ajax = {\n\t\t\t\turl: config.AjaxURL,\n\t\t\t\tdataType: 'json',\n\t\t\t\tdelay: config.AjaxDelay,\n\t\t\t\theaders: { AuthInternal: config.Header_Value },\n\t\t\t\tdata: function (params) {\n\t\t\t\t\tvar Select2AjaxOpt = {};\n\t\t\t\t\tvar SplitParameter = config.SearchExtraParam1.split(',');\n\t\t\t\t\tSelect2AjaxOpt.SearchParameter = params.term;\n\t\t\t\t\tSelect2AjaxOpt.Page = params.page || 1;\n\t\t\t\t\tSelect2AjaxOpt.PageAmount = config.PageAmount;\n\n\t\t\t\t\tSplitParameter.forEach(function (el) {\n\t\t\t\t\t\tvar splitText = el.split(':');\n\t\t\t\t\t\tSelect2AjaxOpt[splitText[0]] = splitText[1];\n\t\t\t\t\t});\n\n\t\t\t\t\treturn Select2AjaxOpt;\n\t\t\t\t},\n\t\t\t\tprocessResults: function (data, params) {\n\t\t\t\t\tparams.page = params.page || 1;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tresults: data.items,\n\t\t\t\t\t\tpagination: {\n\t\t\t\t\t\t\tmore: params.page * config.PaginationSize < data.total_count,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcache: true,\n\t\t\t};\n\n\t\t\tSelect2Options.minimumInputLength = config.MinimumInputLenght;\n\n\t\t\tSelect2Options.escapeMarkup = function (markup) {\n\t\t\t\treturn markup;\n\t\t\t};\n\n\t\t\tif (config.IsMultiple) {\n\t\t\t\tSelect2Options.multiple = true;\n\t\t\t\tSelect2Options.containerCssClass = 'Select2Ajax Multiple';\n\t\t\t\tSelect2Options.dropdownCssClass = 'Select2Ajax Multiple';\n\t\t\t} else {\n\t\t\t\tSelect2Options.multiple = false;\n\t\t\t\tSelect2Options.containerCssClass = 'Select2Ajax';\n\t\t\t\tSelect2Options.dropdownCssClass = 'Select2Ajax';\n\t\t\t}\n\n\t\t\tSelect2Options.minimumResultsForSearch = 0;\n\t\t\tSelect2Options.tags = config.HasTags;\n\t\t\tSelect2Options.closeOnselect = true;\n\t\t}\n\n\t\tif (config.SelectType === 'Checkbox') {\n\t\t\tvar isAllSelected = false;\n\t\t\tif ($WidgetIdentifier[0].options.length === $WidgetIdentifier[0].selectedOptions.length) {\n\t\t\t\tisAllSelected = true;\n\t\t\t}\n\n\t\t\tif (config.WidgetId != '') {\n\t\t\t\toption = new Option(config.Texts.selectAll, 'All', true, isAllSelected);\n\t\t\t\t$WidgetIdentifier.prepend(option);\n\t\t\t\t$WidgetIdentifier.find('option:first-child').addClass('SelectedAll');\n\t\t\t}\n\t\t\tSelect2Options.multiple = true;\n\t\t\tSelect2Options.closeOnSelect = false;\n\t\t\tSelect2Options.allowHtml = false;\n\t\t\tSelect2Options.tags = false;\n\n\t\t\tif (config.HasSearch) {\n\t\t\t\tSelect2Options.dropdownAdapter = $.fn.select2.amd.require('SearchLikeSingle');\n\t\t\t} else {\n\t\t\t\tSelect2Options.minimumResultsForSearch = -1;\n\t\t\t}\n\n\t\t\tSelect2Options.containerCssClass = 'MultipleSelect';\n\t\t\tSelect2Options.dropdownCssClass = 'MultipleSelect';\n\t\t\tSelect2Options.templateSelection = function (result) {\n\t\t\t\tvar selectedOptionsList = $WidgetIdentifier.find('option:selected:not(\".SelectedAll\")');\n\t\t\t\tvar selectedOptions = selectedOptionsList.length;\n\t\t\t\tvar totalOptions = $WidgetIdentifier.find('option:not(\".SelectedAll\")').length;\n\n\t\t\t\tif (selectedOptions === 0) {\n\t\t\t\t\treturn config.Texts.prompt;\n\t\t\t\t\t//return 'Select an option';\n\t\t\t\t} else if (selectedOptions < 4) {\n\t\t\t\t\tvar activeValues = '';\n\t\t\t\t\tselectedOptionsList.each(function () {\n\t\t\t\t\t\tactiveValues = activeValues + ' ' + $(this)[0].innerText;\n\t\t\t\t\t});\n\t\t\t\t\tactiveValues = activeValues.replace(/,\\s*$/, '');\n\t\t\t\t\treturn activeValues;\n\t\t\t\t} else if (selectedOptions === totalOptions) {\n\t\t\t\t\treturn config.Texts.allSelected;\n\t\t\t\t} else {\n\t\t\t\t\treturn config.Texts.partialSelection\n\t\t\t\t\t\t.replace('{SelectedOptions}', selectedOptions)\n\t\t\t\t\t\t.replace('{TotalOptions}', totalOptions);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tif (config.SelectType === 'HtmlOptions') {\n\t\t\tvar dataHtmlOption = [];\n\t\t\t$WidgetIdentifier.find('option').each(function (key, value) {\n\t\t\t\tvar optionObject = {\n\t\t\t\t\tid: $(this).val(),\n\t\t\t\t\ttext: $(this).text(),\n\t\t\t\t\thtml: $(this).text(),\n\t\t\t\t};\n\t\t\t\tdataHtmlOption.push(optionObject);\n\t\t\t});\n\n\t\t\tSelect2Options.containerCssClass = 'customSelect';\n\t\t\tSelect2Options.dropdownCssClass = 'dropdownCustom';\n\t\t\tSelect2Options.data = dataHtmlOption;\n\t\t\tSelect2Options.escapeMarkup = function (markup) {\n\t\t\t\treturn markup;\n\t\t\t};\n\t\t}\n\n\t\tif (config.SelectType === 'TagCustom') {\n\t\t\tSelect2Options.tags = config.HasTags;\n\t\t\tSelect2Options.containerCssClass = 'tagCustom';\n\t\t\tSelect2Options.dropdownCssClass = 'tagCustom';\n\t\t\t// According to documentation, this has been replaced with createTag, but this signature looks like for insertTag.\n\t\t\t// No sure how this is supposed to be. See https://select2.org/upgrading/migrating-from-35#renamed-createsearchchoice.\n\t\t\tSelect2Options.createSearchChoice = function (term, data) {\n\t\t\t\tif (\n\t\t\t\t\t$(data).filter(function () {\n\t\t\t\t\t\treturn this.text.localeCompare(term) === 0;\n\t\t\t\t\t}).length === 0\n\t\t\t\t) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: term,\n\t\t\t\t\t\ttext: term,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Set up ResizeObserver to track height changes\n\t\t\tconst updateLineTimelineTitlePosition = () => {\n\t\t\t\tconst newHeight = 125 + $('.ResizableContainer').outerHeight();\n\t\t\t\tdocument.documentElement.style.setProperty('--line-title-top', newHeight + 'px');\n\t\t\t};\n\n\t\t\tconst resizeObserver = new ResizeObserver(() => {\n\t\t\t\tupdateLineTimelineTitlePosition();\n\t\t\t});\n\n\t\t\tconst $resizeContainer = $('.ResizableContainer');\n\t\t\tif ($resizeContainer.length) {\n\t\t\t\tresizeObserver.observe($resizeContainer[0]);\n\t\t\t}\n\t\t}\n\n\t\tif (config.SelectType === 'TagMultiple') {\n\t\t\tSelect2Options.tags = true;\n\t\t\tSelect2Options.containerCssClass = 'tagSystem';\n\t\t\tSelect2Options.dropdownCssClass = 'tagSystem';\n\t\t\tSelect2Options.createTag = function (params) {\n\t\t\t\tvar term = $.trim(params.term);\n\t\t\t\tif (term === '') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tid: '#' + term,\n\t\t\t\t\ttext: term,\n\t\t\t\t\tnewTag: true,\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t\tif (!config.HasSearch) {\n\t\t\tSelect2Options.minimumResultsForSearch = -1;\n\t\t}\n\n\t\t$WidgetIdentifier.select2(Select2Options);\n\n\t\tif (config.OnChange) {\n\t\t\t$WidgetIdentifier.on('change', config.OnChange);\n\t\t}\n\n\t\tif (config.SelectType === 'Checkbox') {\n\t\t\t$WidgetIdentifier.on('select2:select', function (e) {\n\t\t\t\tif (e.params.data.id === 'All') {\n\t\t\t\t\tvar selectedItems = [];\n\t\t\t\t\tvar allOptions = $WidgetIdentifier.find('option');\n\t\t\t\t\tallOptions.each(function () {\n\t\t\t\t\t\tselectedItems.push($(this).val());\n\t\t\t\t\t});\n\t\t\t\t\t$WidgetIdentifier.select2('destroy');\n\t\t\t\t\t$WidgetIdentifier.val(selectedItems).trigger('change');\n\t\t\t\t\t$WidgetIdentifier.select2(Select2Options);\n\t\t\t\t\t$WidgetIdentifier.select2('open');\n\t\t\t\t} else {\n\t\t\t\t\tvar selectedOptions = $WidgetIdentifier.find('option:selected').length;\n\t\t\t\t\tvar totalOptions = $WidgetIdentifier.find('option').length;\n\t\t\t\t\tif (\n\t\t\t\t\t\tselectedOptions === totalOptions - 1 &&\n\t\t\t\t\t\t$WidgetIdentifier.find('option:selected:first-child').length === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tvar selectedItems = [];\n\t\t\t\t\t\tvar allOptions = $WidgetIdentifier.find('option');\n\t\t\t\t\t\tallOptions.each(function () {\n\t\t\t\t\t\t\tselectedItems.push($(this).val());\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$WidgetIdentifier.select2('destroy');\n\t\t\t\t\t\t$WidgetIdentifier.val(selectedItems).trigger('change');\n\t\t\t\t\t\t$WidgetIdentifier.select2(Select2Options);\n\t\t\t\t\t\t$WidgetIdentifier.select2('open');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$WidgetIdentifier.on('select2:unselect', function (e) {\n\t\t\t\tif (e.params.data.id === 'All') {\n\t\t\t\t\t$WidgetIdentifier.find('option').removeAttr('selected');\n\t\t\t\t\t$WidgetIdentifier.select2('destroy');\n\t\t\t\t\t$WidgetIdentifier.select2(Select2Options);\n\t\t\t\t\t$WidgetIdentifier.select2('open');\n\t\t\t\t\t$WidgetIdentifier.val('').trigger('change');\n\t\t\t\t} else {\n\t\t\t\t\t$WidgetIdentifier.find('option:first-child').removeAttr('selected');\n\t\t\t\t\t$WidgetIdentifier.select2(Select2Options);\n\t\t\t\t\t$WidgetIdentifier.select2('open');\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (config.SelectType === 'Select2') {\n\t\t\t$WidgetIdentifier.on('select2:select', function (e) {\n\t\t\t\tif (e.target.selectedIndex !== 0) {\n\t\t\t\t\t$WidgetIdentifier.parent().addClass('SelectSystemFilter-Selected');\n\t\t\t\t} else {\n\t\t\t\t\t$WidgetIdentifier.parent().removeClass('SelectSystemFilter-Selected');\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (config.SelectType === 'HtmlOptions' || config.SelectType === 'Ajax') {\n\t\t\t// Problem with the title is that it is always escaped, which looks bad when we have HTML there.\n\t\t\t// It should be possible to customize how title is built, but for this we need extra field in source data.\n\t\t\tconst removeSelectionTitle = function () {\n\t\t\t\t$WidgetIdentifier.next().find('.select2-selection__rendered').removeAttr('title');\n\t\t\t};\n\t\t\t$WidgetIdentifier.on('select2:select select2:unselect', removeSelectionTitle);\n\t\t\tremoveSelectionTitle();\n\t\t}\n\t});\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/select-system/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/shift-container/scripts.js":
/*!************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/shift-container/scripts.js ***!
  \************************************************************************/
/***/ (function() {

eval("/* Component ShiftContainer */\n(function($, window, document, SapphireWidgets) {\n\tlet shiftTimelineResizeTimer;\n\tlet $shiftContainerId = $();\n\n\tconst create = shiftContainerId => {\n\t\t// $('.ShiftCard_timeLine').css('visibility', 'hidden');\n\n\t\t$('.ShiftExpandable_container .ActionsMenu ').css('display', 'none');\n\n\t\t$shiftContainerId = $(shiftContainerId);\n\n\t\thasScrollBar();\n\t\thandleShiftTable();\n\n\t\t// setTimeout(function () {\n\t\t// \t$('.ShiftCard_timeLine').css('visibility', 'visible');\n\t\t// \t$('.ShiftExpandable_container .ActionsMenu ').css('display', 'block');\n\t\t// }, 1500);\n\n\t\t$('.ShiftExpandable__arrow')\n\t\t\t.off('mousedown')\n\t\t\t.on('mousedown', function() {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tredrawShiftTimeline();\n\t\t\t\t}, 1500);\n\t\t\t});\n\t};\n\n\tconst handleShiftTable = () => {\n\t\t$('.ShiftExpandable').each(function(index, el) {\n\t\t\tvar $elFlag = $(this)\n\t\t\t\t.parent()\n\t\t\t\t.find('.FlagLine');\n\t\t\tvar $elFlagTime = $(this)\n\t\t\t\t.parent()\n\t\t\t\t.find('.FlagLine_time');\n\t\t\tvar $columnFlag = $elFlag.data('column');\n\t\t\tvar $minutesFlag = $elFlag.data('minutes');\n\t\t\tvar $slots = $(this)\n\t\t\t\t.closest('.ShiftContainer')\n\t\t\t\t.find('.ShiftContainer_header')\n\t\t\t\t.find('.ShiftCellContent');\n\t\t\tvar $slotWidth = Math.round($slots.eq(0).width());\n\t\t\tvar minutesPosition = ($minutesFlag * $slotWidth) / 60;\n\n\t\t\t// handle current time flog horizontal positioning\n\t\t\tvar slotsPosition = [];\n\t\t\t$slots.each(function(index, el) {\n\t\t\t\tslotsPosition.push($(this).position().left);\n\t\t\t});\n\t\t\t$elFlag.css('left', slotsPosition[$columnFlag - 1] + minutesPosition);\n\t\t\t$elFlag.css('display', 'block');\n\t\t\tif ($columnFlag === $slots.length) {\n\t\t\t\t$elFlagTime.css({\n\t\t\t\t\tright: '1px',\n\t\t\t\t\tleft: 'auto',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// handle cells that might span over several slots\n\t\t\t$(this)\n\t\t\t\t.find('.ShiftCard')\n\t\t\t\t.each(function(index, elRow) {\n\t\t\t\t\tvar rowHasSpannedCell = false;\n\t\t\t\t\t$(elRow)\n\t\t\t\t\t\t.find('.ShiftCellContent')\n\t\t\t\t\t\t.each(function(index, elCell) {\n\t\t\t\t\t\t\tvar colspan = $(elCell).data('colspan');\n\t\t\t\t\t\t\tif (colspan === slotsPosition.length || rowHasSpannedCell) {\n\t\t\t\t\t\t\t\t$(elCell).css({\n\t\t\t\t\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\t\t\t\t\tflex: '1 1 auto',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else if (colspan > 1) {\n\t\t\t\t\t\t\t\trowHasSpannedCell = true;\n\t\t\t\t\t\t\t\t$(elCell).css({\n\t\t\t\t\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\t\t\t\t\tflex: 'none',\n\t\t\t\t\t\t\t\t\twidth: +(slotsPosition[colspan] - slotsPosition[0]) + 'px',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t// handle horizontal scroll behavior\n\t\t\tif (el.scrollWidth > el.clientWidth) {\n\t\t\t\t$(el).width(el.scrollWidth);\n\t\t\t\t$(this)\n\t\t\t\t\t.closest('.ShiftContainer')\n\t\t\t\t\t.find('.ShiftContainer_header')\n\t\t\t\t\t.width(el.scrollWidth);\n\t\t\t} else {\n\t\t\t\t$(el).width('auto');\n\t\t\t\t$(this)\n\t\t\t\t\t.closest('.ShiftContainer')\n\t\t\t\t\t.find('.ShiftContainer_header')\n\t\t\t\t\t.width('auto');\n\t\t\t}\n\t\t});\n\t};\n\n\tconst hasScrollBar = () => {\n\t\tvar $ScrollableDiv = $shiftContainerId.find('.ShiftExpandable_container');\n\t\tif ($shiftContainerId.find('.ShiftExpandable_container').length > 0) {\n\t\t\tif ($ScrollableDiv.get(0).scrollHeight > $ScrollableDiv.height()) {\n\t\t\t\tvar $lastCell = $shiftContainerId.find('.IsTimer:last-child');\n\t\t\t\t$lastCell.css('padding-right', '7px');\n\t\t\t}\n\t\t}\n\t};\n\n\tconst redrawShiftTimeline = () => {\n\t\tclearTimeout(shiftTimelineResizeTimer);\n\t\tshiftTimelineResizeTimer = setTimeout(function() {\n\t\t\thasScrollBar();\n\t\t\thandleShiftTable();\n\t\t}, 400);\n\t};\n\n\tconst checkScroll = () => {\n\t\tvar hContent = $('.Content').height();\n\t\tvar hWindow = $(window).height();\n\n\t\tif (hContent > hWindow) redrawShiftTimeline();\n\t};\n\n\tSapphireWidgets.ShiftContainer = {\n\t\tcreate,\n\t\tcheckScroll,\n\t\tredrawShiftTimeline,\n\t};\n})(jQuery, window, document, SapphireWidgets);\n\n$(window)\n\t.off('resize.GenericGallery')\n\t.on('resize.GenericGallery', function() {\n\t\t$('.ShiftCard_timeLine').css('visibility', 'hidden');\n\t\t$('.ShiftExpandable_container .ActionsMenu').css('display', 'none');\n\n\t\tSapphireWidgets.ShiftContainer.redrawShiftTimeline();\n\n\t\tosAjaxBackend && osAjaxBackend.BindAfterAjaxRequest(SapphireWidgets.ShiftContainer.redrawShiftTimeline);\n\n\t\tsetTimeout(SapphireWidgets.ShiftContainer.checkScroll, 1000);\n\n\t\tsetTimeout(function() {\n\t\t\t$('.ShiftCard_timeLine').css('visibility', 'visible');\n\t\t\t$('.ShiftExpandable_container .ActionsMenu').css('display', 'block');\n\t\t}, 1500);\n\t});\n\n$(window).load(function() {\n\tif (!!$('.ShiftContainer').length) {\n\t\t$('.ShiftCard_timeLine').css('visibility', 'hidden');\n\t\t$('.ShiftExpandable_container .ActionsMenu').css('display', 'none');\n\n\t\tsetTimeout(function() {\n\t\t\tSapphireWidgets.ShiftContainer.redrawShiftTimeline();\n\t\t}, 400);\n\n\t\tsetTimeout(SapphireWidgets.ShiftContainer.checkScroll, 500);\n\n\t\tsetTimeout(function() {\n\t\t\t$('.ShiftCard_timeLine').css('visibility', 'visible');\n\t\t\t$('.ShiftExpandable_container .ActionsMenu').css('display', 'block');\n\t\t}, 600);\n\n\t\t$('.navigation-control-item')\n\t\t\t.off('click')\n\t\t\t.on('click', function() {\n\t\t\t\t$('.ShiftCard_timeLine').css('visibility', 'hidden');\n\t\t\t\t$('.ShiftExpandable_container .ActionsMenu').css('display', 'none');\n\t\t\t});\n\n\t\t//Verify the scroll if tooltip opened\n\t\t$('.ShiftExpandable_container').on('scroll', function() {\n\t\t\tif ($('.tooltipster-base').is(':visible')) {\n\t\t\t\t$('.tooltipster-base').css('visibility', 'hidden');\n\t\t\t}\n\t\t});\n\n\t\tosAjaxBackend.BindAfterAjaxRequest(function() {\n\t\t\tsetTimeout(function() {\n\t\t\t\tSapphireWidgets.ShiftContainer.redrawShiftTimeline();\n\t\t\t}, 400);\n\n\t\t\tsetTimeout(SapphireWidgets.ShiftContainer.checkScroll, 500);\n\n\t\t\tsetTimeout(function() {\n\t\t\t\t$('.ShiftCard_timeLine').css('visibility', 'visible');\n\t\t\t\t$('.ShiftExpandable_container .ActionsMenu').css('display', 'block');\n\t\t\t}, 600);\n\n\t\t\t// SapphireWidgets.ShiftContainer.redrawShiftTimeline;\n\t\t});\n\t}\n});\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/shift-container/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/shift-table/shiftTable.js":
/*!***********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/shift-table/shiftTable.js ***!
  \***********************************************************************/
/***/ (function() {

eval("/* Component ShiftTable */\nSapphireWidgets.ShiftTable = widgetId => {\n\t$(document).ready(() => {\n\t\tsetTimeout(() => {\n\t\t\tconst $shiftTable = $(`#${widgetId}`);\n\t\t\tconst $headerCellList = $shiftTable.find('.ShiftTable__HeaderLabels .ShiftTableCell');\n\t\t\tconst $hourLine = $shiftTable.find('.HourLine');\n\n\t\t\tconst columnLine = $hourLine.data('column');\n\t\t\tconst minutesLine = $hourLine.data('minutes');\n\n\t\t\tconst cellWidth = $headerCellList.eq(0).width();\n\t\t\tconst minutesPosition = (cellWidth / 60) * minutesLine;\n\n\t\t\t// Handle current hour line horizontal positioning\n\t\t\tconst cellPosition = [];\n\n\t\t\t$headerCellList.each(function(index, el) {\n\t\t\t\tcellPosition.push($(this).position().left);\n\t\t\t});\n\n\t\t\t$hourLine.css('left', cellPosition[columnLine - 1] + minutesPosition);\n\t\t\t$hourLine.css('display', 'flex');\n\t\t}, 500);\n\t});\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/shift-table/shiftTable.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/shift-table/shiftTableCard.js":
/*!***************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/shift-table/shiftTableCard.js ***!
  \***************************************************************************/
/***/ (function() {

eval("/* Component ShiftTableCard */\nSapphireWidgets.ShiftTableCard = widgetId => {\n\tconst $component = $(`#${widgetId}`);\n\tconst $actions = $component.find('.MoreActions');\n\tconst hasActions = $actions.length > 0;\n\n\tif (hasActions) {\n\t\t$actions.on('click', e => {\n\t\t\te.stopPropagation();\n\n\t\t\t$('.ShiftTableCard').removeClass('ShiftTableCard--selected');\n\t\t\t$component.addClass('ShiftTableCard--selected');\n\n\t\t\twindow.addEventListener('click', onClickOutside);\n\t\t});\n\n\t\tconst onClickOutside = e => {\n\t\t\tconst $target = $(e.target);\n\n\t\t\tif (!e.target.className.includes($component) && !$target.parents($component).is($component)) {\n\t\t\t\t$component.removeClass('ShiftTableCard--selected');\n\n\t\t\t\twindow.removeEventListener('click', onClickOutside);\n\t\t\t}\n\t\t};\n\t}\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/shift-table/shiftTableCard.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/shift-table/shiftTableCardProgress.js":
/*!***********************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/shift-table/shiftTableCardProgress.js ***!
  \***********************************************************************************/
/***/ (function() {

eval("SapphireWidgets.ShiftTableCardProgress = config => {\n\tconst DEFAULT_PADDING = 0;\n\tconst DEFAULT_CARD_HEIGHT = 56;\n\n\tconst setTableCardProgress = () => {\n\t\tconst cardProgresID = config.widgetId;\n\t\tconst startColumn = config.startColumn;\n\t\tconst endColumn = config.endColumn;\n\t\tconst initialMinutes = config.initialMinutes;\n\t\tconst beginsIncomplete = config.beginsIncomplete;\n\t\tconst endsIncomplete = config.endsIncomplete;\n\n\t\tconst $cardProgress = $('#' + cardProgresID);\n\t\tconst $shiftTable = $cardProgress.closest('.ShiftTable');\n\t\tconst $tableCellList = $shiftTable.find('.ShiftTable__Content .ShiftTableCell');\n\t\tconst $tableRowContent = $cardProgress.closest('.ShiftTableRow__Content');\n\t\tconst $tableCard = $tableRowContent.find('.ShiftTableCard');\n\t\tconst $cardProgressList = $tableRowContent.find('.ShiftTableCardProgress');\n\t\tconst $progressBarList = $cardProgress.find('.ProgressBarWrap');\n\t\tconst $actions = $cardProgress.find('.MoreActions');\n\n\t\tconst cardsTotal = $tableCard.length;\n\t\tconst timeSlotWidth = $tableCellList[1].getBoundingClientRect().width;\n\t\tconst colFill = parseInt(endColumn) - parseInt(startColumn) > 0 ? parseInt(endColumn) - parseInt(startColumn) + 1 : 1;//changed to increment plus 1 again, needs to be reviewed when infusions start at time with minutes (like 5:30pm)\n\t\tconst minuteValueWidth = timeSlotWidth / 60;\n\t\tconst hasActions = $actions.length > 0;\n\n\t\tlet totalLeft = beginsIncomplete ? 0 : (initialMinutes * minuteValueWidth);\n\n\t\tfor (let i = 1; i < parseInt(startColumn); i++) {\n\t\t\ttotalLeft += $tableCellList[i].getBoundingClientRect().width;\n\t\t}\n\n\t\tlet roundWidth = Math.round((timeSlotWidth + Number.EPSILON) * 100) / 100;\n\t\tconst paddingOffset = DEFAULT_PADDING * 2;\n\t\tconst newWidth = parseFloat((colFill * roundWidth - paddingOffset) - (beginsIncomplete ? 0 : (endsIncomplete ? (initialMinutes * minuteValueWidth) : 0)));\n\t\tconst direction = $('.Page').hasClass('AR') || $('.Page').hasClass('FA') ? 'right' : 'left';\n\n\t\t$cardProgress.css('width', `${newWidth}px`);\n\t\t$cardProgress.css('max-width', 'unset');\n\t\t$cardProgress.css(direction, `${(totalLeft += DEFAULT_PADDING)}px`);\n\n\t\tif (cardsTotal > 0) {\n\t\t\tlet count = 0;\n\n\t\t\t$tableCard.each(function() {\n\t\t\t\tconst $this = $(this);\n\t\t\t\tconst isOverlaped = checkForOverlap($cardProgress[0], $this[0]);\n\n\t\t\t\tif (isOverlaped === true && count < $cardProgressList.length) {\n\t\t\t\t\t$cardProgress.css('top', $this[0].offsetTop + $cardProgress.height());\n\t\t\t\t}\n\n\t\t\t\tcount = count++;\n\t\t\t});\n\n\t\t\t$cardProgressList.each(function() {\n\t\t\t\tconst $this = $(this);\n\n\t\t\t\tconst helper = helperObj($this, $cardProgress, $cardProgressList);\n\n\t\t\t\tif (helper.isOverlaped) {\n\t\t\t\t\t$cardProgress.css('top', $this[0].offsetTop + 130);\n\t\t\t\t} else {\n\t\t\t\t\t$cardProgress.css('top', $tableRowContent.height() - DEFAULT_PADDING);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst offset = 4 + DEFAULT_CARD_HEIGHT + DEFAULT_PADDING * 2;\n\n\t\t\t$tableRowContent.height($cardProgressList.last().position().top + offset);\n\t\t} else {\n\t\t\t$cardProgressList.each(function() {\n\t\t\t\tconst $this = $(this);\n\n\t\t\t\tconst helper = helperObj($this, $cardProgress, $cardProgressList);\n\n\t\t\t\tif (helper.isOverlaped) {\n\t\t\t\t\tconst offset = DEFAULT_CARD_HEIGHT + DEFAULT_PADDING * 2;\n\n\t\t\t\t\t$cardProgress.css('top', $cardProgress[0].offsetTop + offset + 'px');\n\t\t\t\t\thelper.$shiftCard.height(helper.$shiftCard.height() + $this[0].offsetHeight);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tif (timeSlotWidth !== $tableCellList[1].getBoundingClientRect().width) {\n\t\t\t\tsetTableCardProgress(config);\n\t\t\t}\n\t\t}, 500);\n\n\t\tif (hasActions) {\n\t\t\t$actions.on('click', e => {\n\t\t\t\te.stopPropagation();\n\n\t\t\t\t$cardProgress.addClass('ShiftTableCardProgress--selected');\n\n\t\t\t\twindow.addEventListener('click', onClickOutside);\n\t\t\t});\n\n\t\t\tconst onClickOutside = e => {\n\t\t\t\tconst $target = $(e.target);\n\n\t\t\t\tif (!e.target.className.includes($cardProgress) && !$target.parents($cardProgress).is($cardProgress)) {\n\t\t\t\t\t$cardProgress.removeClass('ShiftTableCardProgress--selected');\n\n\t\t\t\t\twindow.removeEventListener('click', onClickOutside);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/*$progressBarList.each(function(index) {\n\t\t\tconst beginslot = $(this).data('beginslot');\n\t\t\tconst beginminute = $(this).data('beginminute');\n\t\t\tconst endslot = $(this).data('endslot');\n\t\t\tconst endminute = $(this).data('endminute');\n\t\t\tconst actionsWidth = 56;\n\n\t\t\tconst progressBarMinutes = (endslot - beginslot) * 60 + endminute - beginminute;\n\t\t\tconst progressendWithPer = progressBarMinutes * minuteValueWidth;\n\n\t\t\tconst $progressTotal = $(this).find('.ProgressBar__animation');\n\n\t\t\t//$(this).css('left', ((beginslot - 1) * 60 + beginminute) * minuteValueWidth + 'px');\n\t\t\t$progressTotal.css('width', progressendWithPer - actionsWidth + 'px');\n\t\t});*/\n\t};\n\n\tconst checkForOverlap = (el1, el2) => {\n\t\tconst bounds1 = el1.getBoundingClientRect();\n\t\tconst bounds2 = el2.getBoundingClientRect();\n\n\t\tconst firstIstLeftmost = bounds1.left <= bounds2.left;\n\t\tconst leftest = firstIstLeftmost ? bounds1 : bounds2;\n\t\tconst rightest = firstIstLeftmost ? bounds2 : bounds1;\n\n\t\t// Replace > to to >= if border overlap should count\n\t\tif (leftest.right > rightest.left) {\n\t\t\tconst firstIsTopmost = bounds1.top <= bounds2.top;\n\t\t\tconst topest = firstIsTopmost ? bounds1 : bounds2;\n\t\t\tconst bottomest = firstIsTopmost ? bounds2 : bounds1;\n\n\t\t\t// Replace > to >= if border should count\n\t\t\treturn topest.bottom > bottomest.top;\n\t\t} else return false;\n\t};\n\n\tconst helperObj = ($this, $cardProgress, $cardProgressList) => {\n\t\tconst $shiftCard = $this.closest('.ShiftTableRow__Content');\n\t\tlet isOverlaped = checkForOverlap($cardProgress[0], $this[0]);\n\t\tconst createdId = $cardProgress.attr('id');\n\t\tconst loopedId = $this.attr('id');\n\t\tconst $firstSlotCreated = $cardProgressList[0];\n\n\t\tisOverlaped = isOverlaped === true && createdId != loopedId && createdId != $firstSlotCreated.id;\n\n\t\treturn { $shiftCard, createdId, loopedId, $firstSlotCreated, isOverlaped };\n\t};\n\n\t$(document).ready(function() {\n\t\tsetTableCardProgress(config);\n\t});\n\n\t$(window).resize(function() {\n\t\tif (window[config.widgetId]) {\n\t\t\tclearTimeout(window[config.widgetId].resizedFinished);\n\t\t\twindow[config.widgetId].resizedFinished = setTimeout(function() {\n\t\t\t\tsetTableCardProgress(config);\n\t\t\t}, 250);\n\t\t}\n\t});\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/shift-table/shiftTableCardProgress.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/shift-table/shiftTableHover.js":
/*!****************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/shift-table/shiftTableHover.js ***!
  \****************************************************************************/
/***/ (function() {

eval("/* Component ShiftTableCardHover */\nSapphireWidgets.ShiftTableCardHover = widgetId => {\n\t$(document).ready(function() {\n\t\tconst $card = $(`#${widgetId}`);\n\t\tconst $cardContent = $card.find('.ShiftTableCardHover__Content');\n\n\t\t$cardContent.on('click', e => {\n\t\t\te.stopPropagation();\n\n\t\t\t$card.addClass('ShiftTableCardHover--selected');\n\n\t\t\twindow.addEventListener('click', onClickOutside);\n\t\t});\n\n\t\tconst onClickOutside = e => {\n\t\t\tconst $target = $(e.target);\n\n\t\t\tif (!e.target.className.includes($card) && !$target.parents($card).is($card)) {\n\t\t\t\t$card.removeClass('ShiftTableCardHover--selected');\n\n\t\t\t\twindow.removeEventListener('click', onClickOutside);\n\t\t\t}\n\t\t};\n\t});\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/shift-table/shiftTableHover.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/side-menu/scripts.js":
/*!******************************************************************!*\
  !*** ./src/components/05-components/v3-pat/side-menu/scripts.js ***!
  \******************************************************************/
/***/ (function() {

eval("/* Component SideMenuStructure */\n(function($, window, SapphireWidgets) {\n\tclass SideMenu {\n\t\tconstructor(config) {\n\t\t\tthis.options = {\n\t\t\t\t...config,\n\t\t\t};\n\n\t\t\tthis.onComponentInit();\n\t\t}\n\n\t\tsetMainMenuWidth() {\n\t\t\t$(document).ready(() => {\n\t\t\t\tconst $sideBarIframe = $('.LayoutBase-iframesidebar.notExpandable');\n\n\t\t\t\tif ($sideBarIframe.length) {\n\t\t\t\t\tconst $mainMenu = $('.LayoutBase-MainMenu');\n\t\t\t\t\t$mainMenu.css({\n\t\t\t\t\t\twidth: 'calc(100% - 262px)',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\topenCloseMenu(toOpen) {\n\t\t\tif (toOpen) {\n\t\t\t\tthis.$component.addClass('SideMenu--open');\n\n\t\t\t\t$('.LayoutBase-iframesidebar').css({\n\t\t\t\t\tzIndex: 0,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.$component.removeClass('SideMenu--open');\n\n\t\t\t\t$('.LayoutBase-iframesidebar').css({\n\t\t\t\t\tzIndex: 70,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\twindowClick($component) {\n\t\t\t$(window)\n\t\t\t\t.off('click.SideMenuStructure')\n\t\t\t\t.on('click.SideMenuStructure', event => {\n\t\t\t\t\tconst isMenuItem = event.target.offsetParent && $(event.target.offsetParent).hasClass('MenuItem');\n\n\t\t\t\t\tif (!isMenuItem) {\n\t\t\t\t\t\t$component.find('.SideMenu__MenuItems .active').removeClass('active');\n\t\t\t\t\t\t$component.find('.SideMenu__MenuItems .show').removeClass('show');\n\n\t\t\t\t\t\t$(window).off('click.SideMenuStructure');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tonComponentInit() {\n\t\t\tthis.setMainMenuWidth();\n\n\t\t\tthis.$component = $(`#${this.options.widgetId}`);\n\t\t\tthis.$trigger = this.$component.find('.SideMenu__Trigger');\n\t\t\tthis.$shield = this.$component.find('.SideMenu__Shield');\n\t\t\tthis.$closeButton = this.$component.find('.SideMenu__MenuClose');\n\t\t\tthis.$tabItem = this.$component.find('.SideMenu__TabItems .MenuItem');\n\t\t\tthis.$menuItem = this.$component.find('.SideMenu__MenuItems .MenuItem__ItemTitle');\n\t\t\tthis.$subItem = this.$component.find('.SideMenu__MenuItems .MenuItem_subItems');\n\t\t\tthis.$department = this.$component.find('.SideMenu__Tabs .DepartmentName');\n\n\t\t\t//this.$trigger.hide();\n\t\t\tthis.$department.hide();\n\n\t\t\tthis.$iframeContainer = this.$component.find('.iframeContainer');\n\t\t\tthis.$iframeContainer.append('<div class=\"lds-ring OI\"><div></div><div></div><div></div><div></div></div>');\n\t\t\tthis.$iframeContainer.find('iframe').load(() => {\n\t\t\t\tthis.$iframeContainer.find('.lds-ring').fadeOut();\n\n\t\t\t\tif (!this.$component.hasClass('SideMenu--tabsTheme')) {\n\t\t\t\t\t//this.$trigger.show();\n\t\t\t\t\tthis.$department.show();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.$trigger.on('click', () => this.openCloseMenu(true));\n\t\t\tthis.$shield.on('click', () => this.openCloseMenu(false));\n\t\t\tthis.$closeButton.on('click', () => this.openCloseMenu(false));\n\n\t\t\tthis.$tabItem.on('click', event => {\n\t\t\t\tconst $target = $(event.currentTarget);\n\t\t\t\tconst $link = $target.find('.MenuItem_label a');\n\n\t\t\t\tif ($link.length) $link.get(0).click();\n\t\t\t});\n\n\t\t\tthis.$menuItem.on('click', event => {\n\t\t\t\tconst isIcon = event.target.className === 'icon icon-changedown';\n\t\t\t\tif (event.target !== event.currentTarget && !isIcon) return;\n\n\t\t\t\tconst $target = $(event.currentTarget).parent();\n\t\t\t\tconst $subItems = $target.find('.MenuItem_subItems');\n\t\t\t\tconst $link = $target.find('.MenuItem_label a');\n\n\t\t\t\tif ($link.length) $link.get(0).click();\n\n\t\t\t\tif ($target.hasClass('active')) {\n\t\t\t\t\t$target.removeClass('active');\n\t\t\t\t\t$subItems.removeClass('show');\n\t\t\t\t} else {\n\t\t\t\t\tthis.$component\n\t\t\t\t\t\t.find('.SideMenu__MenuItems .active')\n\t\t\t\t\t\t.not($target)\n\t\t\t\t\t\t.removeClass('active');\n\n\t\t\t\t\tthis.$component\n\t\t\t\t\t\t.find('.SideMenu__MenuItems .show')\n\t\t\t\t\t\t.not($target)\n\t\t\t\t\t\t.removeClass('show');\n\n\t\t\t\t\t$target.toggleClass('active');\n\t\t\t\t\t$subItems.toggleClass('show');\n\n\t\t\t\t\tif (this.$component.hasClass('SideMenu--tabsTheme')) {\n\t\t\t\t\t\tthis.windowClick(this.$component);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.$subItem.on('click', event => event.stopPropagation());\n\n\t\t\tthis.$component\n\t\t\t\t.find('.SideMenu__TabItems > div:empty')\n\t\t\t\t.parent()\n\t\t\t\t.hide();\n\t\t}\n\t}\n\n\tconst resizeTabs = ($component, $menuTabs, isRecursive) => {\n\t\tconst $menuTrigger = $component.find('.SideMenu__Trigger');\n\t\tconst headerWidth = $component.find('.SideMenu__Header').outerWidth();\n\t\tconst $menuItems = $menuTabs.find('.SideMenu__MenuItems');\n\t\tconst tabsWidth = $menuItems.length ? $menuItems.outerWidth() : $menuTabs.outerWidth();\n\n\t\tconst fixedValue = $(window.parent).width() < 1024 ? 180 : 196;\n\t\tlet hasItemToRemove = true;\n\n\t\tif (tabsWidth > 0 && tabsWidth + fixedValue > headerWidth && hasItemToRemove) {\n\t\t\tconst $moreOptions = $component.find('.SideMenu__Content');\n\t\t\tconst $lastItem = $menuTabs\n\t\t\t\t.find('.SideMenu__MenuItems .MenuItem')\n\t\t\t\t.last()\n\t\t\t\t.detach();\n\n\t\t\tif (!$moreOptions.find('.SideMenu__MenuItems').length) {\n\t\t\t\t$('<div class=\"SideMenu__MenuItems\"></div>').appendTo($moreOptions);\n\t\t\t}\n\n\t\t\tconst $menuItems = $moreOptions.find('.SideMenu__MenuItems');\n\t\t\t$lastItem.prependTo($menuItems);\n\n\t\t\t$menuTrigger.css('visibility', 'visible');\n\n\t\t\thasItemToRemove = !!$lastItem.length;\n\n\t\t\tresizeTabs($component, $menuTabs, !!$lastItem.length);\n\t\t} else if (!isRecursive) {\n\t\t\tconst $menuItems = $menuTabs.find('.SideMenu__MenuItems');\n\t\t\tlet $firstItem = $component.find('.SideMenu__Content .SideMenu__MenuItems .MenuItem').first();\n\n\t\t\tconst newLinkWidth = 140 * 1.16 + 16; // Font-size + padding between items (gap)\n\t\t\tconst newItemsWidth = newLinkWidth + $menuItems.outerWidth();\n\n\t\t\tif (newItemsWidth + fixedValue < headerWidth) {\n\t\t\t\t$firstItem = $firstItem.detach();\n\t\t\t\t$firstItem.appendTo($menuTabs.find('.SideMenu__MenuItems'));\n\n\t\t\t\tif ($component.find('.SideMenu__Content .SideMenu__MenuItems .MenuItem').length) {\n\t\t\t\t\tresizeTabs($component, $menuTabs);\n\t\t\t\t} else {\n\t\t\t\t\t$menuTrigger.css('visibility', 'hidden');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst setTabsTheme = () => {\n\t\t$(top.document).ready(function() {\n\t\t\t$('.SideMenu', window.parent.document).addClass('SideMenu--tabsTheme');\n\n\t\t\tconst $component = $('.SideMenu', window.parent.document);\n\t\t\tconst $menuTabs = $component.find('.SideMenu__Tabs');\n\n\t\t\t$menuTabs.find('> div:empty').hide();\n\n\t\t\tconst $items = $component.find('.SideMenu__MenuItems').detach();\n\t\t\t$items.appendTo($menuTabs);\n\n\t\t\t$(document).ready(function() {\n\t\t\t\tresizeTabs($component, $menuTabs, true);\n\t\t\t});\n\n\t\t\t$(window.parent).resize(function() {\n\t\t\t\tclearTimeout(window.resizedFinished);\n\t\t\t\twindow.resizedFinished = setTimeout(function() {\n\t\t\t\t\tresizeTabs($component, $menuTabs);\n\t\t\t\t}, 250);\n\t\t\t});\n\t\t});\n\t};\n\n\tconst create = config => (window[config.widgetId] = new SideMenu(config));\n\n\tSapphireWidgets.SideMenu = { create, setTabsTheme };\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/side-menu/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/sidebar/sidebar-structure.js":
/*!**************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/sidebar/sidebar-structure.js ***!
  \**************************************************************************/
/***/ (function() {

eval("/* Component ISidebar */\n(function($, window, document, SapphireWidgets) {\n\tvar create = function(config) {\n\t\twindow[config.widgetId] = new Sidebar(config);\n\t\tSapphireWidgets.Sidebar.widgetId = config.widgetId;\n\t};\n\n\tvar close = function() {\n\t\twindow[SapphireWidgets.Sidebar.widgetId].close();\n\t};\n\n\tvar Sidebar = function(config) {\n\t\tvar _this = this;\n\t\tthis.isExpandable = config.isExpandable;\n\t\tthis.$widget = $('#' + config.widgetId);\n\t\tthis.$sidebar = this.$widget.find('.ISidebar');\n\t\tthis.$sidebarMenu = this.$widget.find('.ISidebar-menu');\n\t\tthis.$sidebarMenuItem = this.$widget.find('.SidebarMenuItem');\n\t\tthis.$sidebarShield = this.$widget.find('.ISidebar-shield');\n\t\tthis.$sidebarContent = this.$widget.find('.ISidebar-content');\n\t\tthis.showLastViewed = false;\n\n\t\tthis.$sidebarContent.find('> div').each(function() {\n\t\t\tif ($(this).hasClass('PH') && $(this).text() === '') {\n\t\t\t\t$(this).remove();\n\t\t\t}\n\t\t});\n\t\tthis.attachEvents();\n\t\tif (!this.isExpandable) {\n\t\t\tthis.openMenuItem(0);\n\t\t}\n\t\t$(function() {\n\n\t\t\tif (!config.isExpandable) {\n\t\t\t\t$(`.${config.selectedTab}`).click();\n\t\t\t}\n\n\t\t\twindow.parent.$('.LayoutBase-iframesidebar .lds-ring').fadeOut();\n\n\t\t\tif (!this.isExpandable) {\n\t\t\t\t$('input[type=\"text\"]:visible')\n\t\t\t\t\t.eq(0)\n\t\t\t\t\t.focus();\n\t\t\t}\n\t\t});\n\n\t\t$(window).unload(function() {\n\t\t\twindow.parent.$('.LayoutBase-iframesidebar .lds-ring').fadeOut();\n\t\t});\n\t};\n\n\tSidebar.prototype.attachEvents = function() {\n\t\tvar _this = this;\n\t\tthis.$sidebarMenu.on('click', function(evt) {\n\t\t\tconsole.log(evt);\n\n\t\t\tevt.stopPropagation();\n\t\t\tif (!_this.$sidebar.hasClass('open')) {\n\t\t\t\t_this.openMenuItem(0);\n\t\t\t}\n\t\t});\n\t\tthis.$sidebarMenuItem.on('click', function() {\n\t\t\tvar selectedPosition = $(this).index();\n\t\t\t_this.openMenuItem(selectedPosition);\n\t\t});\n\t\tthis.$sidebarShield.on('click', function() {\n\t\t\t_this.close();\n\t\t});\n\t\tthis.$sidebar.on('click', '.SearchSideBarFields .ButtonGroup_button:first-child', function() {\n\t\t\t_this.$sidebar\n\t\t\t\t.find('.FieldsSlider')\n\t\t\t\t.addClass('Tab1')\n\t\t\t\t.removeClass('Tab2');\n\t\t\t_this.setFieldFocus(_this.$sidebarContent.find('.TextInput:visible').eq(0));\n\t\t});\n\t\tthis.$sidebar.on('click', '.SearchSideBarFields .ButtonGroup_button:last-child', function() {\n\t\t\t_this.$sidebar\n\t\t\t\t.find('.FieldsSlider')\n\t\t\t\t.addClass('Tab2')\n\t\t\t\t.removeClass('Tab1');\n\t\t\t_this.setFieldFocus(_this.$sidebarContent.find('.TextInput:visible').eq(0));\n\t\t});\n\n\t\tthis.$sidebar.on('click', '.show-last-viewed', function() {\n\t\t\t_this.showLastViewed = !_this.showLastViewed;\n\n\t\t\tdocument.querySelector('.ISidebar').dataset.showlastviewed = _this.showLastViewed;\n\n\t\t\twindow.parent.document.querySelector('.LayoutBase-iframesidebar.notExpandable').dataset.showlastviewed =\n\t\t\t\t_this.showLastViewed;\n\n\t\t\tif (_this.showLastViewed) {\n\t\t\t\twindow.parent.document.querySelector('.LayoutBase-iframesidebar.notExpandable').style.width = '100%';\n\t\t\t} else {\n\t\t\t\t_this.close();\n\t\t\t}\n\t\t});\n\t};\n\n\tSidebar.prototype.openMenuItem = function(selectedPosition) {\n\t\tvar _this = this;\n\n\t\tthis.$sidebar\n\t\t\t.find('.SidebarMenuItem')\n\t\t\t.removeClass('active')\n\t\t\t.eq(selectedPosition)\n\t\t\t.addClass('active');\n\n\t\tthis.$sidebar\n\t\t\t.find('.ISidebar-content > .ISidebar-content-panel')\n\t\t\t.hide()\n\t\t\t.eq(selectedPosition)\n\t\t\t.show();\n\n\t\tthis.$sidebar.addClass('open');\n\n\t\t// console.log(this.$sidebar);\n\n\t\tif (window.parent.length && this.isExpandable) {\n\t\t\tdocument.querySelector('.ISidebar').dataset.showlastviewed = 'true';\n\t\t\twindow.parent.SapphireWidgets.LayoutBase.openSidebarIframe(0);\n\t\t}\n\n\t\tif (this.$sidebarContent.find('.TextInput:visible').length > 0) {\n\t\t\tthis.setFieldFocus(this.$sidebarContent.find('.TextInput:visible').eq(0));\n\t\t}\n\n\t\tif (window.parent.$('.select2-container--open').length) {\n\t\t\twindow.parent.$('.select2-hidden-accessible').select2('close');\n\t\t}\n\t};\n\n\tSidebar.prototype.setFieldFocus = function($input) {\n\t\twindow.setTimeout(function() {\n\t\t\t$input.click().select();\n\t\t}, 250);\n\t};\n\n\tSidebar.prototype.close = function() {\n\t\tvar _this = this;\n\n\t\tconsole.log('sidebar close');\n\n\t\tif (window.parent.length) {\n\t\t\twindow.parent.SapphireWidgets.LayoutBase.closeSidebarIframe(0);\n\t\t\t_this.showLastViewed = false;\n\t\t\tdocument.querySelector('.ISidebar').dataset.showlastviewed = _this.showLastViewed;\n\t\t\twindow.parent.document.querySelector('.LayoutBase-iframesidebar').dataset.showlastviewed = _this.showLastViewed;\n\t\t}\n\t\tif (this.isExpandable) {\n\t\t\tthis.$sidebar.removeClass('open');\n\t\t\tthis.$sidebar.find('.SidebarMenuItem').removeClass('active');\n\t\t\tthis.$sidebar.find('.ISidebar-content > .ISidebar-content-panel').hide();\n\t\t}\n\t};\n\n\tSapphireWidgets.Sidebar = {\n\t\tcreate: create,\n\t\tclose: close,\n\t};\n})(jQuery, window, document, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/sidebar/sidebar-structure.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/small-box-selectable/scripts.js":
/*!*****************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/small-box-selectable/scripts.js ***!
  \*****************************************************************************/
/***/ (function() {

eval("SapphireWidgets.SmallBoxSelectable = function(config) {\n\tconst $component = $(`#${config.widgetId}`);\n\n\tif (config.selectOnClick) {\n\t\t$component.click(() => {\n\t\t\tconst $list = $('.SmallBoxList .SmallBoxSelectable').not($component);\n\n\t\t\t$list.removeClass('SmallBoxSelectable--selected');\n\t\t\t$component.toggleClass('SmallBoxSelectable--selected');\n\t\t});\n\t}\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/small-box-selectable/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/spinner-horizontal/scripts.js":
/*!***************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/spinner-horizontal/scripts.js ***!
  \***************************************************************************/
/***/ (function() {

eval("/* Component SpinnerHorizontal */\nSapphireWidgets.SpinnerHorizontal = {\n\tcreate: config => {\n\t\tconst $input = $(`#${config.widgetId} input`);\n\t\tconst $plus = $(`#${config.widgetId} a.Plus`);\n\t\tconst $minus = $(`#${config.widgetId} a.Minus`);\n\n\t\tlet val = $input.val();\n\n\t\tif (val <= +config.minValue) {\n\t\t\t$minus.attr('disabled', 'disabled');\n\t\t} else if (val >= +config.maxValue) {\n\t\t\t$plus.attr('disabled', 'disabled');\n\t\t}\n\n\t\t$input.on('change', function() {\n\t\t\tval = Math.abs(parseInt(this.value, 10) || +config.minValue);\n\t\t\tthis.value = val > +config.maxValue ? +config.maxValue : val < +config.minValue ? +config.minValue : val;\n\n\t\t\tif (val <= +config.minValue) $minus.attr('disabled', 'disabled');\n\t\t\telse $minus.removeAttr('disabled');\n\n\t\t\tif (val >= +config.maxValue) $plus.attr('disabled', 'disabled');\n\t\t\telse $plus.removeAttr('disabled');\n\t\t});\n\t},\n\tincrement: function(elementId, minValue, maxValue, triggerOnChange) {\n\t\tvar _element = $(elementId)\n\t\t\t.find('input[type=\"number\"]')\n\t\t\t.first();\n\t\tif (_element.val() == undefined || _element.val() == '' || isNaN(parseFloat(_element.val()))) {\n\t\t\t_element.val(minValue);\n\t\t\tif (triggerOnChange) {\n\t\t\t\t_element.trigger('change');\n\t\t\t}\n\t\t} else {\n\t\t\tif (parseFloat(_element.val()) < maxValue) {\n\t\t\t\t_element.val(parseFloat(_element.val()) + 1);\n\t\t\t\tif (triggerOnChange) {\n\t\t\t\t\t_element.trigger('change');\n\t\t\t\t}\n\t\t\t\t$(elementId)\n\t\t\t\t\t.find('a.Minus')\n\t\t\t\t\t.removeAttr('disabled');\n\t\t\t}\n\t\t\tif (parseFloat(_element.val()) >= maxValue) {\n\t\t\t\t$(elementId)\n\t\t\t\t\t.find('a.Plus')\n\t\t\t\t\t.attr('disabled', 'disabled');\n\t\t\t}\n\t\t}\n\t},\n\tdecrement: function(elementId, minValue, triggerOnChange) {\n\t\tvar _element = $(elementId)\n\t\t\t.find('input[type=\"number\"]')\n\t\t\t.first();\n\t\tif (_element.val() == undefined || _element.val() == '' || isNaN(parseFloat(_element.val()))) {\n\t\t\t_element.val(minValue);\n\t\t\tif (triggerOnChange) {\n\t\t\t\t_element.trigger('change');\n\t\t\t}\n\t\t} else {\n\t\t\tif (parseFloat(_element.val()) > minValue) {\n\t\t\t\t_element.val(parseFloat(_element.val()) - 1);\n\t\t\t\tif (triggerOnChange) {\n\t\t\t\t\t_element.trigger('change');\n\t\t\t\t}\n\t\t\t\t$(elementId)\n\t\t\t\t\t.find('a.Plus')\n\t\t\t\t\t.removeAttr('disabled');\n\t\t\t}\n\t\t\tif (parseFloat(_element.val()) <= minValue) {\n\t\t\t\t$(elementId)\n\t\t\t\t\t.find('a.Minus')\n\t\t\t\t\t.attr('disabled', 'disabled');\n\t\t\t}\n\t\t}\n\t},\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/spinner-horizontal/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/spinner-vertical/scripts.js":
/*!*************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/spinner-vertical/scripts.js ***!
  \*************************************************************************/
/***/ (function() {

eval("/* Component SpinnerVertical */\n(function($, window, document, SapphireWidgets) {\n\tconst create = function(config) {\n\t\t$(document).ready(function() {\n\t\t\tconst $minusVertical = $(`#${config.widgetId}`).find('.MinusVertical');\n\t\t\tconst $inputSpinner = $(`#${config.widgetId} .SpinnerInputVertical input`);\n\n\t\t\t$inputSpinner.on('blur keyup input', function(event) {\n\t\t\t\tconst currentInputValue = $inputSpinner.val();\n\n\t\t\t\tif (config.numberList && event.type === 'blur') {\n\t\t\t\t\tconst inputValueInt = parseInt(currentInputValue);\n\t\t\t\t\tconst arrayToSpin = config.numberList;\n\t\t\t\t\tconst $errorMessage = $(`#${config.widgetId} .SpinnerErrorMessage`);\n\n\t\t\t\t\tif (config.hideErrorMessage == true && (isNaN(inputValueInt) || inputValueInt == 0))\n\t\t\t\t\t\t$errorMessage.css('display', 'none' );\n\t\t\t\t\t\telse if(arrayToSpin.indexOf(inputValueInt) === -1) {\n\t\t\t\t\t\t$errorMessage.css('display', 'block' );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t$errorMessage.css('display', 'none' );\n\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (currentInputValue < config.minValue) $minusVertical.addClass('DisabledSpin');\n\t\t\t\telse $minusVertical.removeClass('DisabledSpin');\n\t\t\t});\n\n\t\t\tif ($inputSpinner.val() <= config.minValue) {\n\t\t\t\t$minusVertical.addClass('DisabledSpin');\n\t\t\t}\n\n\t\t\tif (config.numberList && $inputSpinner.val() === '') {\n\t\t\t\tlet currentNumber = 0;\n\t\t\t\tconst arrayToSpin = config.numberList.split(',');\n\n\t\t\t\t$inputSpinner.val(arrayToSpin[currentNumber]);\n\t\t\t\t$minusVertical.addClass('DisabledSpin');\n\t\t\t}\n\n\t\t\tif (config.isCursorOnFocus) {\n\t\t\t\t$('body').on('focus', `#${config.inputID} input`, function() {\n\t\t\t\t\tvar that = this;\n\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tthat.focus();\n\t\t\t\t\t\tvar val = that.value;\n\t\t\t\t\t\tthat.value = '';\n\t\t\t\t\t\tthat.value = val;\n\t\t\t\t\t}, 1);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (config.isInputEmpty) {\n\t\t\t\t$inputSpinner.attr('value', '');\n\t\t\t\t$minusVertical.addClass('DisabledSpin');\n\t\t\t} else {\n\t\t\t\t$inputSpinner.blur();\n\t\t\t}\n\t\t});\n\t};\n\n\tconst increment = (elementId, minValue, maxValue, triggerOnChange, triggerOnInput, listTospin = []) => {\n\t\tconst $spinner = $(elementId);\n\t\tlet $input = $spinner.find('input[type=\"text\"], input[type=\"number\"]').first();\n\n\t\tvar forceInteger = $(elementId).data('forceinteger') === 'True' ? true : false;\n\t\tvar currentValue = parseFloat($input.val());\n\t\tvar incrementUnit = 1;\n\t\tvar isDecimals = currentValue % 1 != 0;\n\t\tvar arraytospin = listTospin;\n\n\t\tconst $minusVertical = $(elementId).find('.MinusVertical');\n\t\tconst $plusVertical = $(elementId).find('.PlusVertical');\n\n\t\t$minusVertical.removeClass('DisabledSpin');\n\n\t\tif (arraytospin.length) {\n\t\t\tvar currentPosition = arraytospin.indexOf(parseInt($input.val()));\n\t\t\tvar maximumToSpin = arraytospin.lastIndexOf(arraytospin.slice(-1)[0]);\n\n\t\t\t$plusVertical.removeClass('DisabledSpin');\n\n\t\t\tif (maximumToSpin - 1 === currentPosition) {\n\t\t\t\tcurrentPosition = currentPosition + 1;\n\t\t\t\t$input.val(arraytospin[currentPosition]);\n\n\t\t\t\tif (triggerOnChange) $input.trigger('change');\n\t\t\t\tif (triggerOnInput) $input.trigger('input');\n\t\t\t} else if (maximumToSpin === currentPosition) {\n\t\t\t\tcurrentPosition = currentPosition % maximumToSpin;\n\t\t\t\t$input.val(arraytospin[currentPosition]);\n\n\t\t\t\ttriggerEvents($input, triggerOnChange, triggerOnInput);\n\t\t\t} else {\n\t\t\t\tcurrentPosition = (currentPosition + 1) % maximumToSpin;\n\t\t\t\t$input.val(arraytospin[currentPosition]);\n\n\t\t\t\ttriggerEvents($input, triggerOnChange, triggerOnInput);\n\t\t\t}\n\n\t\t\tif (currentPosition === maximumToSpin) $plusVertical.addClass('DisabledSpin');\n\t\t\tif (currentPosition === 0) $minusVertical.addClass('DisabledSpin');\n\n\t\t\t$spinner.find('.SpinnerErrorMessage').css('display', 'none');\n\t\t} else {\n\t\t\tif (parseFloat(currentValue) < minValue) {\n\t\t\t\t$minusVertical.addClass('DisabledSpin');\n\t\t\t} else {\n\t\t\t\t$minusVertical.removeClass('DisabledSpin');\n\t\t\t}\n\n\t\t\tif (!forceInteger && isDecimals) incrementUnit = parseFloat(0.1);\n\n\t\t\tif (currentValue === undefined || currentValue === '' || isNaN(parseFloat(currentValue))) {\n\t\t\t\t$input.val(minValue);\n\n\t\t\t\ttriggerEvents($input, triggerOnChange, triggerOnInput);\n\t\t\t} else {\n\t\t\t\tif (parseFloat(currentValue) < maxValue) {\n\t\t\t\t\tif (currentValue === 0 && !forceInteger) incrementUnit = parseFloat(0.1);\n\n\t\t\t\t\t$input.val(parseFloat((currentValue + incrementUnit).toFixed(1)));\n\n\t\t\t\t\ttriggerEvents($input, triggerOnChange, triggerOnInput);\n\n\t\t\t\t\t$minusVertical.removeAttr('disabled');\n\t\t\t\t} else {\n\t\t\t\t\t$plusVertical.attr('disabled', 'disabled');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcheckDisabledStatus(elementId, parseFloat($input.val()), minValue, maxValue);\n\t\t}\n\t};\n\n\tconst decrement = (elementId, minValue, maxValue, triggerOnChange, triggerOnInput, listTospin = []) => {\n\t\tconst $spinner = $(elementId);\n\t\tconst $input = $spinner.find('input[type=\"text\"], input[type=\"number\"]').first();\n\n\t\tlet forceInteger = $(elementId).data('forceinteger') === 'True' ? true : false;\n\t\tlet currentValue = parseFloat($input.val());\n\t\tlet incrementUnit = 1;\n\t\tlet isDecimals = currentValue % 1 != 0;\n\t\tlet arraytospin = listTospin;\n\n\t\tconst $minusVertical = $(elementId).find('.MinusVertical');\n\t\tconst $plusVertical = $(elementId).find('.PlusVertical');\n\n\t\tif (arraytospin.length) {\n\t\t\tlet currentPosition = arraytospin.indexOf(parseInt($input.val()));\n\t\t\tlet maximumToSpin = arraytospin.lastIndexOf(arraytospin.slice(-1)[0]);\n\n\t\t\tif (currentPosition == 0) {\n\t\t\t\t$input.val(arraytospin[maximumToSpin]);\n\n\t\t\t\tif (triggerOnChange) $input.trigger('change');\n\t\t\t\tif (triggerOnInput) $input.trigger('input');\n\t\t\t} else {\n\t\t\t\tcurrentPosition = (currentPosition - 1) % maximumToSpin;\n\t\t\t\t$input.val(arraytospin[currentPosition]);\n\n\t\t\t\ttriggerEvents($input, triggerOnChange, triggerOnInput);\n\t\t\t}\n\n\t\t\t$spinner.find('.SpinnerErrorMessage').css('display', 'none');\n\t\t} else {\n\t\t\tif (!forceInteger && isDecimals) incrementUnit = parseFloat(0.1);\n\n\t\t\tif (currentValue === undefined || currentValue === '' || isNaN(parseFloat(currentValue))) {\n\t\t\t\t$input.val(minValue);\n\n\t\t\t\ttriggerEvents($input, triggerOnChange, triggerOnInput);\n\t\t\t} else {\n\t\t\t\tif (parseFloat(currentValue) > minValue) {\n\t\t\t\t\tif (currentValue === 1 && !forceInteger) incrementUnit = parseFloat(0.1);\n\n\t\t\t\t\t$input.val(parseFloat((currentValue - incrementUnit).toFixed(1)));\n\n\t\t\t\t\ttriggerEvents($input, triggerOnChange, triggerOnInput);\n\n\t\t\t\t\t$plusVertical.removeAttr('disabled');\n\t\t\t\t} else {\n\t\t\t\t\t$minusVertical.attr('disabled', 'disabled');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcheckDisabledStatus(elementId, parseFloat($input.val()), minValue, maxValue);\n\t\t}\n\t};\n\n\tconst triggerEvents = (input, triggerOnChange, triggerOnInput) => {\n\t\tif (triggerOnChange) input.trigger('change');\n\t\tif (triggerOnInput) input.trigger('input');\n\t};\n\n\tconst checkDisabledStatus = (elementId, valueToCheck, minValue, maxValue) => {\n\t\tif (valueToCheck <= minValue) {\n\t\t\t$(elementId)\n\t\t\t\t.find('a.MinusVertical')\n\t\t\t\t.attr('disabled', 'disabled');\n\t\t} else {\n\t\t\t$(elementId)\n\t\t\t\t.find('a.MinusVertical')\n\t\t\t\t.removeAttr('disabled');\n\t\t}\n\t\tif (valueToCheck >= maxValue) {\n\t\t\t$(elementId)\n\t\t\t\t.find('a.PlusVertical')\n\t\t\t\t.attr('disabled', 'disabled');\n\t\t} else {\n\t\t\t$(elementId)\n\t\t\t\t.find('a.PlusVertical')\n\t\t\t\t.removeAttr('disabled');\n\t\t}\n\t};\n\n\tSapphireWidgets.SpinnerVertical = {\n\t\tcreate,\n\t\tincrement,\n\t\tdecrement,\n\t};\n})(jQuery, window, document, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/spinner-vertical/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/split-button/scripts.js":
/*!*********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/split-button/scripts.js ***!
  \*********************************************************************/
/***/ (function() {

eval("/* Component SplitButton */\n(function($, window, document, SapphireWidgets) {\n\tvar create = function(config) {\n\t\twindow[config.widgetId] = new SplitButton(config);\n\t};\n\n\tvar SplitButton = function(config) {\n\t\tvar _this = this;\n\t\tthis.config = config;\n\t\tthis.$widget = $('#' + this.config.widgetId);\n\t\tthis.$button = this.$widget.find('.SplitButton-button');\n\t\tthis.$buttonLink = this.$button.find('> a');\n\t\tthis.$trigger = this.$widget.find('.SplitButton-trigger');\n\t\tthis.$actions = this.$widget.find('.SplitButton-actions');\n\t\tif (!!this.$actions.text()) {\n\t\t\tthis.$widget.find('> .SplitButton').addClass('hasTrigger');\n\t\t\tthis.buildActionsTrigger();\n\t\t}\n\t};\n\n\tSplitButton.prototype.buildActionsTrigger = function() {\n\t\tvar _this = this;\n\t\tvar classList = this.$buttonLink[0].classList.value;\n\t\tthis.$trigger.addClass(classList);\n\t\t$(function() {\n\t\t\t// inside a document ready due to sapphire popup binded events\n\t\t\tif (!_this.$trigger.hasClass('tooltipstered')) {\n\t\t\t\t_this.$trigger.tooltipster({\n\t\t\t\t\tarrow: true,\n\t\t\t\t\tcontent: $('<section/>').append(_this.$actions.clone(true)),\n\t\t\t\t\ttrigger: _this.config.triggerEvent,\n\t\t\t\t\tposition: _this.config.position,\n\t\t\t\t\tmaxWidth: _this.config.maxWidth,\n\t\t\t\t\ttheme: 'tooltipster-splitbutton Padding-' + _this.config.padding,\n\t\t\t\t});\n\t\t\t\t_this.$actions.remove();\n\t\t\t}\n\t\t});\n\t};\n\n\tSapphireWidgets.SplitButton = {\n\t\tcreate: create,\n\t};\n})(jQuery, window, document, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/split-button/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/ssd-component-block/scripts.js":
/*!****************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/ssd-component-block/scripts.js ***!
  \****************************************************************************/
/***/ (function() {

eval("var milisecondpassed = 0;\nvar stoptimer = true;\nvar myTimout  = null;\n\nfunction onKeydownFunction() {\n    milisecondpassed = 0;\n  \n    stoptimer=true;\n    clearInterval(myTimout);\n    myTimout = null;\n  };\n  \n  function onKeyUpFunction(elementToClick) {\n  stoptimer = false;\n  \n  if(milisecondpassed == 0 && myTimout==null){\n      myTimout = setInterval(\n        function() {\n          milisecondpassed+=100;\n         \n          if (milisecondpassed >= 400 && stoptimer==false) {\n            milisecondpassed = 0;\n            stoptimer=true;\n            clearInterval(myTimout);\n            myTimout = null;\n            elementToClick.click();\n          \n          }\n          else{\n            if(stoptimer==true){\n            clearInterval(myTimout);\n            myTimout = null;\n            }\n          }\n        }, 100);\n        if(stoptimer==true){\n            clearInterval(myTimout);\n            myTimout = null;\n        }\n    }\n    else{\n        if(stoptimer==true){\n            clearInterval(myTimout);\n            myTimout = null;\n        }   \n    }\n};\n\nif(typeof(ssdComponent) === 'undefined') {\n\n    ssdComponent = {\n        length: 0,\n        numberOfActive: 0,\n        isRTL: false,\n        id: '',\n        toDestroy: false,\n        onBlurDestroy: function() {\n            if (ssdComponent.id != '') {\n                var _ssdComponent = $('#' + ssdComponent.id);\n                var _wrapper = $('[data-ssd-placeholder=' + ssdComponent.id + ']');\n                if (ssdComponent.toDestroy) {\n                    _wrapper.find('.SSDListRefreshHandler').find('a.to-destroy').click();\n                    _wrapper.remove();\n                }\n                else {\n                     var _wrapper = $('[data-ssd-placeholder=' + ssdComponent.id + ']');\n                    _wrapper.find('input').val('');\n                    ssdComponent.blur();\n                }\n            }\n        },\n        focus: function(ssdComponentWidget) {\n            var _ssdComponentWidget = $(ssdComponentWidget).children('div.SSD-Wrapper:not(.Selected)');\n            \n            if(!_ssdComponentWidget.length)\n                return; //If this SSD-Wrapper is already Selected, return.\n            \n            if(ssdComponent.numberOfActive)\n                ssdComponent.blur(); //Blurs the other focused SSD's.\n            \n            ssdComponent.numberOfActive++;\n            if(!_ssdComponentWidget.parent().hasClass('SSDPopup')){\n                _ssdComponentWidget.children('.SSD-Component')\n                .css({\n                    'width': function() {\n                        return $(this).outerWidth();\n                    },\n                    'top': function() {\n                        return this.getBoundingClientRect().top + $(document).scrollTop();\n                    },\n                    'left': function() {\n                        if(ssdComponent.isRTL)\n                            return 'auto';\n                        return this.getBoundingClientRect().left;\n                    },\n                    'right': function() {\n                        if(ssdComponent.isRTL)\n                            return $(window).width() - $(this).outerWidth() - this.getBoundingClientRect().left;\n                        return 'auto';\n                    }\n                })\n                .children('.SSD-Bar').css({\n                    'width': function() {\n                        return $(this).outerWidth();\n                    }\n                })\n                .siblings('.SSD-List').attr('current-focus', 0);\n            }\n            else{\n                _ssdComponentWidget.children('.SSD-Component')\n                .css({\n                    'width': function() {\n                        return $(this).outerWidth();\n                    }\n                })\n                .children('.SSD-Bar').css({\n                    'width': function() {\n                        return $(this).outerWidth();\n                    }\n                })\n                .siblings('.SSD-List').attr('current-focus', 0);\n            }\n            \n            if(!_ssdComponentWidget.parent().hasClass('SSDPopup')){\n                _ssdComponentWidget.closest('form').append(_ssdComponentWidget);\n            }\n            _ssdComponentWidget.addClass('Positioned');\n            \n            setTimeout(\n                function() {\n                    _ssdComponentWidget.addClass('Selected');\n                }\n                , 1\n            );\n            \n        },\n        \n        \n        \n        blur: function() {\n            if(!ssdComponent.numberOfActive)\n                return;\n            \n            var _wrapper = $('div.SSD-Wrapper.Positioned.Selected');\n            \n            _wrapper.each(function() {\n                var parent = $('#' + $(this).attr('data-ssd-placeholder'));\n                parent.append($(this));\n            });\n            \n            _wrapper.removeClass('Positioned')\n            .children('.SSD-Component')\n                .css({\n                    'width': '',\n                    'top': '',\n                    'left': '',\n                    'right': ''\n                })\n                .removeClass('Searching Fixed KeyboardNav')\n            .children('.SSD-Bar').css({\n                'width': ''\n            });\n                \n            setTimeout(\n                function() {\n                    _wrapper.removeClass('Selected')\n                    .find('.SSD-Bar').each(function() {\n                        ssdComponent.tabsClear(this);\n                    });\n                }\n                , 1\n            );\n                \n            ssdComponent.numberOfActive--;\n            $(\".SSD_ListRecords span, .SSD_ListLine.ShowMore, .SSD_DeleteOnBlur\").remove();\n        },\n        resize: function() {\n            if(!ssdComponent.numberOfActive)\n                return; //If there's no SSD active, there's no need to resize it.\n            \n            var _ssdWrapper = $('div.SSD-Wrapper.Selected').first();\n            var _ssdComponentWidget = $('#' + _ssdWrapper.attr('data-ssd-placeholder'))[0];\n            var _ssdComponent = _ssdWrapper.children('.SSD-Component');\n            \n            if (typeof _ssdComponentWidget.getBoundingClientRect !== \"undefined\") {\n                _ssdComponent.css({\n                    'width': function() {\n                        return $(_ssdComponentWidget).width();\n                    }/*,\n                    'top': function() {\n                        return _ssdComponentWidget.getBoundingClientRect().top + $(document).scrollTop();\n                    },\n                    'left': function() {\n                        if(ssdComponent.isRTL)\n                            return 'auto';\n                        return _ssdComponentWidget.getBoundingClientRect().left;\n                    },\n                    'right': function() {\n                        if(ssdComponent.isRTL)\n                            return $(window).width() - $(_ssdComponentWidget).outerWidth() - _ssdComponentWidget.getBoundingClientRect().left;\n                        return 'auto';\n                    }*/\n                }).children('.SSD-Bar').css({\n                    'width': function() {\n                        return $(this).closest('.SSD-Component').innerWidth();\n                    }\n                });\n            }\n        },\n        tabSelect: function(ssdComponentWidget, ssdBar, selectedTab, isInputEvent) {\n            var _selectedTab = $(selectedTab);\n\n            if(ssdComponent.numberOfActive == 0) {\n                ssdComponent.focus(ssdComponentWidget);\n            }\n            \n            if(!_selectedTab.is('.Selected')) {\n                ssdComponent.tabsClear(ssdBar);\n                _selectedTab.addClass('Selected');\n            }\n            \n            ssdComponent.focusSelectedTab(ssdBar,isInputEvent);\n        },\n        focusSelectedTab: function(ssdBar,isInputEvent) {\n            // Selected tab is the Search input?\n            if(ssdBar.children('.SearchInput-Container.Selected').length) {\n                var elementToClick = ssdBar.siblings('.SSDListRefreshHandler').find('a:not(.to-destroy)');\n                \n                if(isInputEvent){\n                    onKeyUpFunction(elementToClick);\n                }\n                else{\n                    elementToClick.click();\n                }\n                ssdBar.find('.InputPlaceholder input[type=\"text\"]:not(:focus)').first().select().focus();\n                return;\n            }\n            \n            // Selected tab is the Short list?\n            if(ssdBar.children('.ShortListSelector-Container.Selected').length) {\n                ssdBar.find('.ShortListSelector-Container > a').focus();\n                return;\n            }\n        },\n        /*\n         * Method being called by user action js_ssdComponent_focusCurrentRow\n         */\n        focusCurrentRow: function() {\n            var _ssdComponent = $('div.SSD-Wrapper.Selected .SSD-Component').first();\n            var _ssdList = _ssdComponent.find('.SSD-List');\n            var _currentFocus = _ssdList.attr('current-focus');\n\n            _ssdComponent.addClass('KeyboardNav');\n            _ssdList.find('span.SSD_ListRecords > span:nth-child(' + _currentFocus + ')').addClass('focus');\n        },\n        tabsClear: function(ssdBar) {\n            $(ssdBar).children().removeClass('Selected');\n        },\n        searchIcon: function(event) {\n            ssdComponent.tabSelect(event.data.ssdComponentWidget, event.data.ssdBar, $(event.data.ssdBar).children('.SearchInput-Container'),false);\n        },\n        /*\n         * @name inputEvent\n         * @description \n         */\n        inputEvent: function(event) {\n            var _inputContainer = $(event.data.input).closest('.SearchInput-Container');\n            \n            ssdComponent.tabSelect(event.data.ssdComponentWidget, event.data.ssdBar, _inputContainer,true);\n            \n            if($(event.data.input).val() == '') {\n                _inputContainer.closest('.SSD-Component').removeClass('Searching');\n            }\n            else {\n                _inputContainer.closest('.SSD-Component').addClass('Searching');\n            }\n        },\n        keydownEvent: function(event) {\n           onKeydownFunction();          \n          \n        },\n        keyboardHandler: function(event) {\n            if(event.key == \"Shift\" || event.key == \"Control\")\n                return;\n\n            var _ssdComponent = $('div.SSD-Wrapper.Selected .SSD-Component').first();\n            var _ssdList = _ssdComponent.find('.SSD-List');\n\n            if(event.key == \"Enter\" && _ssdList.find('.SSD_ListLine.ShowMore.focus').length)\n                return;\n\n            if(event.key == \"Tab\") {\n                _ssdComponent.addClass('KeyboardNav');\n                return;\n            }\n            \n            if(event.key == \"ArrowUp\" || event.key == \"ArrowDown\") {\n                var _currentFocus = _ssdList.attr('current-focus');\n                var _selectedElement = $(null);\n                \n                if(_ssdList.find('.SSD_ListLine.ShowMore.focus').length) {\n                    _selectedElement = _ssdList.find('.SSD_ListLine.ShowMore.focus');\n                }\n                else if(_currentFocus > 0) {\n                    _selectedElement = _ssdList.find('span.SSD_ListRecords > span:nth-child(' + _currentFocus + ')');\n                }\n                \n                _ssdComponent.addClass('KeyboardNav')\n                \n                if(event.key == \"ArrowUp\") {\n                    if(_selectedElement.length) {\n                        \n                        if(_selectedElement.is('.SSD_ListLine.ShowMore.focus')) {\n                            _selectedElement.removeClass('focus');\n                            _selectedElement = _ssdList.find('span.SSD_ListRecords > span:last-child');\n                        }\n                        else {\n                            _selectedElement = _selectedElement.removeClass('focus').prev();\n                        }\n\n                        _currentFocus--;\n                    }\n                    else {\n                        _currentFocus = _ssdList.find('span.SSD_ListRecords > span').length;\n\n                        if(_ssdList.find('.SSD_ListLine.ShowMore').length) {\n                            _selectedElement = _ssdList.find('.SSD_ListLine.ShowMore');\n                            _currentFocus++;\n                        }\n                        else {\n                            _selectedElement = _ssdList.find('span.SSD_ListRecords > span:last-child');\n                        }\n                    }\n                }\n                \n                if(event.key == \"ArrowDown\") {\n                    if(_selectedElement.length) {\n                        \n                        if(_selectedElement.is('.SSD_ListLine.ShowMore.focus')) {\n                            _selectedElement.removeClass('focus');\n                            _selectedElement = $(null);\n                        }\n                        else {\n                            _selectedElement = _selectedElement.removeClass('focus').next();\n                            \n                            if(!_selectedElement.length && _ssdList.find('.SSD_ListLine.ShowMore').length) {\n                                _selectedElement = _ssdList.find('.SSD_ListLine.ShowMore');\n                            }\n                        }\n                        \n                        _currentFocus++;\n                    }\n                    else {\n                        _selectedElement = _ssdList.find('span.SSD_ListRecords > span:first-child');\n                        _currentFocus = 1;\n                    }\n                }\n                \n                _selectedElement.addClass('focus');\n                \n                if(!_selectedElement.length) {\n                    ssdComponent.focusSelectedTab(_ssdComponent.find('.SSD-Bar'),false);\n                    _currentFocus = 0;\n                }\n                else if (!_selectedElement.find('.SSD_ListLine.Disabled').length){\n                    _selectedElement.find('.ExpandControl > a').focus();\n                }\n                else {\n                    _ssdList.find('a.OtherControlLink').focus();\n                }\n                \n                _ssdList.attr('current-focus', _currentFocus);\n\n                return;\n            }\n            \n            ssdComponent.clearKeyboardNavStatus(_ssdComponent);\n        },\n        clearKeyboardNavStatus: function(ssdComponent) {\n            var _ssdComponent = $(ssdComponent);\n            var _ssdList = _ssdComponent.find('.SSD-List');\n\n            if(_ssdList.find('.SSD_ListLine.ShowMore.focus').length)\n                return;\n\n            _ssdComponent.removeClass('KeyboardNav');\n            _ssdList.attr('current-focus', 0)\n                .find('span.SSD_ListRecords > span.focus').removeClass('focus')\n                .find('.ExpandControl > a').blur();\n        },\n        scrollHandler: function() {\n            var _ssdComponent = $('div.SSD-Wrapper.Selected .SSD-Component').first();\n            if(Math.max(document.documentElement.clientWidth, window.innerWidth || 0) <= 1024){\n                if(_ssdComponent[0].getBoundingClientRect().top > $(\".toolbar-wrapper.Fixed\").outerHeight()) {\n                    _ssdComponent.removeClass('Fixed');\n                    return;\n                }else{\n                    $('.SSD-Wrapper.Selected > .SSD-Component.Fixed > .SSD-Bar').css('top', $(\".toolbar-wrapper.Fixed\").outerHeight() + 'px'); \n                    \n                    \n                }\n            }else{\n                /*Not Mobile apply fixed behaviour*/\n                if(_ssdComponent[0].getBoundingClientRect().top > ($('.TopPatientHeader').outerHeight(true) + $('.Header').outerHeight(true) + $(\".toolbar-wrapper\").outerHeight()+ $('.CTTASLevelAssessmentMainContainer').outerHeight(true) )) {\n                    _ssdComponent.removeClass('Fixed');\n                    return;\n                }else{\n                    $('.SSD-Wrapper.Selected > .SSD-Component.Fixed > .SSD-Bar').css('top',($('.TopPatientHeader').outerHeight(true) + $('.Header').outerHeight(true) + $(\".toolbar-wrapper\").outerHeight() + $('.CTTASLevelAssessmentMainContainer').outerHeight(true)) + 'px'); \n                }\n            }\n\n\n            _ssdComponent.addClass('Fixed');\n        },\n        destroy: function(_inputId) { /* Used to destroy a specific ssd component by receive the input identifier as parameter and determine the wrapper to remove. */\n            $('[data-ssd-placeholder=' + ssdComponent.id + ']').remove();\n        },\n        init: function(ssdComponentWidget,_toDestroy) {\n            ssdComponent.length++;\n            ssdComponent.numberOfActive = 0;\n            ssdComponent.isRTL = $('html').is('.rtl');\n            ssdComponent.toDestroy = _toDestroy;\n            if (typeof ssdComponentWidget != 'undefined') {\n                ssdComponent.id = $(ssdComponentWidget).attr('id');\n            }\n            var _ssdComponentWidget = $(ssdComponentWidget);\n            var _ssdComponent = _ssdComponentWidget.find('.SSD-Component');\n            var _ssdBar = _ssdComponent.children('.SSD-Bar').first();\n            var _searchIcon = _ssdBar.find('.SearchIcon').first();\n            var _input = _ssdBar.find('input[type=\"text\"]').first();\n            var _clearControl = _ssdBar.find('.ClearControl').first();\n            \n            _searchIcon.off('click').on('click', {\n                ssdComponentWidget: _ssdComponentWidget,\n                ssdBar: _ssdBar\n            }, ssdComponent.searchIcon);\n            \n            _ssdBar.children('div').off('click').on('click', {\n                ssdComponentWidget: _ssdComponentWidget,\n                ssdBar: _ssdBar\n            }, function(event) {\n                ssdComponent.tabSelect(event.data.ssdComponentWidget, event.data.ssdBar, this,false);\n            });\n            \n            _clearControl.off('click').on('click', ssdComponent.onBlurDestroy);\n            \n            _input.off('keyup').on('keyup', {\n                ssdComponentWidget: _ssdComponentWidget,\n                ssdBar: _ssdBar,\n                input: _input\n            }, ssdComponent.inputEvent);\n            \n            _input.off('keydown').on('keydown', {\n                ssdComponentWidget: _ssdComponentWidget,\n                ssdBar: _ssdBar,\n                input: _input\n            }, ssdComponent.keydownEvent);\n            \n            $(_ssdComponent).off('click').on('click', {\n                ssdComponent: _ssdComponent\n            }, function(event) {\n                ssdComponent.clearKeyboardNavStatus(event.data.ssdComponent);\n            });\n        }\n    }\n}\n\n$(document).ready(function() {\n    $(window).on('resize', function(event) {\n        ssdComponent.resize();\n    });\n    \n    $(document).on('click', function(event) {\n        if(!$(event.target).is(':visible')) { /* Clicks on hidden elements are dismissed. */\n            return;\n        }\n        \n        var e = $(event.target).closest('.SSD-Component');\n        \n        if(!e.length) { // User clicked outside the SSD-Component?\n            ssdComponent.onBlurDestroy();\n        }\n    });\n    \n    $(document).on('keydown', function(event) {\n        if(ssdComponent.numberOfActive > 0) {\n            if(event.keyCode == \"27\") { // User hit Escape\n                ssdComponent.onBlurDestroy();\n            }\n            if(event.key == \"ArrowUp\" || event.key == \"ArrowDown\") {\n                event.preventDefault();\n            }\n        }\n    });\n    \n    $(document).on('keyup', function(event) {\n        if(ssdComponent.numberOfActive > 0) { // If there's an SSD component active, go for Keyboard handler\n            ssdComponent.keyboardHandler(event);\n        }\n    });\n    \n    $(document).on('scroll', function() {\n        if(ssdComponent.numberOfActive > 0) { // If there's an SSD component active, go for scroll handler\n            ssdComponent.scrollHandler();\n        }\n    });\n});\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/ssd-component-block/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/ssd-list-line/scripts.js":
/*!**********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/ssd-list-line/scripts.js ***!
  \**********************************************************************/
/***/ (function() {

eval("/* Component SSDListLine */\nSapphireWidgets.SSDListLine = {\n\ttoggle: (lineId, lineHandler = '') => {\n\t\tvar _line = $(lineId).is('.SSD_ListLine')\n\t\t\t? $(lineId)\n\t\t\t: $(lineId)\n\t\t\t\t\t.children('.SSD_ListLine')\n\t\t\t\t\t.first();\n\n\t\tif (!_line.length) return;\n\n\t\tvar _expandControl = $('.expand-control-custom-width');\n\n\t\tif (_expandControl.length != 0) {\n\t\t\t_expandControl.removeClass('expand-control-custom-width');\n\t\t\t_expandControl.css('width', '');\n\t\t}\n\n\t\tif (!_line.is('.Active')) {\n\t\t\tvar _lineHeader = _line\n\t\t\t\t.closest('div.SelectableList, .SelectableList-ListRecords')\n\t\t\t\t.find('div.SelectableList-Line.Active')\n\t\t\t\t.not(_line);\n\n\t\t\t_lineHeader.find('a[hide-action]').click();\n\t\t\t_lineHeader\n\t\t\t\t.removeClass('Active')\n\t\t\t\t.children('span')\n\t\t\t\t.hide(200);\n\t\t\t_line.addClass('Active');\n\n\t\t\tif ($(lineHandler).length) {\n\t\t\t\t$(lineHandler).click();\n\t\t\t}\n\t\t} else {\n\t\t\t_line.removeClass('Active');\n\t\t}\n\t},\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/ssd-list-line/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/table-form/scripts.js":
/*!*******************************************************************!*\
  !*** ./src/components/05-components/v3-pat/table-form/scripts.js ***!
  \*******************************************************************/
/***/ (function() {

eval("/* Component TableForm */\n(function($, window, SapphireWidgets) {\n\tconst addEmptyLine = config => {\n\t\tconst $list = $('.TableFormColumn:not(.TableFormColumn--editMode) .TableFormColumn__Fields > .ListRecords');\n\n\t\t$list.append('<div class=\"TableFormColumn__EmptyItem\"></div>');\n\t};\n\n\tconst removeEmptyLine = config => {\n\t\tconst $list = $('.TableFormColumn:not(.TableFormColumn--editMode) .TableFormColumn__Fields > .ListRecords');\n\n\t\t$list.each(function(index) {\n\t\t\t$(this)\n\t\t\t\t.find('> .TableFormColumn__EmptyItem:first')\n\t\t\t\t.remove();\n\t\t});\n\t};\n\n\tconst onComponentReload = widgetId => {\n\t\tconst $table = $(`#${widgetId}`);\n\t\tconst $editing = $table.find('.TableFormColumn--editMode');\n\n\t\tif ($editing.length) {\n\t\t\t$table.addClass('TableForm--scrollDisabled');\n\t\t} else {\n\t\t\t$table.removeClass('TableForm--scrollDisabled');\n\t\t}\n\t};\n\n\tSapphireWidgets.TableForm = { addEmptyLine, onComponentReload, removeEmptyLine };\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/table-form/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/tabs-extended/scripts.js":
/*!**********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/tabs-extended/scripts.js ***!
  \**********************************************************************/
/***/ (function() {

eval("/* Component TabsExtended */\r\nSapphireWidgets.TabsExtended = function(config) {\r\n\t$(document).ready(function() {\r\n\t\tconst $component = $(`#${config.widgetId} .Tabs_Extended`);\r\n\t\tconst $tabHeader = $component.find('.Tabs_header');\r\n\t\tconst $tabContainer = $component.find('.TabsContainer');\r\n\t\tconst $tabs = $tabHeader.find('> .Tabs__tab');\r\n\t\tconst $tabsEnabled = $tabHeader.find('> .Tabs__tab:not(.disabled)');\r\n\t\tconst $tabsInput = $component.find('.Tabs_Input input');\r\n\t\tvar $calculatedTabs;\r\n\r\n\t\tif(config.useLastTabAsActions) {\r\n\t\t\t$calculatedTabs = $tabs.slice(0,-1);\r\n\t\t} else {\r\n\t\t\t$calculatedTabs = $tabs;\r\n\t\t}\r\n\t\t$calculatedTabs.each(function() {\r\n\t\t\tif ($(this).text() === '') {\r\n\t\t\t\t$(this).remove();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$tabsEnabled.on('click', function() {\r\n\t\t\t$tabContainer.attr('activetab', $(this).attr('value'));\r\n\r\n\t\t\t$tabsInput.val($(this).attr('value'));\r\n\t\t\t$tabsInput.change();\r\n\t\t});\r\n\r\n\t\t$tabsEnabled.off('mousedown').on('mousedown', function(evt) {\r\n\t\t\tvar $tabsExtended = $(evt.target).closest('.Tabs_Extended');\r\n\t\t\t$tabsExtended.removeClass('isClosed');\r\n\t\t});\r\n\r\n\t\t$('.Tabs_Extended.HideActiveOnClick .Tabs_header')\r\n\t\t\t.off('mousedown')\r\n\t\t\t.on('mousedown', '.Tabs__tab.active', function(evt) {\r\n\t\t\t\tvar $tabsExtended = $(evt.target).closest('.Tabs_Extended');\r\n\t\t\t\tvar $tabsBody = $tabsExtended.find('.Tabs_body');\r\n\r\n\t\t\t\tif ($tabsBody.hasClass('Tabs_body--closed')) {\r\n\t\t\t\t\t$tabsBody.removeClass('Tabs_body--closed');\r\n\t\t\t\t\t$tabsExtended.removeClass('isClosed');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$tabsBody.addClass('Tabs_body--closed');\r\n\t\t\t\t\t$tabsExtended.addClass('isClosed');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t$tabHeader.find('.Tabs_Extended--disabled').each(function(index, el) {\r\n\t\t\t$(el)\r\n\t\t\t\t.parent()\r\n\t\t\t\t.css('cursor', 'default')\r\n\t\t\t\t.off('click');\r\n\t\t});\r\n\r\n\t\t$component.each(function(index, el) {\r\n\t\t\tif ($(el).hasClass('Tabs_Extended--closedonstart')) {\r\n\t\t\t\t$(el)\r\n\t\t\t\t\t.find('.Tabs_body')\r\n\t\t\t\t\t.addClass('Tabs_body--closed');\r\n\t\t\t\t$(el).addClass('isClosed');\r\n\t\t\t\t$(el).removeClass('Tabs_Extended--closedonstart');\r\n\t\t\t}\r\n\r\n\t\t\t$(el)\r\n\t\t\t\t.off('click')\r\n\t\t\t\t.on('click', '.Tabs_Extended--close', function(evt) {\r\n\t\t\t\t\t$(evt.target)\r\n\t\t\t\t\t\t.closest('.Tabs_body')\r\n\t\t\t\t\t\t.addClass('Tabs_body--closed');\r\n\t\t\t\t});\r\n\t\t});\r\n\r\n\t\tif (!config.tab1Enabled) $tabHeader.find('> .Tabs__tab[value=1]').addClass('disabled');\r\n\t\tif (!config.tab2Enabled) $tabHeader.find('> .Tabs__tab[value=2]').addClass('disabled');\r\n\t\tif (!config.tab3Enabled) $tabHeader.find('> .Tabs__tab[value=3]').addClass('disabled');\r\n\t\tif (!config.tab4Enabled) $tabHeader.find('> .Tabs__tab[value=4]').addClass('disabled');\r\n\t\tif (!config.tab5Enabled) $tabHeader.find('> .Tabs__tab[value=5]').addClass('disabled');\r\n\t});\r\n};\r\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/tabs-extended/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/tabular-list/scripts.js":
/*!*********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/tabular-list/scripts.js ***!
  \*********************************************************************/
/***/ (function() {

eval("/* Component TabularList */\n(function($, window, document, SapphireWidgets) {\n\tvar allTabularLists = [];\n\n\tvar create = function(config) {\n\t\twindow[config.tabularListId] = new TabularList(config);\n\t\tallTabularLists.push(window[config.tabularListId]);\n\n\t\t$(window).load(function() {\n\t\t\tvar allTabularLists = SapphireWidgets.TabularList.all();\n\t\t\tallTabularLists.forEach(function(element, i) {\n\t\t\t\telement.handleTabularListColumns();\n\t\t\t\telement.handleResponsiveClasses(200);\n\t\t\t});\n\t\t});\n\n\t\t$(window).on('resize.tabularlist', function() {\n\t\t\tvar allTabularLists = SapphireWidgets.TabularList.all();\n\t\t\tallTabularLists.forEach(function(element, i) {\n\t\t\t\telement.handleResponsiveClasses(200);\n\t\t\t});\n\t\t});\n\t};\n\n\tvar TabularList = function(config) {\n\t\tvar _this = this;\n\t\tthis.config = config;\n\t\tthis.tabularListResizeTimer = 0;\n\t\tthis.$widget = $('#' + config.tabularListId);\n\t\tthis.$widgetList = this.$widget.find('> .TabularList');\n\t\tthis.$widget.find('.TabularListRow').each(function(i, row) {\n\t\t\t_this.columnsCount = 0;\n\t\t\t$(row)\n\t\t\t\t.find('.TabularListRow-values .TabularListRow-item')\n\t\t\t\t.each(function(i, el) {\n\t\t\t\t\t$(el).addClass('TabularListColumn' + (i + 1));\n\t\t\t\t\t_this.columnsCount++;\n\t\t\t\t});\n\t\t});\n\t\tif (!!config.breakOn) {\n\t\t\tthis.breakOnOrder = parseInt(config.breakOn);\n\t\t} else {\n\t\t\tthis.breakOnOrder = 0;\n\t\t}\n\t\tthis.handleTabularListColumns();\n\t};\n\n\tTabularList.prototype.handleTabularListColumns = function() {\n\t\tif (this.config.columnsWidth === 'Auto') {\n\t\t\tif (this.$widgetList.width() > 1) {\n\t\t\t\tfor (i = 1; i <= this.columnsCount; i++) {\n\t\t\t\t\tvar maxWidthContent = Math.max.apply(\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tthis.$widget\n\t\t\t\t\t\t\t.find('.TabularListColumn' + i)\n\t\t\t\t\t\t\t.map(function() {\n\t\t\t\t\t\t\t\treturn $(this).outerWidth(true);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.get()\n\t\t\t\t\t);\n\t\t\t\t\tthis.$widget.find('.TabularListColumn' + i).width(maxWidthContent);\n\t\t\t\t\tthis.$widget.find('.TabularListColumn' + i).css('opacity', 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!!this.config.propertyMinWidth) {\n\t\t\tthis.$widget.find('.TabularListRow-property').css('min-width', convertInCSSValue(this.config.propertyMinWidth));\n\t\t}\n\t\tif (!!this.config.propertyMaxWidth) {\n\t\t\tthis.$widget.find('.TabularListRow-property').css('max-width', convertInCSSValue(this.config.propertyMaxWidth));\n\t\t}\n\t\tif (!!this.config.actionsMinWidth) {\n\t\t\tthis.$widget.find('.TabularListRow-actions').css('min-width', convertInCSSValue(this.config.actionsMinWidth));\n\t\t}\n\t\tif (!!this.config.actionsMaxWidth) {\n\t\t\tthis.$widget.find('.TabularListRow-actions').css('max-width', convertInCSSValue(this.config.actionsMaxWidth));\n\t\t}\n\t};\n\n\tTabularList.prototype.handleResponsiveClasses = function(timeout) {\n\t\tvar _this = this;\n\t\twindow.clearTimeout(this.tabularListResizeTimer);\n\t\tthis.tabularListResizeTimer = window.setTimeout(function() {\n\t\t\t_this.$widgetList.removeClass(function(index, className) {\n\t\t\t\treturn (className.match(/(^|\\s)screen-\\S+/g) || []).join(' ');\n\t\t\t});\n\n\t\t\t_this.$widgetList.removeClass('isBreaking');\n\n\t\t\tvar widgetWidth = _this.$widgetList.outerWidth(true);\n\t\t\tif (widgetWidth === 0) {\n\t\t\t\twidgetWidth = _this.$widgetList\n\t\t\t\t\t.parents(':visible')\n\t\t\t\t\t.eq(0)\n\t\t\t\t\t.outerWidth(true);\n\t\t\t}\n\n\t\t\tif (widgetWidth >= 1900) {\n\t\t\t\t_this.$widgetList.addClass('screen-DesktopHD');\n\t\t\t\tif (_this.breakOnOrder >= 6) {\n\t\t\t\t\t_this.$widgetList.addClass('isBreaking');\n\t\t\t\t}\n\t\t\t} else if (widgetWidth >= 1600) {\n\t\t\t\t_this.$widgetList.addClass('screen-DesktopBig');\n\t\t\t\tif (_this.breakOnOrder >= 5) {\n\t\t\t\t\t_this.$widgetList.addClass('isBreaking');\n\t\t\t\t}\n\t\t\t} else if (widgetWidth >= 1366) {\n\t\t\t\t_this.$widgetList.addClass('screen-Desktop');\n\t\t\t\tif (_this.breakOnOrder >= 4) {\n\t\t\t\t\t_this.$widgetList.addClass('isBreaking');\n\t\t\t\t}\n\t\t\t} else if (widgetWidth >= 1024) {\n\t\t\t\t_this.$widgetList.addClass('screen-DesktopSmall');\n\t\t\t\tif (_this.breakOnOrder >= 3) {\n\t\t\t\t\t_this.$widgetList.addClass('isBreaking');\n\t\t\t\t}\n\t\t\t} else if (widgetWidth >= 420) {\n\t\t\t\t_this.$widgetList.addClass('screen-Tablet');\n\t\t\t\tif (_this.breakOnOrder >= 2) {\n\t\t\t\t\t_this.$widgetList.addClass('isBreaking');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_this.$widgetList.addClass('screen-Phone');\n\t\t\t\tif (_this.breakOnOrder >= 1) {\n\t\t\t\t\t_this.$widgetList.addClass('isBreaking');\n\t\t\t\t}\n\t\t\t}\n\t\t}, timeout);\n\t};\n\n\tSapphireWidgets.TabularList = {\n\t\tcreate: create,\n\t\tall: function() {\n\t\t\treturn allTabularLists;\n\t\t},\n\t};\n})(jQuery, window, document, SapphireWidgets);\n\nfunction convertInCSSValue(value_in) {\n\tvar returned;\n\tif (value_in.includes('px') || value_in.includes('%')) {\n\t\treturned = value_in;\n\t} else {\n\t\treturned = value_in + 'px';\n\t}\n\treturn returned;\n}\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/tabular-list/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/tabular-scroll/scripts.js":
/*!***********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/tabular-scroll/scripts.js ***!
  \***********************************************************************/
/***/ (function() {

eval("/* Component TabularScroll */\n(function($, window, document, SapphireWidgets) {\n\tconst create = function(config) {\n\t\t$(document).ready(function() {\n\t\t\t$('.TabularScroll').each(function(i, el) {\n\t\t\t\tsetupTabularScroll($(el));\n\t\t\t});\n\t\t});\n\n\t\t$(window).load(function() {\n\t\t\tosAjaxBackend &&\n\t\t\t\tosAjaxBackend.BindAfterAjaxRequest(function() {\n\t\t\t\t\t$('.TabularScroll').each(function(i, el) {\n\t\t\t\t\t\tsetupTabularScroll($(el));\n\t\t\t\t\t\tresizeRows($(el));\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t});\n\n\t\t$(window).on('resize.tabularscroll', function() {\n\t\t\t$('.TabularScroll').each(function(i, el) {\n\t\t\t\tvar $centerTable = $(el).find('.TabularScroll-center-table');\n\t\t\t\tvar tableWidth = $centerTable.find('table').width();\n\t\t\t\t$(el)\n\t\t\t\t\t.find('.TabularScroll-center .TopScrollDragger')\n\t\t\t\t\t.width(tableWidth);\n\t\t\t\tif ($centerTable[0].scrollWidth > $centerTable.width()) {\n\t\t\t\t\t$(el)\n\t\t\t\t\t\t.find('.TopScrollWrapper')\n\t\t\t\t\t\t.css('visibility', 'visible');\n\t\t\t\t} else {\n\t\t\t\t\t$(el)\n\t\t\t\t\t\t.find('.TopScrollWrapper')\n\t\t\t\t\t\t.css('visibility', 'hidden');\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\tconst setupTabularScroll = function($tabularScroll) {\n\t\tvar $topScrollWrapper = $tabularScroll.find('.TopScrollWrapper');\n\t\tvar $centerTable = $tabularScroll.find('.TabularScroll-center-table');\n\t\t$tabularScroll.find('.TopScrollWrapper').scroll(function() {\n\t\t\t$centerTable.scrollLeft($topScrollWrapper.scrollLeft());\n\t\t});\n\t\t$centerTable.scroll(function() {\n\t\t\t$topScrollWrapper.scrollLeft($centerTable.scrollLeft());\n\t\t});\n\t\t// similar to Resize\n\t\tvar tableWidth = $centerTable.find('table').width();\n\t\t$tabularScroll.find('.TabularScroll-center .TopScrollDragger').width(tableWidth);\n\t\tif ($centerTable[0].scrollWidth > $centerTable.width()) {\n\t\t\t$tabularScroll.find('.TopScrollWrapper').css('visibility', 'visible');\n\t\t} else {\n\t\t\t$tabularScroll.find('.TopScrollWrapper').css('visibility', 'hidden');\n\t\t}\n\t};\n\n\tconst resizeRows = function($tabularScroll) {\n\t\tlet arrrayHeight = [];\n\t\tconst $tableCenter = $tabularScroll.find('.TabularScroll-center-table table tbody');\n\t\tconst $tableRight = $tabularScroll.find('.TabularScroll-right .ListRecords');\n\t\tconst $tableLeft = $tabularScroll.find('.TabularScroll-left .ListRecords');\n\n\t\tarrrayHeight = $tableCenter\n\t\t\t.children('tr')\n\t\t\t.map(function() {\n\t\t\t\treturn $(this).height();\n\t\t\t})\n\t\t\t.get();\n\n\t\t$tableRight.children().each(function(index) {\n\t\t\t$(this).css('height', arrrayHeight[index] + 'px');\n\t\t});\n\n\t\t$tableLeft.children().each(function(index) {\n\t\t\t$(this).css('height', arrrayHeight[index] + 'px');\n\t\t});\n\t};\n\n\tSapphireWidgets.TabularScroll = { create };\n})(jQuery, window, document, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/tabular-scroll/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/timeline/scripts.js":
/*!*****************************************************************!*\
  !*** ./src/components/05-components/v3-pat/timeline/scripts.js ***!
  \*****************************************************************/
/***/ (function() {

eval("/* Timeline Helpers */\nSapphireWidgets.TimelineCounterItems = function(titleItemID, label) {\n\t$(document).ready(function() {\n\t\tconst $section = $(`#${titleItemID}`).parents('.TimelineItemSection');\n\t\tconst $title = $section.find('.TimelineItemHeader a');\n\t\tconst $items = $section.find('.TimelineItem');\n\n\t\t$title.append($(`<div class='ColorGreyText TextLarge TextRegular'> (${$items.length})</div>`));\n\t});\n};\n\nSapphireWidgets.ScrollToEvent = function(elementId) {\n\tSapphireWidgets.LayoutBase.scrollToElement($(`#${elementId}:first`, window.top.document), 52);\n};\n\nSapphireWidgets.LineTimelineComponent = function(widgetId, hasContent, isExpandable) {\n\t$(document).ready(function() {\n\t\tconst $component = $(`#${widgetId}`);\n\n\t\tif (hasContent && isExpandable) {\n\t\t\tconst $expandableLink = $component.find('.LineTimeLine__Header');\n\t\t\tconst $actions = $component.find('.LineTimeLine__Actions');\n\n\t\t\t$expandableLink.click(() => {\n\t\t\t\t$component.toggleClass('LineTimeLine--expanded');\n\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\t$actions.click(function(e) {\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\t\t}\n\t});\n};\n\nSapphireWidgets.TimelinePageEvents = function(showMoreTimelineLink) {\n\t$(document).ready(function() {\n\t\t$(window)\n\t\t\t.off('scroll.Timeline')\n\t\t\t.on('scroll.Timeline', function() {\n\t\t\t\tif (window.scrollY === 0) {\n\t\t\t\t\tconst $item = $('.TimelineAnchor').first();\n\t\t\t\t\tconst $list = $('.TimelinePage__Navigation .ListRecords');\n\n\t\t\t\t\tselectItem($item.attr('id'));\n\t\t\t\t\tclearTimeout(window.scrollFinished);\n\n\t\t\t\t\t$list.scrollTop(0);\n\t\t\t\t} else {\n\t\t\t\t\tclearTimeout(window.scrollFinished);\n\t\t\t\t\twindow.scrollFinished = setTimeout(function() {\n\t\t\t\t\t\tlet id = 0;\n\n\t\t\t\t\t\t$('.TimelineAnchor').each(function(index) {\n\t\t\t\t\t\t\tif ($(window).scrollTop() + 190 >= $(this).offset().top) {\n\t\t\t\t\t\t\t\tid = $(this).attr('id');\n\n\t\t\t\t\t\t\t\tif (index == $('.TimelineAnchor').length - 1) selectItem(id);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tselectItem(id, true);\n\n\t\t\t\t\t\t\t\twindow.lastItemID = id;\n\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif ($(document).height() - $(this).height() - 150 < $(this).scrollTop()) {\n\t\t\t\t\t\t\tconst $list = $('.TimelinePage__Navigation .ListRecords');\n\n\t\t\t\t\t\t\t$(`#${showMoreTimelineLink}`).click();\n\t\t\t\t\t\t\t$('.TimelinePage__Right .TimelinePage__LoadingMore').css('display', 'flex');\n\n\t\t\t\t\t\t\twindow.scrollListPosition = $list.scrollTop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 100);\n\t\t\t\t}\n\n\t\t\t\tcheckEndOfPage();\n\t\t\t});\n\n\t\tinfiniteScrollList(showMoreTimelineLink);\n\t});\n};\n\nSapphireWidgets.TimelineRestoreEvents = function(showMoreTimelineLink) {\n\t$('.TimelinePage__Navigation .ListRecords').scrollTop(window.scrollListPosition);\n\t$('.TimelinePage__LoadingMore').css('display', 'none');\n\n\twindow.alreadyClicked = false;\n\n\tinfiniteScrollList(showMoreTimelineLink);\n\n\tif (window.lastItemID) selectItem(window.lastItemID);\n};\n\nfunction selectItem(id, scrollTo) {\n\tconst $navItem = $(`[data-item=event-${id}] .TimelineItem`);\n\n\t$('.TimelineItem.TimelineItem--active').removeClass('TimelineItem--active');\n\t$navItem.addClass('TimelineItem--active');\n\n\tif (scrollTo && $navItem.length) scrollToView($navItem);\n}\n\nfunction scrollToView(element) {\n\tconst $parentDiv = $('.TimelinePage__Navigation .ListRecords');\n\n\t$parentDiv.scrollTop(\n\t\t$parentDiv.scrollTop() + element.position().top - $parentDiv.height() / 2 + element.height() / 2\n\t);\n\n\treturn true;\n}\n\nfunction infiniteScrollList(showMoreNavLink, name) {\n\tconst $list = $('.TimelinePage__Navigation .ListRecords');\n\n\t$list.off('mousewheel.TimelineNav').on('mousewheel.TimelineNav', function() {\n\t\tconst listHeight = $list.height();\n\t\tconst scrollTop = $list.scrollTop();\n\t\tconst scrollHeight = $list.prop('scrollHeight');\n\n\t\tif (listHeight + scrollTop + 100 > scrollHeight && scrollTop > 0 && !window.alreadyClicked) {\n\t\t\tclearTimeout(window.scrollListFinished);\n\t\t\twindow.scrollListFinished = setTimeout(function() {\n\t\t\t\t$(`#${showMoreNavLink}`).click();\n\n\t\t\t\t$('.TimelinePage__LoadingMore').css('display', 'flex');\n\n\t\t\t\twindow.scrollListPosition = $list.scrollTop();\n\t\t\t\twindow.alreadyClicked = true;\n\t\t\t}, 100);\n\t\t}\n\t});\n}\n\nfunction checkEndOfPage() {\n\tif (window.innerHeight + window.pageYOffset >= document.body.offsetHeight) {\n\t\tconst $item = $('.TimelineAnchor').last();\n\t\twindow.lastItemID = $item.attr('id');\n\t}\n}\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/timeline/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/trigger-iframe-tooltip/trigger-iframe-tooltip.js":
/*!**********************************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/trigger-iframe-tooltip/trigger-iframe-tooltip.js ***!
  \**********************************************************************************************/
/***/ (function() {

eval("/* Component TriggerIframeTooltip */\n(function ($, window, document, SapphireWidgets) {\n\tvar create = function (config) {\n\t\tvar $elementId = $('#' + config.elementId);\n\n\t\t$elementId.addClass('tooltip');\n\n\t\tif (config.triggerId === 'click') $elementId.addClass('tooltipstered--pointer');\n\n\t\tconst widgetNotifyDiv = $.find('[data-iframetooltiptriggerid=\"' + config.elementId + '\"]');\n\t\tlet widgetNotifyId = '';\n\n\t\tif (widgetNotifyDiv.length === 1) {\n\t\t\twidgetNotifyId = $(widgetNotifyDiv).data('iframetooltipnotifyid');\n\t\t}\n\n\t\t$elementId.tooltipster({\n\t\t\tcontentAsHTML: true,\n\t\t\ttheme: config.theme,\n\t\t\tinteractive: true,\n\t\t\tposition: config.positionId,\n\t\t\ttrigger: config.triggerId,\n\t\t\tminWidth: config.minWidth,\n\t\t\tmaxWidth: config.maxWidth,\n\t\t\tzindex: config.zindex,\n\t\t\tonlyOne: true,\n\t\t\tcontent: `<iframe id=\"tooltipster-frame\" data-ui=\"iframe-tooltip\" src=\"${config.URL}\" style=\"border:none;\" data-iframetooltiptriggerid=\"${config.elementId}\" iframetooltipnotifyid=\"${widgetNotifyId}\"></iframe>`,\n\t\t\tfunctionReady: function (instance, helper) {\n\t\t\t\t$(helper).css({ visibility: 'hidden' });\n\n\t\t\t\tif (config.noPadding) $('.tooltipster-base').addClass('tooltipster-base--no-padding');\n\t\t\t\tif (config.customClass) $('.tooltipster-base').addClass(config.customClass);\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t$('.tooltipster-base').css({\n\t\t\t\t\t\tvisibility: 'visible',\n\t\t\t\t\t\tminHeight: config.minHeight > 0 ? config.minHeight : 'auto',\n\t\t\t\t\t});\n\t\t\t\t}, 500);\n\n\t\t\t\t$('.tooltipster-content').prepend('<div class=\"TooltipsterLoading\"><div class=\"lds-ring\"><div></div></div>');\n\n\t\t\t\tlet _tooltipIframe = helper[0].querySelector('iframe');\n\t\t\t\tif (!!_tooltipIframe) {\n\t\t\t\t\t_tooltipIframe.addEventListener('load', function () {\n\t\t\t\t\t\t// Check if iframe is loaded\n\t\t\t\t\t\tif (_tooltipIframe.contentWindow.document.readyState === 'complete') {\n\t\t\t\t\t\t\t_tooltipIframe.contentWindow.document.body.classList.add('tooltipster-iframe-content');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$('.TooltipsterLoading').fadeOut(300, function () {\n\t\t\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconsole.log('Tooltip iframe is still loading...');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst isLeftOrRight = config.positionId === 'left' || config.positionId === 'right';\n\n\t\t\t\t// Set a fixed height in order to keep the arrow in the same position\n\t\t\t\tif (isLeftOrRight) {\n\t\t\t\t\tsetFixHeight();\n\n\t\t\t\t\t$(window)\n\t\t\t\t\t\t.off('scroll.Tooltip')\n\t\t\t\t\t\t.on('scroll.Tooltip', function () {\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tsetFixHeight();\n\t\t\t\t\t\t\t}, 500);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunctionAfter: function () {\n\t\t\t\t$(window).off('scroll.Tooltip');\n\t\t\t},\n\t\t});\n\t};\n\n\tconst setFixHeight = () => {\n\t\tconst $arrow = $('.tooltipster-arrow');\n\n\t\t$arrow.height($arrow.height());\n\t};\n\n\tSapphireWidgets.TriggerIframeTooltip = { create };\n})(jQuery, window, document, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/trigger-iframe-tooltip/trigger-iframe-tooltip.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/truncated-content/scripts.js":
/*!**************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/truncated-content/scripts.js ***!
  \**************************************************************************/
/***/ (function() {

eval("/* Component TruncatedContent */\n(function($, window, document, SapphireWidgets) {\n\tconst create = function(config = {}) {\n\t\t$(document).ready(function() {\n\t\t\tvar $allTruncated = $([]);\n\t\t\tvar rootSelector = `#${config.widgetId}`;\n\t\t\tvar openerSelector = '.TruncatedContent--all';\n\t\t\tvar bodySelector = '.TruncatedContent--body';\n\n\t\t\t$(rootSelector).each(function() {\n\t\t\t\tvar $el = $(this);\n\t\t\t\t$allTruncated = $allTruncated.add($el);\n\t\t\t\tvar $elBody = $el.find(bodySelector);\n\t\t\t\tvar maxLines = $el.data('maxlines');\n\t\t\t\tvar lineHeight = window\n\t\t\t\t\t.getComputedStyle($el.find('> div')[0])\n\t\t\t\t\t.getPropertyValue('line-height')\n\t\t\t\t\t.replace('px', '');\n\t\t\t\tvar lineCount = Math.ceil($el.height() / lineHeight);\n\t\t\t\tif (lineCount > maxLines) {\n\t\t\t\t\t$elBody.css({\n\t\t\t\t\t\tmaxHeight: lineHeight * maxLines + 'px',\n\t\t\t\t\t});\n\t\t\t\t\tvar sentence = $el.data('additional').replace('{n}', lineCount - maxLines);\n\t\t\t\t\t$el.append('<p class=\"' + openerSelector.replace('.', '') + '\">' + sentence + '</p>');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(rootSelector).on('click', openerSelector, function() {\n\t\t\t\tvar el = $(this).closest(rootSelector);\n\t\t\t\topenTruncatedContent(el);\n\t\t\t});\n\n\t\t\topenTruncatedContent = function(el) {\n\t\t\t\t$(el)\n\t\t\t\t\t.find(bodySelector)\n\t\t\t\t\t.css('max-height', 'none');\n\t\t\t\t$(el)\n\t\t\t\t\t.find(openerSelector)\n\t\t\t\t\t.css('display', 'none');\n\t\t\t};\n\n\t\t\tif (window.frameElement && window.frameElement.id === 'tooltipster-frame') {\n\t\t\t\t$(rootSelector).off('click', openerSelector);\n\t\t\t\t$(openerSelector).addClass('in-tooltip');\n\t\t\t}\n\t\t});\n\t};\n\n\tSapphireWidgets.TruncatedContent = {\n\t\tcreate,\n\t\topen: function(el) {\n\t\t\topenTruncatedContent(el);\n\t\t},\n\t\topenAll: function() {\n\t\t\t$allTruncated.each(function() {\n\t\t\t\topenTruncatedContent($(this));\n\t\t\t});\n\t\t},\n\t};\n})(jQuery, window, document, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/truncated-content/scripts.js?");

/***/ }),

/***/ "./src/components/08-pages/clinicianWorkArea.js":
/*!******************************************************!*\
  !*** ./src/components/08-pages/clinicianWorkArea.js ***!
  \******************************************************/
/***/ (function() {

eval("SapphireWidgets.ClinicianWorkArea = function(containerID) {\n\t$(document).ready(function() {\n\t\tconst $container = $(`#${containerID}`);\n\t\tconst $toggler = $container.find('.SectionExpandable-toggler');\n\n\t\tif ($toggler.length === 1) {\n\t\t\tlet $togglerState = false;\n\n\t\t\t$toggler.find('[data-labelvalue]').text($toggler.find('[data-labelshow]').data('labelshow'));\n\n\t\t\t$toggler.off('click').on('click', function(evt) {\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t\tbuttonClick();\n\t\t\t});\n\n\t\t\tconst buttonClick = function() {\n\t\t\t\t$togglerState = !$togglerState;\n\n\t\t\t\tif ($togglerState) {\n\t\t\t\t\t$container.find('.SectionExpandable-toggled').show();\n\t\t\t\t\t$toggler.find('[data-labelvalue]').text($toggler.find('[data-labelhide]').data('labelhide'));\n\n\t\t\t\t\t$toggler.hide();\n\n\t\t\t\t\tconst $cancelButton = $('.SectionExpandable-toggled .ButtonCancelSearch');\n\t\t\t\t\t$cancelButton.click(() => buttonClick());\n\t\t\t\t} else {\n\t\t\t\t\t$container.find('.SectionExpandable-toggled').hide();\n\t\t\t\t\t$toggler.find('[data-labelvalue]').text($toggler.find('[data-labelshow]').data('labelshow'));\n\n\t\t\t\t\t$toggler.show();\n\n\t\t\t\t\tconst $cancelButton = $('.SectionExpandable-toggled .ButtonCancelSearch');\n\t\t\t\t\t$cancelButton.off('click');\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/08-pages/clinicianWorkArea.js?");

/***/ }),

/***/ "./src/components/08-pages/eSignature.js":
/*!***********************************************!*\
  !*** ./src/components/08-pages/eSignature.js ***!
  \***********************************************/
/***/ (function() {

eval("SapphireWidgets.QRCodeScanner = function(options) {\n\tHtml5Qrcode.getCameras()\n\t\t.then(devices => {\n\t\t\tif (devices && devices.length) startCamera(devices[0].id);\n\t\t})\n\t\t.catch(err => {\n\t\t\t// App doesn't have access to the camera...\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst $checkbox = $('.AccessCodeOption');\n\n\t\t\t\t$checkbox.attr('checked', true).trigger('click');\n\t\t\t\t$('.LayoutScanCode').addClass('LayoutScanCode--modeOnlyCode');\n\n\t\t\t\t$('.LayoutScanCode__Splash').fadeOut(500);\n\t\t\t}, 500);\n\t\t});\n\n\tfunction startCamera(cameraID) {\n\t\tconst html5QrCode = new Html5Qrcode('qrreader');\n\t\tconst config = { fps: 5, qrbox: 250 };\n\n\t\tconst successCallback = response => {\n\t\t\tif ($('.ModeAccessCode').length) return;\n\n\t\t\t$('.ScanOverlay').addClass('ScanOverlay--correctCode');\n\n\t\t\tOsNotifyWidget(options.widgetFakeNotifyId, response);\n\n\t\t\t//setTimeout(() => html5QrCode.stop(), 1000);\n\t\t};\n\n\t\tconst errorCallback = response => {\n\t\t\t// console.error(response);\n\t\t};\n\n\t\thtml5QrCode\n\t\t\t.start({ facingMode: 'environment' }, config, successCallback, errorCallback)\n\t\t\t.then(() => {\n\t\t\t\tsetTimeout(() => $('.LayoutScanCode__Splash').fadeOut(500), 500);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t}\n\n\tlet isPortrait = window.matchMedia('(orientation: portrait)').matches;\n\tlet isOrientarionChanged = false;\n\n\t$(window).on('orientationchange', function(event) {\n\t\tif ($('.ModeAccessCode').length) {\n\t\t\tisOrientarionChanged = window.matchMedia('(orientation: portrait)').matches;\n\t\t\tSapphireWidgets.IsOrientarionChanged = !(isPortrait ^ isOrientarionChanged);\n\n\t\t\treturn;\n\t\t}\n\n\t\twindow.location.reload();\n\t});\n};\n\nSapphireWidgets.OnModeChange = function() {\n\t$('.ScanOverlay').removeClass('ScanOverlay--correctCode');\n\t$('.ScanOverlay').removeClass('ScanOverlay--incorrectCode');\n\n\tif (SapphireWidgets.IsOrientarionChanged && !$('.ModeAccessCode').length) {\n\t\twindow.location.reload();\n\t}\n};\n\nSapphireWidgets.GoNextInput = function(currentInput, nextInputClass) {\n\tconst key = event.keyCode || event.charCode;\n\tconst isNumber = !isNaN(event.key) && !isNaN(parseFloat(event.key));\n\n\tconst $curr = $(currentInput);\n\tconst $next = $(`.${nextInputClass}`);\n\tconst $prev = $curr.prevAll('input').first();\n\n\tif (key === 8 || key === 46) {\n\t\t$prev.focus();\n\t\t$curr.removeClass('ColorAlphaBorder');\n\n\t\treturn;\n\t}\n\n\tif (isNumber) {\n\t\t$next.focus();\n\t\t$curr.addClass('ColorAlphaBorder');\n\t\t$('.ValidateInputButton').click();\n\t} else event.preventDefault();\n};\n\n\n//# sourceURL=webpack://sapphire/./src/components/08-pages/eSignature.js?");

/***/ }),

/***/ "./src/components/08-pages/remoteAppointment.js":
/*!******************************************************!*\
  !*** ./src/components/08-pages/remoteAppointment.js ***!
  \******************************************************/
/***/ (function() {

eval("(function ($, window, SapphireWidgets) {\n\tconst create = () => {\n\t\tconst $widget = $('.RemoteAppointment');\n\t\tconst $header = $widget.find('.RemoteAppointment__Header');\n\t\tconst $minimize = $header.find('.Minimize');\n\t\tconst $smallSize = $header.find('.Small');\n\t\tconst $mediumSize = $header.find('.Medium');\n\t\tconst $fullScreen = $header.find('.FullScreen');\n\t\tconst $restoreWindow = $widget.find('.RemoteAppointment__RestoreWindow');\n\n\t\tlet isPreviousSmall = $smallSize.is(':visible');\n\n\t\t$minimize.click(() => {\n\t\t\tisPreviousSmall = $mediumSize.is(':visible');\n\n\t\t\t//$widget.draggable({ disabled: true });\n\n\t\t\t$widget.addClass('RemoteAppointment--minimized');\n\t\t\t$minimize.hide();\n\t\t\t$mediumSize.show();\n\n\t\t\t$widget.animate(minimizedPosition($header.height()));\n\t\t});\n\n\t\t$smallSize.click(() => {\n\t\t\t$widget.removeClass('RemoteAppointment--minimized');\n\t\t\t$minimize.show();\n\t\t\t$smallSize.hide();\n\t\t\t$mediumSize.show();\n\n\t\t\t$widget.animate({\n\t\t\t\ttop: '50%',\n\t\t\t\tright: '50%',\n\t\t\t\tleft: '50%',\n\t\t\t\twidth: '510px',\n\t\t\t\theight: '425px',\n\t\t\t});\n\t\t});\n\n\t\t$mediumSize.click(() => {\n\t\t\tconst isCallStarted = $widget.hasClass('RemoteAppointment--callStarted');\n\n\t\t\t//$widget.draggable('enable');\n\n\t\t\t$widget.removeClass('RemoteAppointment--minimized');\n\t\t\t$minimize.show();\n\t\t\t$mediumSize.hide();\n\t\t\tif (isCallStarted) $smallSize.show();\n\n\t\t\t$widget.animate({\n\t\t\t\ttop: '50%',\n\t\t\t\tright: '50%',\n\t\t\t\tleft: '50%',\n\t\t\t\twidth: isCallStarted ? '45vw' : '450px',\n\t\t\t\theight: isCallStarted ? '52vh' : '260px',\n\t\t\t});\n\t\t});\n\n\t\t$fullScreen.click(() => {\n\t\t\tconst iframe = document.querySelector('.RemoteAppointment iframe');\n\n\t\t\tif (iframe.requestFullscreen) {\n\t\t\t\tiframe.requestFullscreen();\n\t\t\t} else if (iframe.webkitRequestFullscreen) {\n\t\t\t\tiframe.webkitRequestFullscreen();\n\t\t\t}\n\t\t});\n\n\t\t$restoreWindow.click(() => {\n\t\t\tif (isPreviousSmall) $smallSize.click();\n\t\t\telse $mediumSize.click();\n\t\t});\n\n\t\t$(document).ready(function () {\n\t\t\t$widget.draggable({\n\t\t\t\tcontainment: 'window',\n\t\t\t\thandle: $header,\n\t\t\t\tscroll: false,\n\t\t\t\tsnap: true,\n\t\t\t\tiframeFix: true,\n\t\t\t});\n\n\t\t\tfakeAjaxRefresh();\n\t\t});\n\n\t\tcheckIframeLoaded();\n\t};\n\n\tconst minimizedPosition = (headerHeight = 48) => {\n\t\treturn {\n\t\t\ttop: $(window).height() - headerHeight - 16,\n\t\t\tright: '76px',\n\t\t\tleft: $(window).width() - 280 - 60 - 16,\n\t\t\twidth: '275px',\n\t\t\theight: '48px',\n\t\t};\n\t};\n\n\tconst resizeWhenJoin = () => {\n\t\tconst $widget = $('.RemoteAppointment');\n\t\tconst $smallSize = $widget.find('.Small');\n\n\t\t$smallSize.show();\n\t\t$widget.addClass('RemoteAppointment--callStarted');\n\n\t\t$widget.css({\n\t\t\theight: '52vh',\n\t\t\twidth: '45vw',\n\t\t});\n\n\t\tconst centerPx = ($(window.top).width() - $widget.width()) / 2;\n\n\t\t$widget.css({\n\t\t\tinset: `230px auto auto ${centerPx}px`,\n\t\t});\n\n\t\tlet timeout;\n\n\t\tfunction warning(e) {\n\t\t\ttimeout = setTimeout(function () {\n\t\t\t\t// Hack to keep the current tab selected if user doesn't go to another page\n\t\t\t\tconst iframeContents = window.top.$('.MainContent > iframe').contents();\n\t\t\t\tconst tabItems = iframeContents.find('.TabWrapper');\n\n\t\t\t\ttabItems.removeClass('Active');\n\t\t\t\ttabItems.first().addClass('Active');\n\t\t\t}, 1000);\n\n\t\t\treturn (e.returnValue = 'You are leaving the page');\n\t\t}\n\n\t\tfunction noTimeout() {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\n\t\twindow.top.onbeforeunload = warning;\n\t\twindow.top.unload = noTimeout;\n\n\t\t/*window.top.addEventListener('beforeunload', function(e) {\n\t\t\te.preventDefault();\n\t\t\te.returnValue = '123';\n\t\t});*/\n\t};\n\n\tconst setInitialState = () => {\n\t\tconst $widget = $('.RemoteAppointment');\n\t\tconst $smallSize = $widget.find('.Small');\n\t\tconst $mediumSize = $widget.find('.Medium');\n\n\t\t$smallSize.hide();\n\t\t$mediumSize.hide();\n\t\t$widget.removeClass('RemoteAppointment--callStarted');\n\n\t\twindow.top.unload = null;\n\t\twindow.top.onbeforeunload = null;\n\n\t\t$('.RemoteAppointment').css({\n\t\t\tdisplay: 'initial',\n\t\t\tright: '22%',\n\t\t\ttop: '30%',\n\t\t\theight: '260px',\n\t\t\twidth: '450px',\n\t\t});\n\t};\n\n\tconst setModalMinimized = () => {\n\t\t// To use only inside Sapphire iFrame pages\n\t\tconst $modalRemoteAppt = window.top.$('.RemoteAppointment');\n\n\t\tif ($modalRemoteAppt.length) {\n\t\t\tconst $minimizeModal = $modalRemoteAppt.find('.Minimize');\n\t\t\t$minimizeModal.click();\n\t\t}\n\t};\n\n\tconst checkIframeLoaded = () => {\n\t\tconst iframe = document.getElementsByClassName('SapphireFrame')[0];\n\t\tconst iframeDoc = iframe.contentDocument || iframe.contentWindow.document;\n\n\t\tif (iframeDoc.readyState == 'complete') {\n\t\t\tiframe.contentWindow.onload = function () {\n\t\t\t\tsetInitialState();\n\t\t\t};\n\n\t\t\treturn;\n\t\t}\n\n\t\twindow.setTimeout(checkIframeLoaded, 100);\n\t};\n\n\tconst setCallStarted = () => { };\n\n\tconst fakeAjaxRefresh = () => {\n\t\t// Not sure what was the idea here, but it doesn't work because onbeforeunload only triggers the browser confirmation and ignores any code inside\n\t\t/*\n\t\tconst $iframe = $('.SapphireFrame');\n\n\t\t$iframe.on('load', function() {\n\t\t\t$iframe[0].contentWindow.onbeforeunload = function(e) {\n\t\t\t\t$('.Feedback_AjaxWait').show();\n\t\t\t};\n\n\t\t\t$('.Feedback_AjaxWait').hide();\n\t\t});*/\n\t};\n\n\tconst openModalLeaveContext = url => {\n\t\tSapphireWidgets.RemoteAppointment.leaveURL = url;\n\n\t\twindow.top.unload = null;\n\t\twindow.top.onbeforeunload = null;\n\n\t\t$('.OpenModalLeaveContext').click();\n\t};\n\n\tSapphireWidgets.RemoteAppointment = {\n\t\tcreate,\n\t\tresizeWhenJoin,\n\t\tsetCallStarted,\n\t\tsetInitialState,\n\t\tfakeAjaxRefresh,\n\t\tsetModalMinimized,\n\t\topenModalLeaveContext,\n\t};\n})(jQuery, window, SapphireWidgets);\n\n\n//# sourceURL=webpack://sapphire/./src/components/08-pages/remoteAppointment.js?");

/***/ }),

/***/ "./src/components/globals.js":
/*!***********************************!*\
  !*** ./src/components/globals.js ***!
  \***********************************/
/***/ (function() {

eval("//SapphireWidgets = window.SapphireWidgets = window.SapphireWidgets || {};\n\n//# sourceURL=webpack://sapphire/./src/components/globals.js?");

/***/ }),

/***/ "./src/components sync recursive \\.js$":
/*!************************************!*\
  !*** ./src/components/ sync \.js$ ***!
  \************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var map = {\n\t\"./00-settings/config.js\": \"./src/components/00-settings/config.js\",\n\t\"./03-elements/script.js\": \"./src/components/03-elements/script.js\",\n\t\"./05-components/layout/layout-base.js\": \"./src/components/05-components/layout/layout-base.js\",\n\t\"./05-components/layout/layout-blank.js\": \"./src/components/05-components/layout/layout-blank.js\",\n\t\"./05-components/layout/layout-emergency.js\": \"./src/components/05-components/layout/layout-emergency.js\",\n\t\"./05-components/layout/layout-popup.js\": \"./src/components/05-components/layout/layout-popup.js\",\n\t\"./05-components/layout/subLayoutLeft.js\": \"./src/components/05-components/layout/subLayoutLeft.js\",\n\t\"./05-components/v3-pat/actions-menu/scripts.js\": \"./src/components/05-components/v3-pat/actions-menu/scripts.js\",\n\t\"./05-components/v3-pat/button-link/scripts.js\": \"./src/components/05-components/v3-pat/button-link/scripts.js\",\n\t\"./05-components/v3-pat/card-charts/scripts.js\": \"./src/components/05-components/v3-pat/card-charts/scripts.js\",\n\t\"./05-components/v3-pat/collapsible-side-panel/scripts.js\": \"./src/components/05-components/v3-pat/collapsible-side-panel/scripts.js\",\n\t\"./05-components/v3-pat/comp-line/scripts.js\": \"./src/components/05-components/v3-pat/comp-line/scripts.js\",\n\t\"./05-components/v3-pat/country-phone/scripts.js\": \"./src/components/05-components/v3-pat/country-phone/scripts.js\",\n\t\"./05-components/v3-pat/data-tables/scripts.js\": \"./src/components/05-components/v3-pat/data-tables/scripts.js\",\n\t\"./05-components/v3-pat/datetime-range-picker/scripts.js\": \"./src/components/05-components/v3-pat/datetime-range-picker/scripts.js\",\n\t\"./05-components/v3-pat/drag-drop/scripts.js\": \"./src/components/05-components/v3-pat/drag-drop/scripts.js\",\n\t\"./05-components/v3-pat/dropdown-categories/scripts.js\": \"./src/components/05-components/v3-pat/dropdown-categories/scripts.js\",\n\t\"./05-components/v3-pat/dropzone/dropzone.js\": \"./src/components/05-components/v3-pat/dropzone/dropzone.js\",\n\t\"./05-components/v3-pat/expandable-link/scripts.js\": \"./src/components/05-components/v3-pat/expandable-link/scripts.js\",\n\t\"./05-components/v3-pat/fullscreen-tabs-wrapper/scripts.js\": \"./src/components/05-components/v3-pat/fullscreen-tabs-wrapper/scripts.js\",\n\t\"./05-components/v3-pat/generic-card/scripts.js\": \"./src/components/05-components/v3-pat/generic-card/scripts.js\",\n\t\"./05-components/v3-pat/generic-gallery/scripts.js\": \"./src/components/05-components/v3-pat/generic-gallery/scripts.js\",\n\t\"./05-components/v3-pat/generic-grid/scripts.js\": \"./src/components/05-components/v3-pat/generic-grid/scripts.js\",\n\t\"./05-components/v3-pat/horizontal-toolbar/scripts.js\": \"./src/components/05-components/v3-pat/horizontal-toolbar/scripts.js\",\n\t\"./05-components/v3-pat/hour-picker/scripts.js\": \"./src/components/05-components/v3-pat/hour-picker/scripts.js\",\n\t\"./05-components/v3-pat/iframe-loader/scripts.js\": \"./src/components/05-components/v3-pat/iframe-loader/scripts.js\",\n\t\"./05-components/v3-pat/input-lasa/scripts.js\": \"./src/components/05-components/v3-pat/input-lasa/scripts.js\",\n\t\"./05-components/v3-pat/input-with-clear/scripts.js\": \"./src/components/05-components/v3-pat/input-with-clear/scripts.js\",\n\t\"./05-components/v3-pat/input-with-list/scripts.js\": \"./src/components/05-components/v3-pat/input-with-list/scripts.js\",\n\t\"./05-components/v3-pat/line-add/scripts.js\": \"./src/components/05-components/v3-pat/line-add/scripts.js\",\n\t\"./05-components/v3-pat/line-details-expand-box/script.js\": \"./src/components/05-components/v3-pat/line-details-expand-box/script.js\",\n\t\"./05-components/v3-pat/location-box/scripts.js\": \"./src/components/05-components/v3-pat/location-box/scripts.js\",\n\t\"./05-components/v3-pat/main-interactive-card/scripts.js\": \"./src/components/05-components/v3-pat/main-interactive-card/scripts.js\",\n\t\"./05-components/v3-pat/menu-bar/scripts.js\": \"./src/components/05-components/v3-pat/menu-bar/scripts.js\",\n\t\"./05-components/v3-pat/multiple-selection-button/scripts.js\": \"./src/components/05-components/v3-pat/multiple-selection-button/scripts.js\",\n\t\"./05-components/v3-pat/panel/confirmation-panel.js\": \"./src/components/05-components/v3-pat/panel/confirmation-panel.js\",\n\t\"./05-components/v3-pat/panel/confirmation-popup.js\": \"./src/components/05-components/v3-pat/panel/confirmation-popup.js\",\n\t\"./05-components/v3-pat/panel/modal-popup.js\": \"./src/components/05-components/v3-pat/panel/modal-popup.js\",\n\t\"./05-components/v3-pat/panel/panel-by-id-notify.js\": \"./src/components/05-components/v3-pat/panel/panel-by-id-notify.js\",\n\t\"./05-components/v3-pat/panel/panel-by-id.js\": \"./src/components/05-components/v3-pat/panel/panel-by-id.js\",\n\t\"./05-components/v3-pat/panel/popup-menu.js\": \"./src/components/05-components/v3-pat/panel/popup-menu.js\",\n\t\"./05-components/v3-pat/panel/sapphire-panel.js\": \"./src/components/05-components/v3-pat/panel/sapphire-panel.js\",\n\t\"./05-components/v3-pat/panel/scripts.js\": \"./src/components/05-components/v3-pat/panel/scripts.js\",\n\t\"./05-components/v3-pat/patient-call-cancel/patient-call-cancel-structure.js\": \"./src/components/05-components/v3-pat/patient-call-cancel/patient-call-cancel-structure.js\",\n\t\"./05-components/v3-pat/patient-call-cancel/patient-call-cancel.js\": \"./src/components/05-components/v3-pat/patient-call-cancel/patient-call-cancel.js\",\n\t\"./05-components/v3-pat/prescription-card/scripts.js\": \"./src/components/05-components/v3-pat/prescription-card/scripts.js\",\n\t\"./05-components/v3-pat/prescription-expandable/scripts.js\": \"./src/components/05-components/v3-pat/prescription-expandable/scripts.js\",\n\t\"./05-components/v3-pat/resize-parent-iframe/scripts.js\": \"./src/components/05-components/v3-pat/resize-parent-iframe/scripts.js\",\n\t\"./05-components/v3-pat/sapphire-header/scripts.js\": \"./src/components/05-components/v3-pat/sapphire-header/scripts.js\",\n\t\"./05-components/v3-pat/sapphire-popup/scripts.js\": \"./src/components/05-components/v3-pat/sapphire-popup/scripts.js\",\n\t\"./05-components/v3-pat/sapphire-radio-button/scripts.js\": \"./src/components/05-components/v3-pat/sapphire-radio-button/scripts.js\",\n\t\"./05-components/v3-pat/scales/scale-main-structure.js\": \"./src/components/05-components/v3-pat/scales/scale-main-structure.js\",\n\t\"./05-components/v3-pat/scales/toggle-item-control.js\": \"./src/components/05-components/v3-pat/scales/toggle-item-control.js\",\n\t\"./05-components/v3-pat/search-and-select/select-ssd.js\": \"./src/components/05-components/v3-pat/search-and-select/select-ssd.js\",\n\t\"./05-components/v3-pat/search-and-select/ssd-search.js\": \"./src/components/05-components/v3-pat/search-and-select/ssd-search.js\",\n\t\"./05-components/v3-pat/searchable-client-side/scripts.js\": \"./src/components/05-components/v3-pat/searchable-client-side/scripts.js\",\n\t\"./05-components/v3-pat/section-expandable-custom/scripts.js\": \"./src/components/05-components/v3-pat/section-expandable-custom/scripts.js\",\n\t\"./05-components/v3-pat/section-expandable-inside/scripts.js\": \"./src/components/05-components/v3-pat/section-expandable-inside/scripts.js\",\n\t\"./05-components/v3-pat/segmented-control/scripts.js\": \"./src/components/05-components/v3-pat/segmented-control/scripts.js\",\n\t\"./05-components/v3-pat/select-system/scripts.js\": \"./src/components/05-components/v3-pat/select-system/scripts.js\",\n\t\"./05-components/v3-pat/shift-container/scripts.js\": \"./src/components/05-components/v3-pat/shift-container/scripts.js\",\n\t\"./05-components/v3-pat/shift-table/shiftTable.js\": \"./src/components/05-components/v3-pat/shift-table/shiftTable.js\",\n\t\"./05-components/v3-pat/shift-table/shiftTableCard.js\": \"./src/components/05-components/v3-pat/shift-table/shiftTableCard.js\",\n\t\"./05-components/v3-pat/shift-table/shiftTableCardProgress.js\": \"./src/components/05-components/v3-pat/shift-table/shiftTableCardProgress.js\",\n\t\"./05-components/v3-pat/shift-table/shiftTableHover.js\": \"./src/components/05-components/v3-pat/shift-table/shiftTableHover.js\",\n\t\"./05-components/v3-pat/side-menu/scripts.js\": \"./src/components/05-components/v3-pat/side-menu/scripts.js\",\n\t\"./05-components/v3-pat/sidebar/sidebar-structure.js\": \"./src/components/05-components/v3-pat/sidebar/sidebar-structure.js\",\n\t\"./05-components/v3-pat/small-box-selectable/scripts.js\": \"./src/components/05-components/v3-pat/small-box-selectable/scripts.js\",\n\t\"./05-components/v3-pat/spinner-horizontal/scripts.js\": \"./src/components/05-components/v3-pat/spinner-horizontal/scripts.js\",\n\t\"./05-components/v3-pat/spinner-vertical/scripts.js\": \"./src/components/05-components/v3-pat/spinner-vertical/scripts.js\",\n\t\"./05-components/v3-pat/split-button/scripts.js\": \"./src/components/05-components/v3-pat/split-button/scripts.js\",\n\t\"./05-components/v3-pat/ssd-component-block/scripts.js\": \"./src/components/05-components/v3-pat/ssd-component-block/scripts.js\",\n\t\"./05-components/v3-pat/ssd-list-line/scripts.js\": \"./src/components/05-components/v3-pat/ssd-list-line/scripts.js\",\n\t\"./05-components/v3-pat/table-form/scripts.js\": \"./src/components/05-components/v3-pat/table-form/scripts.js\",\n\t\"./05-components/v3-pat/tabs-extended/scripts.js\": \"./src/components/05-components/v3-pat/tabs-extended/scripts.js\",\n\t\"./05-components/v3-pat/tabular-list/scripts.js\": \"./src/components/05-components/v3-pat/tabular-list/scripts.js\",\n\t\"./05-components/v3-pat/tabular-scroll/scripts.js\": \"./src/components/05-components/v3-pat/tabular-scroll/scripts.js\",\n\t\"./05-components/v3-pat/timeline/scripts.js\": \"./src/components/05-components/v3-pat/timeline/scripts.js\",\n\t\"./05-components/v3-pat/trigger-iframe-tooltip/trigger-iframe-tooltip.js\": \"./src/components/05-components/v3-pat/trigger-iframe-tooltip/trigger-iframe-tooltip.js\",\n\t\"./05-components/v3-pat/truncated-content/scripts.js\": \"./src/components/05-components/v3-pat/truncated-content/scripts.js\",\n\t\"./08-pages/clinicianWorkArea.js\": \"./src/components/08-pages/clinicianWorkArea.js\",\n\t\"./08-pages/eSignature.js\": \"./src/components/08-pages/eSignature.js\",\n\t\"./08-pages/remoteAppointment.js\": \"./src/components/08-pages/remoteAppointment.js\",\n\t\"./globals.js\": \"./src/components/globals.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/components sync recursive \\\\.js$\";\n\n//# sourceURL=webpack://sapphire/./src/components/_sync_\\.js$?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/app.js");
/******/ 	
/******/ })()
;