/*! prod.backoffice.js || Version: 5.5.202 || Generated: Tue Jun 17 2025 17:42:01 GMT+0100 (Hora de verÃ£o da Europa Ocidental) */
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/backoffice/styles.scss":
/*!************************************!*\
  !*** ./src/backoffice/styles.scss ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://sapphire/./src/backoffice/styles.scss?");

/***/ }),

/***/ "./src/backoffice/01-components/layout/layout-backoffice.js":
/*!******************************************************************!*\
  !*** ./src/backoffice/01-components/layout/layout-backoffice.js ***!
  \******************************************************************/
/***/ (function() {

eval("$(document).ready(function () {\r\n\r\n\r\n  var regex = RegExp(\"Layout\");\r\n  var wordList = $('.Page').attr('class').split(\" \").filter((elem, index) => {\r\n    return regex.test(elem);\r\n  })\r\n  $('.ViewStateCounter > div').append(' ' + wordList);\r\n\r\n\r\n  var isDesktop = $(\".Page\").hasClass(\"desktop\");\r\n  var isPhone = $(\".Page\").hasClass(\"phone\");\r\n  var UseSidebar = $(\".Sidebar\").css(\"display\") != \"none\";\r\n\r\n  if (isPhone) $(\".Others_Menu \").detach().prependTo(\".Application_Menu\");\r\n\r\n  // open responsive menu\r\n  $(\"a.Header_ButtonMenu\").click(function () {\r\n\r\n    // if opened\r\n    if ($(\".Page\").hasClass(\"active\")) {\r\n      $(\".Page\").removeClass(\"active\");\r\n    } else {\r\n      $(\".Page\").addClass(\"active\");\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n\r\n  // close resposive menu when click out\r\n  $(\".Page.tablet > .Content\").click(function () {\r\n    $(\".Page\").removeClass(\"active\");\r\n  });\r\n\r\n  // Open sidebar\r\n  $(\"a.Header_ButtonSidebar\").click(function () {\r\n\r\n    // if open\r\n    if ($(\".Sidebar\").hasClass(\"open\")) {\r\n      $(\".Sidebar\").removeClass(\"open\");\r\n    } else {\r\n      $(\".Sidebar\").addClass(\"open\");\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n\r\n  // if sidebar\r\n  if (UseSidebar) {\r\n    $(\".Page\").addClass(\"UseSidebar\");\r\n  } else {\r\n\r\n    // if fade active\r\n    if ($(\".Page\").hasClass(\"UseHeaderFade\")) {\r\n\r\n      $header = $('.Header');\r\n      $titleHeight = $(\".Title_Section\").outerHeight();\r\n      var $headerBackground = $('.Header_background');\r\n\r\n      var alpha = 0;\r\n      var lastComma = \"\";\r\n      $(window).scroll(function () {\r\n        if ($(this).scrollTop() > $headerHeight) {\r\n          $headerBackground.fadeIn();\r\n        } else {\r\n          $headerBackground.fadeOut();\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  $(window).scroll(function () {\r\n    /*     $('.Page thead th').css('top',$('.MainContent_others').outerHeight());\r\n         $('.MainContent_others').css('padding-top','20px');*/\r\n\r\n  });\r\n\r\n  $('.Menu_TopMenu').on('click', 'a', function () {\r\n    $(this).blur();\r\n  });\r\n\r\n\r\n\r\n  /* caj: solves the * in mandatory \r\n  $('input.Mandatory, select.Mandatory').parent().addClass('ListInputMandatory');*/\r\n\r\n});\n\n//# sourceURL=webpack://sapphire/./src/backoffice/01-components/layout/layout-backoffice.js?");

/***/ }),

/***/ "./src/backoffice/scripts.js":
/*!***********************************!*\
  !*** ./src/backoffice/scripts.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("__webpack_require__(/*! ./styles.scss */ \"./src/backoffice/styles.scss\");\r\n\r\nSapphireWidgets = window.SapphireWidgets = window.SapphireWidgets || {};\r\n\r\n__webpack_require__(/*! ./01-components/layout/layout-backoffice */ \"./src/backoffice/01-components/layout/layout-backoffice.js\");\r\n\r\n__webpack_require__(/*! ../components/05-components/v3-pat/country-phone/scripts */ \"./src/components/05-components/v3-pat/country-phone/scripts.js\");\r\n__webpack_require__(/*! ../components/05-components/v3-pat/datetime-range-picker/scripts */ \"./src/components/05-components/v3-pat/datetime-range-picker/scripts.js\");\r\n__webpack_require__(/*! ../components/05-components/v3-pat/hour-picker/scripts */ \"./src/components/05-components/v3-pat/hour-picker/scripts.js\");\r\n__webpack_require__(/*! ../components/05-components/v3-pat/panel/confirmation-popup */ \"./src/components/05-components/v3-pat/panel/confirmation-popup.js\");\r\n__webpack_require__(/*! ../components/05-components/v3-pat/panel/panel-by-id */ \"./src/components/05-components/v3-pat/panel/panel-by-id.js\");\r\n__webpack_require__(/*! ../components/05-components/v3-pat/sapphire-popup/scripts */ \"./src/components/05-components/v3-pat/sapphire-popup/scripts.js\");\r\n__webpack_require__(/*! ../components/05-components/v3-pat/select-system/scripts */ \"./src/components/05-components/v3-pat/select-system/scripts.js\");\r\n__webpack_require__(/*! ../components/05-components/v3-pat/spinner-vertical/scripts */ \"./src/components/05-components/v3-pat/spinner-vertical/scripts.js\");\r\n__webpack_require__(/*! ../components/05-components/v3-pat/dropzone/dropzone */ \"./src/components/05-components/v3-pat/dropzone/dropzone.js\");\r\n__webpack_require__(/*! ../components/03-elements/script */ \"./src/components/03-elements/script.js\");\r\n__webpack_require__(/*! ../components/05-components/v3-pat/segmented-control/scripts */ \"./src/components/05-components/v3-pat/segmented-control/scripts.js\")\n\n//# sourceURL=webpack://sapphire/./src/backoffice/scripts.js?");

/***/ }),

/***/ "./src/components/03-elements/script.js":
/*!**********************************************!*\
  !*** ./src/components/03-elements/script.js ***!
  \**********************************************/
/***/ (function() {

eval("/* Component Textarea */\r\n(function($, window, document, SapphireWidgets) {\r\n  \r\n  $(document).ready(function() {\r\n    CallTextAreaAutoResize();\r\n  });\r\n\r\n  window.CallTextAreaAutoResize = function prepareTextAreaAutoResize(TextAreaId){\r\n    \r\n    if(TextAreaId==undefined){\r\n      var textAreaInput = $('textarea');\r\n    }else{\r\n      var textAreaInput = $('#'+TextAreaId);\r\n    }\r\n    textAreaInput.each(function(){\r\n      $(this).attr('rows',2);\r\n\r\n      $(this)[0].style.minHeight = '70px';\r\n      resizeTextArea($(this)[0]);\r\n    });\r\n\r\n    textAreaInput.on('input', function(){\r\n      resizeTextArea($(this)[0]);\r\n    });\r\n  }\r\n\r\n  function resizeTextArea ($textAreaInput) {\r\n    if($textAreaInput.scrollHeight == 0){\r\n      $textAreaInput.style.height = '70px';\r\n    }else{\r\n      $textAreaInput.style.height = 'auto';\r\n      $textAreaInput.style.height = $textAreaInput.scrollHeight + 'px';\r\n    }\r\n  }\r\n})(jQuery, window, document, SapphireWidgets);\n\n//# sourceURL=webpack://sapphire/./src/components/03-elements/script.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/country-phone/scripts.js":
/*!**********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/country-phone/scripts.js ***!
  \**********************************************************************/
/***/ (function() {

eval("/* Component CountryPhone */\r\n(function($, window, SapphireWidgets) {\r\n\tconst create = config => {\r\n\t\tconst $element = document.querySelector(`#${config.widgetId}`);\r\n\t\tconst additionalValidations = config.additionalValidations;\r\n\r\n\t\tconst countryPhoneInput = window.intlTelInput($element, {\r\n\t\t\tinitialCountry: config.initialCountry,\r\n\t\t\tpreferredCountries: config.preferredCountries,\r\n\t\t\tseparateDialCode: config.separateDialCode,\r\n\t\t\tnationalMode: config.nationalMode,\r\n\t\t\tautoPlaceholder: config.autoPlaceholder ? 'polite' : false,\r\n\t\t\tformatOnDisplay: false,\r\n\t\t\tutilsScript: '/V3_Pat/js/utils.js',\r\n\t\t});\r\n\r\n\t\tconst $input = $(`#${config.widgetId}`);\r\n\r\n\t\t$input.on('keyup', function(e) {\r\n\t\t\tif ($input.val() === '+' || $input.val() === '') {\r\n\t\t\t\tcountryPhoneInput.setCountry(config.initialCountry);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$input.on('keypress', function(e) {\r\n\t\t\tconst selectedCountry = countryPhoneInput.getSelectedCountryData();\r\n\t\t\tconst filter = additionalValidations.find(i => i.CountryPhoneValidations.CountryCode === selectedCountry.iso2);\r\n\t\t\tconst value = $input.val().trim();\r\n\r\n\t\t\tlet isValid = true;\r\n\r\n\t\t\tif (filter) {\r\n\t\t\t\tconst withouCode = value.replace(`+${selectedCountry.dialCode}`, '');\r\n\r\n\t\t\t\tisValid = withouCode.trim().length + 1 <= filter.CountryPhoneValidations.PhoneLength;\r\n\t\t\t}\r\n\r\n\t\t\tif (value === `+${selectedCountry.dialCode}`) {\r\n\t\t\t\t$input.val(`+${selectedCountry.dialCode} `);\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\tisValid &&\r\n\t\t\t\t(e.metaKey || // cmd/ctrl\r\n\t\t\t\te.which <= 0 || // arrow keys\r\n\t\t\t\te.which == 8 || // delete key\r\n\t\t\t\t\t(!value.length && e.key === '+') ||\r\n\t\t\t\t\t/[0-9]/.test(String.fromCharCode(e.which)))\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\t$element.addEventListener('countrychange', function() {\r\n\t\t\tonChangeCountry();\r\n\t\t});\r\n\r\n\t\tconst onChangeCountry = () => {\r\n\t\t\tconst $selectedCountryInput = $(`#${config.selectedCountryInput}`);\r\n\t\t\tconst selectedCountry = countryPhoneInput.getSelectedCountryData();\r\n\r\n\t\t\t$selectedCountryInput.val(selectedCountry.iso2);\r\n\t\t\t$selectedCountryInput.trigger('change');\r\n\t\t};\r\n\r\n\t\t$(document).ready(function() {\r\n\t\t\tonChangeCountry();\r\n\t\t});\r\n\t};\r\n\r\n\tSapphireWidgets.CountryPhone = {\r\n\t\tcreate,\r\n\t};\r\n})(jQuery, window, SapphireWidgets);\r\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/country-phone/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/datetime-range-picker/scripts.js":
/*!******************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/datetime-range-picker/scripts.js ***!
  \******************************************************************************/
/***/ (function() {

eval("/* Component DateTimeRangePicker */\r\n(function ($, window, document, SapphireWidgets) {\r\n\tvar allDateTimeRangePickers = [];\r\n\r\n\tvar create = function (config) {\r\n\t\tfor (var i = 0; i < allDateTimeRangePickers.length; i++) {\r\n\t\t\tif (allDateTimeRangePickers[i].config.widgetId === config.widgetId) {\r\n\t\t\t\tallDateTimeRangePickers.splice(i, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\twindow[config.widgetId] = new DateTimeRangePicker(config);\r\n\t\tallDateTimeRangePickers.push(window[config.widgetId]);\r\n\t};\r\n\r\n\tvar DateTimeRangePicker = function (config) {\r\n\t\tthis.config = config;\r\n\t\tthis.currentLocale = config.currentLocale;\r\n\r\n\t\tthis.$widget = $('#' + config.widgetId);\r\n\t\tthis.$widget.addClass('DateTimeRangePicker');\r\n\t\tthis.$clear = this.$widget.find('.DateTimeRangePicker-clear');\r\n\t\tthis.$label = this.$widget.find('.DateTimeRangePicker-label');\r\n\r\n\t\tthis.isEmptyHour = false;\r\n\r\n\t\tif (this.config.attachToInput) {\r\n\t\t\tthis.$widget.addClass('attachedInput');\r\n\t\t\tthis.$model = this.$widget.find('.DateTimeRangePicker-placeholder input[type=\"text\"]');\r\n\t\t\tthis.$model.attr('tabIndex', -1);\r\n\t\t}\r\n\r\n\t\tthis.$input = $('#' + config.inputId);\r\n\r\n\t\tif (!this.config.allowsTyping) {\r\n\t\t\tthis.$input.prop('readonly', true);\r\n\t\t}\r\n\r\n\t\t// Just to force kuwait arabic version\r\n\t\tif (this.currentLocale === 'AR') {\r\n\t\t\tmoment.locale('ar-kw');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmoment.locale(config.currentLocale)\r\n\t\t}\r\n\r\n\t\tvar options = {};\r\n\t\toptions.startDate = config.startDate;\r\n\t\toptions.singleDatePicker = config.singleDatePicker;\r\n\t\toptions.autoApply = config.autoApply;\r\n\t\toptions.autoUpdateInput = config.autoUpdateInput;\r\n\t\toptions.timePicker = config.timePicker;\r\n\t\toptions.timePicker24Hour = config.timePicker24Hour;\r\n\t\toptions.timePickerIncrement = config.timePickerIncrement;\r\n\t\toptions.showDropdowns = config.hasDropdowns; // Month/Year Picker\r\n\t\toptions.drops = config.drops;\r\n\t\toptions.opens = config.isRTL && config.opens != 'center' ? 'left' : config.opens;\r\n\r\n\t\tvar stringConnection = '[, ' + config.dateTimeStringConnection + ']';\r\n\r\n\t\tif (config.timePicker) {\r\n\t\t\t//if (!this.config.attachToInput) //changed by Diogo Ribeiro so date picker has a placeholder even if its attached to input (otherwise it never showed)\r\n\t\t\tthis.$input.prop('placeholder', 'DD-MM-YYYY HH:MM');\r\n\r\n\t\t\tif (options.timePicker24Hour) {\r\n\t\t\t\tthis.config.formatInput = `${this.config.systemDateFormat} HH:mm`;\r\n\t\t\t\tthis.config.formatLabel = this.config.hasYearWhenText\r\n\t\t\t\t\t? 'D MMM YYYY' + stringConnection + ' HH:mm'\r\n\t\t\t\t\t: 'D MMM' + stringConnection + ' HH:mm';\r\n\t\t\t} else {\r\n\t\t\t\tthis.config.formatInput = `${this.config.systemDateFormat} hh:mm A`;\r\n\t\t\t\tthis.config.formatLabel = this.config.hasYearWhenText\r\n\t\t\t\t\t? 'D MMM YYYY' + stringConnection + ' hh:mm A'\r\n\t\t\t\t\t: 'D MMM' + stringConnection + ' hh:mm A';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.$widget.addClass('onlyDate');\r\n\r\n\t\t\t//if (!this.config.attachToInput) \r\n\t\t\tthis.$input.prop('placeholder', 'DD-MM-YYYY');\r\n\r\n\t\t\tthis.config.formatInput = this.config.systemDateFormat;\r\n\t\t\tthis.config.formatLabel = this.config.hasYearWhenText ? 'D MMM YYYY' : 'D MMM';\r\n\t\t}\r\n\r\n\t\tif (!config.singleDatePicker) {\r\n\t\t\tthis.$widget.addClass('rangeDates');\r\n\t\t}\r\n\r\n\t\tthis.config.formatLabel = this.config.hasWeekDayNameWhenText\r\n\t\t\t? 'ddd[, ]' + this.config.formatLabel\r\n\t\t\t: this.config.formatLabel;\r\n\r\n\t\toptions.locale = {\r\n\t\t\tdirection: config.isRTL ? 'rtl' : 'ltr',\r\n\t\t\tformat: this.config.formatInput,\r\n\t\t\tcancelLabel: this.config.cancelLabel,\r\n\t\t\tapplyLabel: this.config.applyLabel,\r\n\t\t};\r\n\r\n\t\tif (config.hasTextTrigger) {\r\n\t\t\tthis.$widget.addClass('textTrigger');\r\n\t\t}\r\n\r\n\t\tconst nulldDates = ['01-01-1900 00:00:00', '1900-01-01 00:00:00'];\r\n\r\n\t\tif (config.endDate && !nulldDates.some(i => i === config.endDate)) {\r\n\t\t\toptions.endDate = config.endDate;\r\n\t\t}\r\n\r\n\t\tif (config.maxDate && !nulldDates.some(i => i === config.maxDate)) {\r\n\t\t\toptions.maxDate = config.maxDate;\r\n\t\t}\r\n\r\n\t\tif (config.minDate && !nulldDates.some(i => i === config.minDate)) {\r\n\t\t\toptions.minDate = config.minDate;\r\n\t\t}\r\n\r\n\t\tif (config.DisabledWeekDays) {\r\n\t\t\tvar disabledWeekDays = config.DisabledWeekDays.split(',');\r\n\t\t\toptions.isInvalidDate = function (date) {\r\n\t\t\t\treturn disabledWeekDays.includes(\r\n\t\t\t\t\tmoment(date)\r\n\t\t\t\t\t\t.day()\r\n\t\t\t\t\t\t.toString()\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tvar _this = this;\r\n\r\n\t\tthis.$input.daterangepicker(options, function (startDate, endDate, label) {\r\n\t\t\t// after a selection is made\r\n\t\t\tif (_this.config.attachToInput) {\r\n\t\t\t\tlet format = '';\r\n\r\n\t\t\t\tif (_this.config.timePicker) {\r\n\t\t\t\t\tformat = `${_this.config.systemDateFormat} HH:mm`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (_this.config.singleDatePicker) {\r\n\t\t\t\t\tif (_this.config.timePicker) _this.$model.val(startDate.format(format));\r\n\t\t\t\t\telse _this.$model.val(startDate.format(_this.config.systemDateFormat));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet start, end;\r\n\r\n\t\t\t\t\tif (_this.config.timePicker) {\r\n\t\t\t\t\t\tstart = startDate.format(format);\r\n\t\t\t\t\t\tend = endDate.format(format);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstart = startDate.format(_this.config.systemDateFormat);\r\n\t\t\t\t\t\tend = endDate.format(_this.config.systemDateFormat);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_this.$model.val(`${start}  Â·  ${end}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_this.$model.trigger('change');\r\n\t\t\t}\r\n\r\n\t\t\tconst initialValue = _this.$input.val();\r\n\t\t\tconst allowsMMYY = _this.config.allowsTyping && _this.config.allowsTypeMMYY && _this.config.singleDatePicker;\r\n\r\n\t\t\tif (allowsMMYY && initialValue.length === 4) {\r\n\t\t\t\t_this.picker.setStartDate(moment(`01${initialValue}`, 'DDMMYY'));\r\n\r\n\t\t\t\tif (_this.config.attachToInput) {\r\n\t\t\t\t\tlet format = '';\r\n\r\n\t\t\t\t\tif (_this.config.timePicker) format = `${_this.config.systemDateFormat} HH:mm`;\r\n\t\t\t\t\telse format = _this.config.systemDateFormat;\r\n\r\n\t\t\t\t\t_this.$model.val(_this.picker.startDate.format(format));\r\n\t\t\t\t\t_this.$model.trigger('change');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// now we have a proper instance\r\n\t\tthis.picker = this.$input.data('daterangepicker');\r\n\r\n\t\tthis.$calendar = $(this.picker.container);\r\n\r\n\t\tif (!!this.config.cssClass) {\r\n\t\t\tthis.$calendar.addClass(this.config.cssClass);\r\n\t\t}\r\n\r\n\t\tthis.$timeHolder = this.$calendar.find('.calendar-time');\r\n\t\tthis.$buttonsHolder = this.$calendar.find('.drp-buttons');\r\n\r\n\t\tif (this.config.autoApply) {\r\n\t\t\tthis.$buttonsHolder.hide();\r\n\t\t}\r\n\r\n\t\tif (config.isEmptyStartDate) {\r\n\t\t\tthis.clear(false);\r\n\t\t} else if (config.isEmptyStartHour) {\r\n\t\t\tthis.isEmptyHour = true;\r\n\t\t\tthis.updateLabeling();\r\n\t\t} else {\r\n\t\t\tthis.updateLabeling();\r\n\t\t}\r\n\r\n\t\tif (config.enabled) {\r\n\t\t\tthis.nativeEvents();\r\n\t\t\tthis.customEvents();\r\n\t\t} else {\r\n\t\t\tthis.$clear.hide();\r\n\t\t\tthis.$input.off('click focus keydown keyup');\r\n\t\t}\r\n\r\n\t\tif (this.config.attachToInput) {\r\n\t\t\tthis.handleCustomValidation();\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.handleCustomValidation = function () {\r\n\t\t// TO DO\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.nativeEvents = function () {\r\n\t\tconst _this = this;\r\n\r\n\t\tthis.$input.on('showCalendar.daterangepicker', function (event, picker) {\r\n\t\t\tif (_this.config.hasGoToday) {\r\n\t\t\t\t_this.$calendar\r\n\t\t\t\t\t.find('.calendar-table thead tr')\r\n\t\t\t\t\t.eq(0)\r\n\t\t\t\t\t.after(\r\n\t\t\t\t\t\t'<tr><td colspan=\"7\" class=\"DateTimeRangePicker-calendar-gotoday\">' +\r\n\t\t\t\t\t\t_this.config.goTodayLabel +\r\n\t\t\t\t\t\t'</td></tr>'\r\n\t\t\t\t\t);\r\n\t\t\t\tif (_this.config.drops === 'up') {\r\n\t\t\t\t\t_this.$calendar.css('top', _this.$calendar.offset().top - 24);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_this.handleViewportPosition();\r\n\r\n\t\t\tif (!_this.config.singleDatePicker) {\r\n\t\t\t\t$('.drp-selected').each(function () {\r\n\t\t\t\t\tlet text = $(this).text();\r\n\t\t\t\t\ttext = text.replace(/-/gi, 'Â·');\r\n\r\n\t\t\t\t\t$(this).text(text);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.$input.on('show.daterangepicker', function (event, picker) {\r\n\t\t\tif (_this.config.timePicker && _this.config.hasClearHour) {\r\n\t\t\t\t_this.$calendar.find('.calendar-time').append('<span class=\"DateTimeRangePicker-calendar-clear\"></span>');\r\n\t\t\t\tif (_this.isEmptyHour) {\r\n\t\t\t\t\t_this.$timeHolder.css('opacity', 0.5);\r\n\t\t\t\t\t_this.$calendar.find('.DateTimeRangePicker-calendar-clear').addClass('disabled');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_this.$timeHolder.css('opacity', 1);\r\n\t\t\t\t\t_this.$calendar.find('.DateTimeRangePicker-calendar-clear').removeClass('disabled');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_this.handleViewportPosition();\r\n\t\t\tSapphireWidgets.DateTimeRangePicker.openedWidgetId = _this.config.widgetId;\r\n\r\n\t\t\tif (_this.config.cssClass === 'CalendarPopup' && window.frameElement) {\r\n\t\t\t\tconst oldBodyHeight = $('body')[0].scrollHeight + 8;\r\n\t\t\t\tconst calendarSafeHeight = _this.$calendar.outerHeight() + 32;\r\n\r\n\t\t\t\tconst newHeight = oldBodyHeight > calendarSafeHeight ? oldBodyHeight : calendarSafeHeight;\r\n\r\n\t\t\t\t$('<div class=\"CalendarPopup__Overlay\"></div>').insertAfter(_this.$calendar);\r\n\r\n\t\t\t\t$(window.frameElement).animate({ minHeight: newHeight });\r\n\t\t\t\t$('body').animate({ minHeight: newHeight });\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.$input.on('hide.daterangepicker', function (event, picker) {\r\n\t\t\t// ONYX20792 Added START\r\n\t\t\tif (_this.config.autoApply && _this.config.attachToInput) {\r\n\t\t\t\t_this.updateLabeling();\r\n\t\t\t\t_this.$model.trigger('change');\r\n\t\t\t}\r\n\t\t\t// ONYX20792 END\r\n\r\n\t\t\t_this.$calendar.find('.DateTimeRangePicker-calendar-clear').remove();\r\n\t\t\t_this.updateParentIframe();\r\n\r\n\t\t\tif (_this.config.cssClass === 'CalendarPopup' && window.frameElement) {\r\n\t\t\t\t$(window.frameElement).css({ minHeight: 'unset' });\r\n\t\t\t\t$('body').css({ minHeight: 'unset' });\r\n\r\n\t\t\t\t$('.CalendarPopup__Overlay').remove();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.$input.on('cancel.daterangepicker', function (event, picker) { });\r\n\r\n\t\tthis.$input.on('outsideClick.daterangepicker', function (event, picker) { });\r\n\r\n\t\tthis.$input.on('timechanged.daterangepicker', function (event, picker) {\r\n\t\t\t_this.isEmptyHour = false;\r\n\t\t\t_this.$timeHolder.css('opacity', 1);\r\n\t\t\tif (_this.config.hasClearHour) {\r\n\t\t\t\t_this.$calendar.find('.calendar-time').append('<span class=\"DateTimeRangePicker-calendar-clear\"></span>');\r\n\t\t\t}\r\n\t\t\tif (_this.config.autoApply) {\r\n\t\t\t\t_this.$clear.removeClass('disabled');\r\n\t\t\t\t_this.updateLabeling();\r\n\t\t\t\t_this.sendNotification();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.$input.on('clickDate.daterangepicker', function (event, picker) {\r\n\t\t\tif (_this.config.autoApply) {\r\n\t\t\t\t_this.$clear.removeClass('disabled');\r\n\t\t\t\t_this.updateLabeling();\r\n\t\t\t\t_this.sendNotification();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.$input.on('apply.daterangepicker', function (event, picker) {\r\n\t\t\t_this.updateLabeling(); // ONYX20792 This line was moved here. Previously it was right before _this.sendNotification().\r\n\t\t\tif (_this.config.attachToInput) {\r\n\t\t\t\t_this.$model.trigger('change'); //same fix as below for when the date is the same/today, when input is attached it seems we also need this extra step\r\n\t\t\t}\r\n\t\t\t_this.$input.trigger('change'); // Fix to call the change when the date is the same/today\r\n\t\t\t_this.$clear.removeClass('disabled');\r\n\t\t\t_this.sendNotification();\r\n\t\t});\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.customEvents = function () {\r\n\t\tvar _this = this;\r\n\t\tthis.$label.off('click').on('click', function (event) {\r\n\t\t\t_this.picker.toggle();\r\n\t\t});\r\n\t\tthis.$clear.off('click').on('click', function (event) {\r\n\t\t\t_this.clear();\r\n\t\t\t_this.picker.hide();\r\n\t\t});\r\n\t\tthis.$calendar.on('click', '.DateTimeRangePicker-calendar-clear', function () {\r\n\t\t\tif (_this.config.timePicker24Hour) {\r\n\t\t\t\t_this.$calendar\r\n\t\t\t\t\t.find('.hourselect')\r\n\t\t\t\t\t.val('0')\r\n\t\t\t\t\t.trigger('change');\r\n\t\t\t} else {\r\n\t\t\t\t_this.$calendar\r\n\t\t\t\t\t.find('.hourselect')\r\n\t\t\t\t\t.val('12')\r\n\t\t\t\t\t.trigger('change');\r\n\t\t\t}\r\n\t\t\t_this.$calendar\r\n\t\t\t\t.find('.minuteselect')\r\n\t\t\t\t.val('0')\r\n\t\t\t\t.trigger('change');\r\n\t\t\t_this.$calendar\r\n\t\t\t\t.find('.ampmselect')\r\n\t\t\t\t.val('AM')\r\n\t\t\t\t.trigger('change');\r\n\t\t\t_this.isEmptyHour = true;\r\n\t\t\t_this.$timeHolder.css('opacity', 0.5);\r\n\t\t\t_this.$calendar.find('.DateTimeRangePicker-calendar-clear').addClass('disabled');\r\n\t\t});\r\n\t\tthis.$calendar.on('click', '.DateTimeRangePicker-calendar-gotoday', function () {\r\n\t\t\t_this.picker.setStartDate(moment());\r\n\t\t\t_this.picker.setEndDate(moment());\r\n\r\n\t\t\t_this.picker.hide();\r\n\r\n\t\t\tif (!_this.config.autoUpdateInput || _this.config.hasTextTrigger || _this.config.attachToInput) {\r\n\t\t\t\t_this.updateLabeling();\r\n\t\t\t\t_this.$model && _this.$model.trigger('change');\r\n\t\t\t}\r\n\r\n\t\t\t_this.sendNotification();\r\n\t\t});\r\n\r\n\t\tif (this.config.attachToInput) {\r\n\t\t\t// Nothing\r\n\t\t} else {\r\n\t\t\tthis.$input.on('click', function () {\r\n\t\t\t\twindow.setTimeout(function () {\r\n\t\t\t\t\t_this.updateParentIframe();\r\n\t\t\t\t}, 50);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.updateLabeling = function () {\r\n\t\tvar labelMask = this.config.formatLabel;\r\n\t\tvar inputMask = this.config.formatInput;\r\n\r\n\t\tif (moment(this.picker.startDate).isSame(moment(), 'day')) {\r\n\t\t\tif (labelMask.includes('D MMM YYYY')) {\r\n\t\t\t\tlabelMask = labelMask.replace('D MMM YYYY', '[Today,] D MMM YYYY');\r\n\t\t\t} else if (labelMask.includes('D MMM')) {\r\n\t\t\t\tlabelMask = labelMask.replace('D MMM', '[Today]');\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.isEmptyHour) {\r\n\t\t\tlabelMask = labelMask.replace('hh:mm A', '[--:--]').replace('HH:mm', '[--:--]');\r\n\t\t\tinputMask = inputMask.replace('hh:mm A', '[--:--]').replace('HH:mm', '[--:--]');\r\n\r\n\t\t\tif (this.config.hasTextTrigger) {\r\n\t\t\t\tthis.$label.html(this.config.prefixTextTrigger + this.picker.startDate.format(labelMask));\r\n\r\n\t\t\t\tif (this.config.timePicker) {\r\n\t\t\t\t\tthis.$input.val(this.picker.startDate.format(`${this.config.systemDateFormat} [00:00:00]`));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$input.val(this.picker.startDate.format(this.config.systemDateFormat));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.$input.val(this.picker.startDate.format(`${this.config.systemDateFormat} [00:00:00]`));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.config.hasTextTrigger) {\r\n\t\t\t\tthis.$label.html(this.config.prefixTextTrigger + this.picker.startDate.format(labelMask));\r\n\t\t\t\tthis.$input.val(this.picker.startDate.format(inputMask));\r\n\t\t\t} else {\r\n\t\t\t\tif (this.config.attachToInput) {\r\n\t\t\t\t\tif (this.config.singleDatePicker) {\r\n\t\t\t\t\t\tthis.$input.val(this.picker.startDate.format(inputMask));\r\n\t\t\t\t\t\tif (this.config.timePicker) {\r\n\t\t\t\t\t\t\tthis.$model && this.$model.val(this.picker.startDate.format(`${this.config.systemDateFormat} HH:mm:ss`));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.$model && this.$model.val(this.picker.startDate.format(this.config.systemDateFormat));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst startDate = this.picker.startDate.format(inputMask);\r\n\t\t\t\t\t\tconst endDate = this.picker.endDate.format(inputMask);\r\n\r\n\t\t\t\t\t\tthis.$input.val(`${startDate}  Â·  ${endDate}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this.config.singleDatePicker) {\r\n\t\t\t\t\t\tthis.$input.val(this.picker.startDate.format(this.config.formatInput));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet startDate = this.picker.startDate.format(this.config.formatInput);\r\n\t\t\t\t\t\tlet endDate = this.picker.endDate.format(this.config.formatInput);\r\n\r\n\t\t\t\t\t\tthis.$input.val(`${startDate}  Â·  ${endDate}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.handleViewportPosition = function () {\r\n\t\tif (\r\n\t\t\twindow.frameElement\r\n\t\t\t&& (\r\n\t\t\t\t$(window.frameElement.parentElement).hasClass('tooltipster-content')\r\n\t\t\t\t|| $(window.frameElement.parentElement).hasClass('os-internal-ui-dialog-content')\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!this.isInViewport()) {\r\n\r\n\t\t\tvar coords = this.$calendar[0].getBoundingClientRect();\r\n\t\t\tif (this.$calendar.hasClass('drop-up') && this.$calendar[0].getBoundingClientRect().top < 0) {\r\n\t\t\t\tvar point = window.scrollY + coords.bottom + this.$input.height() + 7;\r\n\t\t\t\tthis.$calendar\r\n\t\t\t\t\t.removeClass('drop-up')\r\n\t\t\t\t\t.addClass('drop-down')\r\n\t\t\t\t\t.css('top', point);\r\n\t\t\t}\r\n\t\t\telse if (\r\n\t\t\t\t!this.$calendar.hasClass('drop-up')\r\n\t\t\t\t&& this.$calendar[0].getBoundingClientRect().bottom > (window.innerHeight || document.documentElement.clientHeight)\r\n\t\t\t) {\r\n\t\t\t\tif (!window.frameElement || (coords.height + this.$input.height() + 7) < document.body.offsetHeight) {\r\n\t\t\t\t\tvar point = window.scrollY + coords.top - coords.height - this.$input.height() - 7;\r\n\t\t\t\t\tthis.$calendar.addClass('drop-up').css('top', point);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.isInViewport = function () {\r\n\t\tvar bounding = this.$calendar[0].getBoundingClientRect();\r\n\t\treturn (\r\n\t\t\tbounding.top >= 0 && bounding.bottom <= (window.innerHeight + 5 || document.documentElement.clientHeight + 5)\r\n\t\t);\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.clear = function (sendNotification) {\r\n\t\tthis.picker.setStartDate(moment());\r\n\t\tthis.picker.setEndDate(moment());\r\n\t\tthis.isEmptyHour = false;\r\n\t\tthis.$clear.addClass('disabled');\r\n\t\tif (this.config.hasTextTrigger) {\r\n\t\t\tthis.$label.html('-- -- --');\r\n\t\t} else {\r\n\t\t\tthis.$input.val('');\r\n\t\t}\r\n\t\tif (sendNotification || sendNotification == undefined) {\r\n\t\t\tthis.sendNotification(false);\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.show = function () {\r\n\t\tthis.picker.show();\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.hide = function () {\r\n\t\tthis.picker.hide();\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.cancel = function () {\r\n\t\tthis.picker.clickCancel();\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.sendNotification = function (sendDate) {\r\n\t\tif (this.$widget.hasClass('attachedInput')) {\r\n\t\t\tthis.$input.trigger('change');\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (sendDate || sendDate == undefined) {\r\n\t\t\tif (this.isEmptyHour) {\r\n\t\t\t\tOsNotifyWidget(\r\n\t\t\t\t\tthis.config.dateTimeRangePickerFakeNotifyId,\r\n\t\t\t\t\tthis.picker.startDate.format(`${this.config.systemDateFormat} [00:00:00]`) + '|' + this.isEmptyHour\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tif (this.config.timePicker) {\r\n\t\t\t\t\tOsNotifyWidget(\r\n\t\t\t\t\t\tthis.config.dateTimeRangePickerFakeNotifyId,\r\n\t\t\t\t\t\tthis.picker.startDate.format(`${this.config.systemDateFormat} HH:mm:ss`) + '|' + this.isEmptyHour\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tOsNotifyWidget(\r\n\t\t\t\t\t\tthis.config.dateTimeRangePickerFakeNotifyId,\r\n\t\t\t\t\t\tthis.picker.startDate.format(this.config.systemDateFormat) + '|' + this.isEmptyHour\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tOsNotifyWidget(this.config.dateTimeRangePickerFakeNotifyId, 'null|true');\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.updateParentIframe = function () {\r\n\t\tif (typeof SapphireWidgets.ResizeParentIframe === 'object') {\r\n\t\t\tSapphireWidgets.ResizeParentIframe.resize();\r\n\t\t}\r\n\t\tif ($('.Page.LayoutPopup').length === 1) {\r\n\t\t\tSapphireWidgets.LayoutPopup.redrawDialogWindow();\r\n\t\t}\r\n\t};\r\n\r\n\tSapphireWidgets.DateTimeRangePicker = {\r\n\t\tcreate: create,\r\n\t\tall: function () {\r\n\t\t\treturn allDateTimeRangePickers;\r\n\t\t},\r\n\t};\r\n})(jQuery, window, document, SapphireWidgets);\r\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/datetime-range-picker/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/dropzone/dropzone.js":
/*!******************************************************************!*\
  !*** ./src/components/05-components/v3-pat/dropzone/dropzone.js ***!
  \******************************************************************/
/***/ (function() {

eval("/* Component Dropzone */\r\n(function ($, window, document, SapphireWidgets) {\r\n\tconst create = function (config) {\r\n\t\twindow.Dropzone.autoDiscover = false;\r\n\r\n\t\t$(document).ready(function () {\r\n\t\t\tbindEvents(config);\r\n\r\n\t\t\tconst myDropzone = new window.Dropzone(config.hiddenInputContainer, {\r\n\t\t\t\t...config,\r\n\t\t\t\tinit: function () {\r\n\t\t\t\t\tlet prevFile;\r\n\r\n\t\t\t\t\tconst filesList = config.filesList ? config.filesList.split(',') : [];\r\n\r\n\t\t\t\t\tfor (const item of filesList) {\r\n\t\t\t\t\t\tconst mockFile = { name: item, size: 12345678 };\r\n\r\n\t\t\t\t\t\tthis.emit('addedfile', mockFile);\r\n\t\t\t\t\t\tthis.emit('complete', mockFile);\r\n\t\t\t\t\t\tthis.files.push(mockFile);\r\n\r\n\t\t\t\t\t\t$(`${config.hiddenInputContainer} .dz-filename`).attr('title', item);\r\n\r\n\t\t\t\t\t\tprevFile = mockFile;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (+config.maxFiles === 1 && config.isReplacePrevious) {\r\n\t\t\t\t\t\tthis.on('addedfile', function () {\r\n\t\t\t\t\t\t\tif (prevFile !== undefined) {\r\n\t\t\t\t\t\t\t\tthis.removeFile(prevFile);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst $notifyInput = $(`#${config.notifyInputId}`);\r\n\r\n\t\t\t\t\tthis.on('success', function (file, responseText) {\r\n\t\t\t\t\t\tprevFile = file;\r\n\r\n\t\t\t\t\t\t$(`#${config.notifyInputId} .dz-filename`).attr('title', file.name);\r\n\t\t\t\t\t\t$notifyInput.val('OK:' + responseText);\r\n\t\t\t\t\t\t$notifyInput.trigger('change');\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.on('error', function (file, responseText) {\r\n\t\t\t\t\t\tprevFile = file;\r\n\r\n\t\t\t\t\t\t$notifyInput.val('ER:' + responseText);\r\n\t\t\t\t\t\t$notifyInput.trigger('change');\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tconst bindEvents = function (config) {\r\n\t\t$(`#${config.widgetId} .UploadMessageClass`).on('click', () => {\r\n\t\t\t$(`#${config.widgetId} .dz-clickable`).click();\r\n\t\t});\r\n\t};\r\n\r\n\tSapphireWidgets.Dropzone = { create };\r\n})(jQuery, window, document, SapphireWidgets);\r\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/dropzone/dropzone.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/hour-picker/scripts.js":
/*!********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/hour-picker/scripts.js ***!
  \********************************************************************/
/***/ (function() {

eval("/* Component HourPicker */\r\n(function($, window, SapphireWidgets) {\r\n\tclass HourPicker {\r\n\t\tconstructor(config) {\r\n\t\t\t// Options used by jQuery Timerpicker (External Lib)\r\n\t\t\tthis.options = {\r\n\t\t\t\t...config,\r\n\t\t\t};\r\n\r\n\t\t\tSapphireWidgets.HourPicker.allIntances.push(config.widgetId);\r\n\r\n\t\t\tthis.onComponentInit();\r\n\t\t}\r\n\r\n\t\tisComponentValid() {\r\n\t\t\tlet valid = true;\r\n\t\t\tlet message = `Component HourPicker (${this.options.widgetId}):`;\r\n\t\t\tlet errors = '';\r\n\r\n\t\t\tif (this.$model.length && this.$model.length > 1) {\r\n\t\t\t\terrors = `${errors} - Needs one - and just one - Input element.`;\r\n\t\t\t\tvalid = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.$model.length && this.$component.find('.HourPicker__Placeholder input').length) {\r\n\t\t\t\terrors = `${errors}\\n - The Input element must be of type Text.`;\r\n\t\t\t\tvalid = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (!valid) console.error(`${message} ${errors}`);\r\n\r\n\t\t\treturn valid;\r\n\t\t}\r\n\r\n\t\tsetComponentPosition() {\r\n\t\t\tconst $widget = $('.ui-timepicker-container');\r\n\t\t\tconst labelLeft = this.$label.offset().left;\r\n\t\t\tconst labelWidth = this.$label.width();\r\n\t\t\tconst labelOuterWidth = this.$label.outerWidth();\r\n\t\t\tconst widgetOuterWidth = $widget.outerWidth();\r\n\t\t\tconst widgetMinWidth = +$widget.css('min-width').replace('px', '');\r\n\t\t\tconst isOutsideWindow =\r\n\t\t\t\tlabelLeft + labelOuterWidth > $(window).scrollLeft() + $(window).width() - widgetOuterWidth;\r\n\r\n\t\t\t$widget.css({\r\n\t\t\t\tleft: () => {\r\n\t\t\t\t\tlet value = labelLeft - (widgetMinWidth - labelWidth) / 2;\r\n\r\n\t\t\t\t\tif (isOutsideWindow) value = labelLeft + labelWidth - widgetOuterWidth;\r\n\t\t\t\t\telse if (value < 0) value = labelLeft;\r\n\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsetElementClass(selector, className) {\r\n\t\t\treturn className ? $(selector).addClass(className) : false;\r\n\t\t}\r\n\r\n\t\tdefineTimeFormat() {\r\n\t\t\tlet format = [];\r\n\t\t\tlet amPm = '';\r\n\r\n\t\t\tformat.push(this.options.is24hFormat ? 'HH' : 'hh');\r\n\t\t\tif (this.options.showMinutes) format.push('mm');\r\n\t\t\tif (this.options.showSeconds) format.push('ss');\r\n\t\t\tif (!this.options.is24hFormat) amPm = ' p';\r\n\r\n\t\t\treturn `${format.join(':')}${amPm}`;\r\n\t\t}\r\n\r\n\t\tconvertTime12to24(value) {\r\n\t\t\tconst [time, modifier] = value.split(' ');\r\n\t\t\tlet [hours, minutes = '00', seconds = '00'] = time.split(':');\r\n\r\n\t\t\tif (hours === '12') hours = '00';\r\n\t\t\tif (modifier === 'PM') hours = parseInt(hours, 10) + 12;\r\n\r\n\t\t\treturn `${hours}:${minutes}:${seconds}`;\r\n\t\t}\r\n\r\n\t\tconvertTimeFormatToMask(value = '') {\r\n\t\t\treturn value.replace(/[a-zA-Z]+/g, '--');\r\n\t\t}\r\n\r\n\t\tonChangeEvent(value = '') {\r\n\t\t\tlet model = '01-01-1900 00:00:00'; //i.e. null\r\n\t\t\tlet label = this.convertTimeFormatToMask(this.options.timeFormat);\r\n\r\n\t\t\tif (value && !!value.trim()) {\r\n\t\t\t\t// This condition is correct, model always uses the 24h format\r\n\t\t\t\tmodel = this.options.is24hFormat ? value : this.convertTime12to24(value);\r\n\t\t\t\tlabel = value;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.isNotifyEnabled) OsNotifyWidget(this.options.hourPickerFakeNotifyId, model);\r\n\t\t\tif (this.options.isTextTriggerable) this.$label.text(label);\r\n\r\n\t\t\tthis.$model.val(model);\r\n\t\t\tthis.$model.change();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tonComponentInit() {\r\n\t\t\tthis.$component = $(`#${this.options.widgetId}`);\r\n\t\t\tthis.$model = this.$component.find('.HourPicker__Placeholder input[type=\"text\"]');\r\n\t\t\tthis.$input = this.$component.find('.HourPicker__Displayed .HourPicker__InputValue');\r\n\t\t\tthis.$element = this.$input;\r\n\r\n\t\t\tthis.options.timeFormat = this.defineTimeFormat();\r\n\r\n\t\t\tif (!this.isComponentValid()) return;\r\n\t\t\telse {\r\n\t\t\t\tconst $container = this.$component;\r\n\r\n\t\t\t\tif (this.options.isTextTriggerable) {\r\n\t\t\t\t\t$container.addClass('HourPicker--textTrigger');\r\n\r\n\t\t\t\t\tthis.$label = $container.find('.HourPicker__Displayed .HourPicker__LabelValue');\r\n\t\t\t\t\tthis.$element = this.$label;\r\n\r\n\t\t\t\t\tthis.$label.text(this.convertTimeFormatToMask(this.options.timeFormat));\r\n\r\n\t\t\t\t\tthis.$label.on('click', () => {\r\n\t\t\t\t\t\tthis.$label.timepicker().open();\r\n\r\n\t\t\t\t\t\tthis.setComponentPosition();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.options.isClearable) {\r\n\t\t\t\t\tthis.$buttonClear = $container.find('.HourPicker__Displayed .HourPicker__ButtonClear');\r\n\r\n\t\t\t\t\tthis.$buttonClear.on('click', () => {\r\n\t\t\t\t\t\tthis.$input.val('');\r\n\t\t\t\t\t\tthis.onChangeEvent();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$element.timepicker({\r\n\t\t\t\t\t...this.options,\r\n\t\t\t\t\tchange: time => this.onChangeEvent(time ? $().timepicker.formatTime(this.options.timeFormat, time) : null),\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.setElementClass('.ui-timepicker-container', this.options.currentLocale === 'AR' ? 'rtl' : 'ltr');\r\n\r\n\t\t\t\tthis.$input.prop('readonly', !this.options.isTypeEnabled);\r\n\t\t\t\tthis.$input.prop('placeholder', this.options.timeFormat);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst create = config => {\r\n\t\twindow[config.widgetId] = new HourPicker(config);\r\n\t};\r\n\r\n\tSapphireWidgets.HourPicker = {\r\n\t\tcreate,\r\n\t\tallIntances: [],\r\n\t};\r\n})(jQuery, window, SapphireWidgets);\r\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/hour-picker/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/panel/confirmation-popup.js":
/*!*************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/panel/confirmation-popup.js ***!
  \*************************************************************************/
/***/ (function() {

eval("/* Component ConfirmationPopup */\r\nvar _isInIframe = window.frameElement != undefined || false;\r\nSapphireWidgets.ConfirmationPopup = {\r\n\tisAnyConfirmationOpened: function() {\r\n\t\tif (_isInIframe) {\r\n\t\t\treturn window.top.$('body').hasClass('confirmation-opened') && window.top.$('.confirm-container:visible').length;\r\n\t\t} else {\r\n\t\t\treturn $('body').hasClass('confirmation-opened') && $('.confirm-container:visible').length;\r\n\t\t}\r\n\t},\r\n\r\n\ttoggleConfirm: function(_id, _question, _message, _notifyId, _HasNotifyOnCancel) {\r\n\t\tif (!OsValidatorOnSubmit()) return;\r\n\r\n\t\tif (!this.isAnyConfirmationOpened()) {\r\n\t\t\tvar _body = $('body');\r\n\t\t\tvar _bodyJS = document.body;\r\n\t\t\tif (_isInIframe) {\r\n\t\t\t\t_body = window.top.$('body');\r\n\t\t\t\t_bodyJS = window.top.document.body;\r\n\t\t\t}\r\n\r\n\t\t\t_body.addClass('confirmation-opened');\r\n\r\n\t\t\tvar _confirmId = 'confirm_' + _id;\r\n\r\n\t\t\tvar _container = document.createElement('DIV');\r\n\t\t\t_container.setAttribute('id', _confirmId);\r\n\t\t\t_container.setAttribute('class', 'confirm confirm-wb');\r\n\t\t\t_container.setAttribute('confirm-trigger-elementid', _id);\r\n\r\n\t\t\tvar _background = document.createElement('DIV');\r\n\t\t\t_background.setAttribute('class', 'confirm-background confirm-wb');\r\n\t\t\t_background.setAttribute('id', 'bg_' + _confirmId);\r\n\t\t\t_container.appendChild(_background);\r\n\r\n\t\t\tvar _confirm = document.createElement('DIV');\r\n\t\t\t_confirm.setAttribute('class', 'confirm-container confirm-wb');\r\n\t\t\t_container.appendChild(_confirm);\r\n\r\n\t\t\tvar _confirmTitle = document.createElement('DIV');\r\n\t\t\t_confirmTitle.setAttribute('class', 'confirm-title');\r\n\t\t\tvar _title = document.createTextNode(_question);\r\n\t\t\t_confirmTitle.appendChild(_title);\r\n\t\t\t_confirm.appendChild(_confirmTitle);\r\n\r\n\t\t\tvar _confirmMsg = document.createElement('DIV');\r\n\t\t\t_confirmMsg.setAttribute('class', 'confirm-message');\r\n\r\n\t\t\t_confirmMsg.innerHTML = _message; /* Set HTML to render the message HTML tags, similar to the Escape Content set as No. */\r\n\t\t\t_confirm.appendChild(_confirmMsg);\r\n\r\n\t\t\tvar _confirmActions = document.createElement('DIV');\r\n\t\t\t_confirmActions.setAttribute('class', 'confirm-actions');\r\n\t\t\t_confirm.appendChild(_confirmActions);\r\n\r\n\t\t\tvar _noBtnLnk = document.createElement('A');\r\n\t\t\t_noBtnLnk.setAttribute('class', 'Button Third MultiMarginRight10');\r\n\t\t\t_noBtnLnk.setAttribute('cancel-button', 'cancel-button');\r\n\t\t\t_noBtnLnk.setAttribute('ui', 'ConfirmNo1');\r\n\t\t\tif (_HasNotifyOnCancel == 'True') {\r\n\t\t\t\tif (_isInIframe) {\r\n\t\t\t\t\t_noBtnLnk.setAttribute(\r\n\t\t\t\t\t\t'onclick',\r\n\t\t\t\t\t\t'document.getElementById(\"' +\r\n\t\t\t\t\t\t\t'iframe_' +\r\n\t\t\t\t\t\t\t_id +\r\n\t\t\t\t\t\t\t'\").contentWindow.OsNotifyWidget(\"' +\r\n\t\t\t\t\t\t\t_notifyId +\r\n\t\t\t\t\t\t\t'\",\"CANCEL\"); SapphireWidgets.ConfirmationPopup.closeConfirmPopup(\"' +\r\n\t\t\t\t\t\t\t_confirmId +\r\n\t\t\t\t\t\t\t'\");'\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_noBtnLnk.setAttribute(\r\n\t\t\t\t\t\t'onclick',\r\n\t\t\t\t\t\t'OsNotifyWidget(\"' +\r\n\t\t\t\t\t\t\t_notifyId +\r\n\t\t\t\t\t\t\t'\",\"CANCEL\"); SapphireWidgets.ConfirmationPopup.closeConfirmPopup(\"' +\r\n\t\t\t\t\t\t\t_confirmId +\r\n\t\t\t\t\t\t\t'\");'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (_isInIframe) {\r\n\t\t\t\t\t_noBtnLnk.setAttribute(\r\n\t\t\t\t\t\t'onclick',\r\n\t\t\t\t\t\t'SapphireWidgets.ConfirmationPopup.closeConfirmPopup(\"' + _confirmId + '\");'\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_noBtnLnk.setAttribute(\r\n\t\t\t\t\t\t'onclick',\r\n\t\t\t\t\t\t'SapphireWidgets.ConfirmationPopup.closeConfirmPopup(\"' + _confirmId + '\");'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar _noBtn = document.createTextNode('No');\r\n\t\t\t_noBtnLnk.appendChild(_noBtn);\r\n\t\t\t_confirmActions.appendChild(_noBtnLnk);\r\n\r\n\t\t\tvar _yesBtnLnk = document.createElement('A');\r\n\t\t\t_yesBtnLnk.setAttribute('class', 'Button SetAsValid Is_Default');\r\n\t\t\t_yesBtnLnk.setAttribute('cancel-button', '');\r\n\t\t\t_yesBtnLnk.setAttribute('ui', 'ConfirmYes1');\r\n\r\n\t\t\tif (_isInIframe) {\r\n\t\t\t\t_yesBtnLnk.setAttribute(\r\n\t\t\t\t\t'onclick',\r\n\t\t\t\t\t'document.getElementById(\"' +\r\n\t\t\t\t\t\t'iframe_' +\r\n\t\t\t\t\t\t_id +\r\n\t\t\t\t\t\t'\").contentWindow.OsNotifyWidget(\"' +\r\n\t\t\t\t\t\t_notifyId +\r\n\t\t\t\t\t\t'\",\"OK\"); SapphireWidgets.ConfirmationPopup.closeConfirmPopup(\"' +\r\n\t\t\t\t\t\t_confirmId +\r\n\t\t\t\t\t\t'\");'\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\t_yesBtnLnk.setAttribute(\r\n\t\t\t\t\t'onclick',\r\n\t\t\t\t\t'OsNotifyWidget(\"' +\r\n\t\t\t\t\t\t_notifyId +\r\n\t\t\t\t\t\t'\",\"OK\"); SapphireWidgets.ConfirmationPopup.closeConfirmPopup(\"' +\r\n\t\t\t\t\t\t_confirmId +\r\n\t\t\t\t\t\t'\");'\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tvar _yesBtn = document.createTextNode('Yes');\r\n\t\t\t_yesBtnLnk.appendChild(_yesBtn);\r\n\t\t\t_confirmActions.appendChild(_yesBtnLnk);\r\n\r\n\t\t\t_confirm.appendChild(_confirmActions);\r\n\r\n\t\t\t_container.appendChild(_confirm);\r\n\r\n\t\t\t_bodyJS.appendChild(_container);\r\n\r\n\t\t\tif (_isInIframe) {\r\n\t\t\t\twindow.top.$('#bg_' + _confirmId).fadeIn(140);\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\twindow.top\r\n\t\t\t\t\t\t.$('#' + _confirmId)\r\n\t\t\t\t\t\t.find('.confirm-container')\r\n\t\t\t\t\t\t.slideToggle(150);\r\n\t\t\t\t\twindow.top.$('#' + _confirmId + ' [cancel-button]').focus();\r\n\t\t\t\t}, 100);\r\n\r\n\t\t\t\tSapphireWidgets.RemoteAppointment.setModalMinimized();\r\n\t\t\t} else {\r\n\t\t\t\t$('#bg_' + _confirmId).fadeIn(140);\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t$('#' + _confirmId)\r\n\t\t\t\t\t\t.find('.confirm-container')\r\n\t\t\t\t\t\t.slideToggle(150);\r\n\t\t\t\t\t$('#' + _confirmId + ' [cancel-button]').focus();\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tcloseConfirmPopup: function(_confirmId) {\r\n\t\t$('body').removeClass('confirmation-opened');\r\n\t\t$('body').css('overflow-y', 'scroll');\r\n\t\t$('#bg_' + _confirmId).fadeOut(140);\r\n\r\n\t\tsetTimeout(function() {\r\n\t\t\t$('#' + _confirmId)\r\n\t\t\t\t.find('.confirm-container')\r\n\t\t\t\t.slideUp(150);\r\n\t\t\t$('#' + _confirmId).remove();\r\n\t\t}, 100);\r\n\t},\r\n\r\n\tcreate: function(_id, _question, _message, _notifyId, _HasNotifyOnCancel) {\r\n\t\t$(document).ready(function() {\r\n\t\t\t$('#' + _id)\r\n\t\t\t\t.off('click')\r\n\t\t\t\t.on('click', function() {\r\n\t\t\t\t\tSapphireWidgets.ConfirmationPopup.toggleConfirm(_id, _question, _message, _notifyId, _HasNotifyOnCancel);\r\n\t\t\t\t\tif (_isInIframe) {\r\n\t\t\t\t\t\twindow.frameElement.setAttribute('menu-id', _id);\r\n\t\t\t\t\t\twindow.frameElement.setAttribute('id', 'iframe_' + _id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t});\r\n\t\t});\r\n\t},\r\n};\r\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/panel/confirmation-popup.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/panel/panel-by-id.js":
/*!******************************************************************!*\
  !*** ./src/components/05-components/v3-pat/panel/panel-by-id.js ***!
  \******************************************************************/
/***/ (function() {

eval("/* Component PanelByID */\r\nSapphireWidgets.PanelById = {\r\n\tisAnyPanelOpenedDeprecated: function() {\r\n\t\treturn $('body').hasClass('PanelOpened');\r\n\t},\r\n\r\n\ttoggleButton: function(id) {\r\n\t\tconst $toggleButton = $(`#${id}`).parents('.ToggleButton').length\r\n\t\t\t? $(`#${id}`).parents('.ToggleButton')\r\n\t\t\t: $(`#${id}`);\r\n\r\n\t\t$toggleButton.click();\r\n\t},\r\n\r\n\ttogglePanelById: function(Id) {\r\n\t\tconst $toggleButton = $(`#${Id}`).parents('.ToggleButton');\r\n\t\tconst $panel = $toggleButton.parent().children('.Panel');\r\n\t\tconst $panelContainer = $panel.children('.PanelContainer');\r\n\t\tconst $panelBackground = $panel.children('.PanelBackground');\r\n\r\n\t\tif (!this.isAnyPanelOpenedDeprecated()) {\r\n\t\t\t$('body').addClass('PanelOpened');\r\n\t\t\t$('body').css('overflow-y', 'hidden');\r\n\r\n\t\t\t$panel.show();\r\n\t\t\t$panelContainer.slideDown(200);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (typeof justDragged !== 'undefined') {\r\n\t\t\t\t\tif (justDragged == false) {\r\n\t\t\t\t\t\t$('.PanelByIdNew_PanelContainer')\r\n\t\t\t\t\t\t\t.css('margin-left', panelMarginLeft)\r\n\t\t\t\t\t\t\t.css('left', panelLeft)\r\n\t\t\t\t\t\t\t.addClass(panelArrowClass);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\t$panelBackground.fadeIn(80);\r\n\r\n\t\t\t\t$toggleButton.click();\r\n\t\t\t}, 50);\r\n\t\t} else {\r\n\t\t\t$panelContainer.slideUp(200);\r\n\r\n\t\t\t$panelBackground.fadeOut(80, () => {\r\n\t\t\t\t$toggleButton.click();\r\n\r\n\t\t\t\t$('body').css('overflow-y', 'scroll');\r\n\t\t\t\t$('body').removeClass('PanelOpened');\r\n\r\n\t\t\t\t$panel.hide();\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n};\r\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/panel/panel-by-id.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/sapphire-popup/scripts.js":
/*!***********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/sapphire-popup/scripts.js ***!
  \***********************************************************************/
/***/ (function() {

eval("/* Component SapphirePopup */\r\nvar RichWidgets_Popup_Editor_notifyWidget;\r\n\r\n(function($, window, SapphireWidgets) {\r\n\t// Check if the widget is loaded inside an iFrame\r\n\tlet isInsideIframe = window.frameElement != undefined || false;\r\n\r\n\t// Constants\r\n\tconst POPUP_INITIAL_WIDTH = 300;\r\n\tconst POPUP_INITIAL_HEIGHT = 100;\r\n\tconst POPUP_WINDOW_INDEX = 4010;\r\n\tconst POPUP_CLOSING_TAG = 'closing';\r\n\tconst POPUP_CLOSING_VALUE = 'true';\r\n\r\n\tlet POPUP_NOTIFY_WIDGET;\r\n\tlet POPUP_PARENT_URL;\r\n\r\n\tconst create = config => {\r\n\t\tif (config.ignoreIframe) isInsideIframe = false;\r\n\r\n\t\t$().ready(function($) {\r\n\t\t\tconst _id = config.linkId;\r\n\t\t\tconst linkQuery = `#${config.linkId}`;\r\n\t\t\tlet linkWidget;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tlinkWidget = $(linkQuery).get(0);\r\n\t\t\t} catch (e) {}\r\n\r\n\t\t\tif (typeof linkWidget == 'undefined') {\r\n\t\t\t\t//Case the widget is inexistent or invisible, it will show no errors.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tPOPUP_PARENT_URL = config.parentUrl;\r\n\r\n\t\t\tconst linkResult = getLinkHREF(linkWidget);\r\n\t\t\tconst linkHref = linkResult[0];\r\n\t\t\tconst isAButton = linkResult[1];\r\n\r\n\t\t\tif (typeof linkHref == 'undefined' || linkHref == '' || linkHref == '#' || linkHref.indexOf('javascript:') == 0) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\twindow.OsHandleException(\r\n\t\t\t\t\t\tnew Error('Popup link id must be the id of a Link or Button Widget with Method Navigate.'),\r\n\t\t\t\t\t\toutsystems.osErrorCodes.SystemJavascriptError,\r\n\t\t\t\t\t\t'Popup_Editor'\r\n\t\t\t\t\t);\r\n\t\t\t\t} catch (e) {}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Remove the existing on-click event\r\n\t\t\tif (isAButton) {\r\n\t\t\t\tlinkWidget.setAttribute(\r\n\t\t\t\t\t'onclick',\r\n\t\t\t\t\tlinkWidget\r\n\t\t\t\t\t\t.getAttribute('onclick')\r\n\t\t\t\t\t\t.toString()\r\n\t\t\t\t\t\t.replace('window.location.href=', 'return false;window.location.href=')\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// If there's a confirmation message, store in an attribute the result\r\n\t\t\tif (linkWidget.getAttribute('onclick') != null) {\r\n\t\t\t\tlinkWidget.setAttribute(\r\n\t\t\t\t\t'onclick',\r\n\t\t\t\t\tlinkWidget\r\n\t\t\t\t\t\t.getAttribute('onclick')\r\n\t\t\t\t\t\t.toString()\r\n\t\t\t\t\t\t.replace(\r\n\t\t\t\t\t\t\t'if( ret != true )',\r\n\t\t\t\t\t\t\t\"$('\" + linkQuery + \"').get(0).setAttribute('confirmed', ret); if( ret != true )\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tconst clickHandler = function(event) {\r\n\t\t\t\t// The clickHandler event is registered in osjs and $ for compatibillity reasons, they must not run both for the same click.\r\n\t\t\t\t// Variable is set to false in resize function.\r\n\t\t\t\tif ($.data(event.target, 'os-internal-processing') == true) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$.data(event.target, 'os-internal-processing', true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if the clicked link is disabled\r\n\t\t\t\tif (linkWidget.getAttribute('disabled') != null) {\r\n\t\t\t\t\tvar linkDisabled = linkWidget\r\n\t\t\t\t\t\t.getAttribute('disabled')\r\n\t\t\t\t\t\t.toString()\r\n\t\t\t\t\t\t.toLowerCase();\r\n\r\n\t\t\t\t\tif (linkDisabled == 'disabled' || linkDisabled.indexOf('true') != -1) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (linkWidget.getAttribute('confirmed') == 'false') return false;\r\n\t\t\t\tif (OsIsIE()) osFocusBackend.ClearFocusedElement();\r\n\r\n\t\t\t\tlet popupDiv;\r\n\t\t\t\tlet pleaseWaitDiv;\r\n\r\n\t\t\t\tconst waitText = `<div style=\"margin-top: 36px;\">${config.loadingMessage}</div>`;\r\n\t\t\t\tconst imgHTML = '<div class=\"lds-ring\"><div></div></div>';\r\n\t\t\t\tconst loadingElement = `<div class=\"LayoutPopup-loading\">${imgHTML} ${waitText}</div>`;\r\n\t\t\t\tconst iFrameElement = `<iframe id=\"iframe_${_id}\" width=\"100%\" scrolling=\"no\" height=\"100%\" frameborder=\"0\" src=\"javascript:void(0);\"/>`;\r\n\r\n\t\t\t\tif (isInsideIframe) {\r\n\t\t\t\t\tlet _div = document.createElement('DIV');\r\n\t\t\t\t\t_div.setAttribute('style', 'text-align: center; display: none;');\r\n\t\t\t\t\t_div.setAttribute('id', 'window_' + _id);\r\n\t\t\t\t\twindow.top.document.body.appendChild(_div);\r\n\r\n\t\t\t\t\tpopupDiv = window.top.$('#window_' + _id);\r\n\t\t\t\t\tpopupDiv.append(iFrameElement);\r\n\r\n\t\t\t\t\tpleaseWaitDiv = popupDiv.prepend(loadingElement);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpopupDiv = $(\"<div style='text-align: center; display: none;'></div>\").appendTo('body');\r\n\t\t\t\t\tpopupDiv.append(iFrameElement);\r\n\r\n\t\t\t\t\tpleaseWaitDiv = popupDiv.prepend(loadingElement);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst loadTargetPage = function() {\r\n\t\t\t\t\tif (isInsideIframe) {\r\n\t\t\t\t\t\twindow.top.POPUP_NOTIFY_WIDGET = config.notifyId;\r\n\t\t\t\t\t\t// Create a reference to the iframe object on the document parent\r\n\t\t\t\t\t\twindow.top._iframePopup = window.frameElement.contentWindow;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\twindow.top._iframePopup = window;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tPOPUP_NOTIFY_WIDGET = config.notifyId;\r\n\t\t\t\t\tRichWidgets_Popup_Editor_notifyWidget = config.notifyId;\r\n\t\t\t\t\twindow.top._iframePopup.RichWidgets_Popup_Editor_notifyWidget = config.notifyId;\r\n\r\n\t\t\t\t\t// Load target page\r\n\t\t\t\t\tconst ohref = getLinkHREF(linkWidget)[0];\r\n\t\t\t\t\tconst rhref = ohref.replace(/(\\?|&)_=.*?(&|$)/, '$1_=' + +new Date().now + '$2');\r\n\t\t\t\t\tconst xhref = rhref + (rhref == ohref ? (rhref.indexOf('?') >= 0 ? '&' : '?') + '_=' + +new Date() : '');\r\n\r\n\t\t\t\t\tpopupDiv.find('iframe').attr('src', xhref);\r\n\r\n\t\t\t\t\t(function(popupDiv) {\r\n\t\t\t\t\t\tpopupDiv.find('iframe').load(function() {\r\n\t\t\t\t\t\t\t// After loading try to resize\r\n\t\t\t\t\t\t\tresize(popupDiv, _id, config.setWidth, config.setHeight, true, event);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})(popupDiv);\r\n\r\n\t\t\t\t\tpopupDiv = null;\r\n\t\t\t\t\tpleaseWaitDiv = null;\r\n\t\t\t\t};\r\n\r\n\t\t\t\topenPopup(popupDiv, pleaseWaitDiv, loadTargetPage, event, config);\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\r\n\t\t\t$(linkQuery).click(clickHandler);\r\n\r\n\t\t\tSapphireWidgets.SapphirePopup.popupWidth = config.setWidth || POPUP_INITIAL_WIDTH;\r\n\t\t});\r\n\t};\r\n\r\n\tconst resize = (divToPopup, _id, setWidth, setHeight, recenter, event) => {\r\n\t\t// Code to support old resize method Popup_Window_resize(setWidth, setHeight, recenter)\r\n\t\tif (typeof recenter == 'undefined') {\r\n\t\t\trecenter = setHeight;\r\n\t\t\tsetHeight = setWidth;\r\n\t\t\tsetWidth = divToPopup;\r\n\r\n\t\t\tif (isInsideIframe) {\r\n\t\t\t\tdivToPopup = window.top.$('.os-internal-ui-dialog-content');\r\n\t\t\t} else {\r\n\t\t\t\tdivToPopup = $('.os-internal-ui-dialog-content');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Resize must bail out immediately if the popup is marked as closing, and not start the animation.\r\n\t\tif ($.data(divToPopup.get(0), POPUP_CLOSING_TAG) == POPUP_CLOSING_VALUE) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet documentServer;\r\n\t\tlet frameObj = divToPopup.find('iframe')[0];\r\n\r\n\t\tif (typeof frameObj == 'undefined') {\r\n\t\t\tframeObj = window.top.$('#iframe_' + _id)[0];\r\n\t\t}\r\n\r\n\t\tif (isInsideIframe) {\r\n\t\t\tdocumentServer = window.top.document.location.href.replace(/(https?:\\/\\/[^\\/]*).*/, '$1');\r\n\t\t} else {\r\n\t\t\tdocumentServer = document.location.href.replace(/(https?:\\/\\/[^\\/]*).*/, '$1');\r\n\t\t}\r\n\r\n\t\tif (typeof frameObj != 'undefined') {\r\n\t\t\tconst frameServer = frameObj.src.replace(/(https?:\\/\\/[^\\/]*).*/, '$1');\r\n\t\t\tconst sameOrigin = frameServer.toLowerCase() == documentServer.toLowerCase() || frameServer.indexOf('http') != 0;\r\n\r\n\t\t\tif (!sameOrigin && (setWidth == -1 || setHeight == -1)) {\r\n\t\t\t\tthrow new Error('A Popup with a screen from a different server (or https) needs explicict width, height set.');\r\n\t\t\t}\r\n\r\n\t\t\tif (sameOrigin) {\r\n\t\t\t\tif (frameObj.contentDocument !== null || frameObj.contentWindow !== null) {\r\n\t\t\t\t\tvar innerDoc = frameObj.contentDocument ? frameObj.contentDocument : frameObj.contentWindow.document;\r\n\t\t\t\t\tif (innerDoc.documentElement.scrollHeight == 0)\r\n\t\t\t\t\t\t// Strangely this event is also triggered on close\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet oldHeight;\r\n\t\t\tif (isInsideIframe) {\r\n\t\t\t\toldHeight = window.top\r\n\t\t\t\t\t.$(divToPopup)\r\n\t\t\t\t\t.parents('.os-internal-Popup')\r\n\t\t\t\t\t.outerHeight();\r\n\t\t\t} else {\r\n\t\t\t\toldHeight = $(divToPopup)\r\n\t\t\t\t\t.parents('.os-internal-Popup')\r\n\t\t\t\t\t.outerHeight();\r\n\t\t\t}\r\n\r\n\t\t\tlet width = setWidth == -1 ? $(innerDoc).width() : setWidth;\r\n\t\t\tlet height = setHeight == -1 ? $(innerDoc).height() : setHeight;\r\n\r\n\t\t\tvar titleHeight;\r\n\t\t\tif (isInsideIframe) {\r\n\t\t\t\ttitleHeight = window.top.$('.os-internal-ui-dialog-titlebar').height();\r\n\t\t\t} else {\r\n\t\t\t\ttitleHeight = $('.os-internal-ui-dialog-titlebar').height();\r\n\t\t\t}\r\n\r\n\t\t\t// Verify if the parent window width is less than the pop-up window, if so set the responsive class on the iframe body (for responsive themes)\r\n\t\t\tif (window.innerWidth < width) {\r\n\t\t\t\t// only set the class if the origin is the same\r\n\t\t\t\tif (sameOrigin) {\r\n\t\t\t\t\t$(innerDoc)\r\n\t\t\t\t\t\t.find('body')\r\n\t\t\t\t\t\t.addClass('Responsive');\r\n\t\t\t\t\twidth = window.innerWidth - 20; // 10px \"padding\" effect, to keep the popup look and feel on top of content\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Fix issues with scrollbars\r\n\t\t\tif (setHeight == -1) {\r\n\t\t\t\t// IE7 needs a little more space to remove the scrollbars\r\n\t\t\t\tif ($.browser.msie) height = height + 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (isInsideIframe) {\r\n\t\t\t\twindow.top.$(divToPopup).height(height);\r\n\t\t\t} else {\r\n\t\t\t\t$(divToPopup).height(height);\r\n\t\t\t}\r\n\r\n\t\t\t//Hide ECT\r\n\t\t\tif (isInsideIframe) {\r\n\t\t\t\twindow.top\r\n\t\t\t\t\t.$(innerDoc)\r\n\t\t\t\t\t.find('.ECT_FeedbackContainer')\r\n\t\t\t\t\t.hide();\r\n\t\t\t\tvar divPopupOuterWindow = window.top.$(divToPopup).parents('.os-internal-Popup');\r\n\t\t\t} else {\r\n\t\t\t\t$(innerDoc)\r\n\t\t\t\t\t.find('.ECT_FeedbackContainer')\r\n\t\t\t\t\t.hide();\r\n\t\t\t\tvar divPopupOuterWindow = $(divToPopup).parents('.os-internal-Popup');\r\n\t\t\t}\r\n\r\n\t\t\tvar animateFinal = {};\r\n\r\n\t\t\tif (setHeight == -1) {\r\n\t\t\t\tvar oldTop = parseInt(divPopupOuterWindow.css('top'));\r\n\t\t\t\tif (recenter) animateFinal.top = Math.max(20, oldTop + (oldHeight - (height + titleHeight)) / 2);\r\n\t\t\t\tanimateFinal.height = height + titleHeight;\r\n\t\t\t}\r\n\r\n\t\t\tif (setWidth == -1) {\r\n\t\t\t\tvar oldLeft = parseInt(divPopupOuterWindow.css('left'));\r\n\t\t\t\tif (recenter) animateFinal.left = oldLeft + (divPopupOuterWindow.width() - width) / 2;\r\n\t\t\t\tanimateFinal.width = width;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tdivPopupOuterWindow.width() == animateFinal.width &&\r\n\t\t\t\tdivPopupOuterWindow.height() == animateFinal.height - ($.browser.msie ? 1 : 0)\r\n\t\t\t) {\r\n\t\t\t\t$('.os-internal-ui-dialog-content>.LayoutPopup-loading').hide();\r\n\t\t\t\t$(divToPopup).height(height - ($.browser.msie ? 1 : 0)); // restore size\r\n\t\t\t\treturn true; // nothing to do...\r\n\t\t\t}\r\n\r\n\t\t\t// hide content in first resize - readjustments will not flickr\r\n\t\t\tif (divPopupOuterWindow.width() == POPUP_INITIAL_WIDTH && divPopupOuterWindow.height() == POPUP_INITIAL_HEIGHT) {\r\n\t\t\t\t$(frameObj).height(0);\r\n\t\t\t}\r\n\r\n\t\t\tvar onAnimationComplete = function() {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tif (isInsideIframe) {\r\n\t\t\t\t\t\twindow.top.$('.os-internal-ui-dialog-titlebar-close-no-title').css('display', 'block');\r\n\t\t\t\t\t\twindow.top\r\n\t\t\t\t\t\t\t.$(divToPopup)\r\n\t\t\t\t\t\t\t.find('iframe')\r\n\t\t\t\t\t\t\t.height('100%')\r\n\t\t\t\t\t\t\t.width(animateFinal.width);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$('.os-internal-ui-dialog-titlebar-close-no-title').css('display', 'block');\r\n\t\t\t\t\t\t$(divToPopup)\r\n\t\t\t\t\t\t\t.find('iframe')\r\n\t\t\t\t\t\t\t.height('100%')\r\n\t\t\t\t\t\t\t.width(animateFinal.width);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 13);\r\n\t\t\t};\r\n\r\n\t\t\tvar divPleaseWait;\r\n\t\t\tif (isInsideIframe) {\r\n\t\t\t\tdivPleaseWait = window.top.$('.os-internal-ui-dialog-content>.LayoutPopup-loading');\r\n\t\t\t} else {\r\n\t\t\t\tdivPleaseWait = $('.os-internal-ui-dialog-content>.LayoutPopup-loading');\r\n\t\t\t}\r\n\r\n\t\t\tdivPleaseWait.hide();\r\n\r\n\t\t\tif (setHeight == -1 || setWidth == -1) {\r\n\t\t\t\tdivPopupOuterWindow.animate(animateFinal, {\r\n\t\t\t\t\tduration: 200,\r\n\t\t\t\t\tcomplete: onAnimationComplete,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tonAnimationComplete();\r\n\t\t\t}\r\n\t\t\tinnerDoc = null;\r\n\t\t\tdivPopupOuterWindow = null;\r\n\t\t\tif (isInsideIframe) {\r\n\t\t\t\twindow.top.$.data(event.target, 'os-internal-processing', false);\r\n\t\t\t} else {\r\n\t\t\t\t$.data(event.target, 'os-internal-processing', false);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t};\r\n\r\n\tconst close = () => {\r\n\t\tlet popupToClose;\r\n\t\tlet popupContainer;\r\n\r\n\t\tif (isInsideIframe) {\r\n\t\t\tpopupToClose = window.top.$('.os-internal-ui-dialog-content');\r\n\t\t\tpopupContainer = window.top.$('.SapphirePopup');\r\n\t\t} else {\r\n\t\t\tpopupToClose = $('.os-internal-ui-dialog-content');\r\n\t\t\tpopupContainer = $('.SapphirePopup');\r\n\t\t}\r\n\r\n\t\tpopupToClose.data(POPUP_CLOSING_TAG, POPUP_CLOSING_VALUE);\r\n\r\n\t\t//setTimeout(function() {\r\n\t\tif (popupToClose.length) popupToClose.dialog('close');\r\n\r\n\t\tpopupToClose.remove();\r\n\t\tpopupContainer.remove();\r\n\t\t//}, 0);\r\n\t};\r\n\r\n\tconst getLinkHREF = widget => {\r\n\t\tlet linkHref;\r\n\t\tlet isAButton = false;\r\n\r\n\t\ttry {\r\n\t\t\t//Checks if the id is from a link or not\r\n\t\t\tlinkHref = $(widget).attr('href');\r\n\r\n\t\t\t//Tests for visibility/existence\r\n\t\t\tif (typeof linkHref == 'undefined') {\r\n\t\t\t\tconst onClick = widget.getAttribute('onclick');\r\n\r\n\t\t\t\tif (typeof onClick != 'undefined') {\r\n\t\t\t\t\tisAButton = true;\r\n\r\n\t\t\t\t\tif (onClick != null) {\r\n\t\t\t\t\t\tlet hrefMatch;\r\n\r\n\t\t\t\t\t\tif ((hrefMatch = onClick.toString().match(/href='([^']*)'/)) != null) {\r\n\t\t\t\t\t\t\tlinkHref = hrefMatch[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (e) {}\r\n\r\n\t\treturn [linkHref, isAButton];\r\n\t};\r\n\r\n\tconst openPopup = (divToPopup, divPleaseWait, loadTargetPage, event, config) => {\r\n\t\t// Destroy any previous dialog\r\n\t\tclose(null);\r\n\r\n\t\tif (isInsideIframe) {\r\n\t\t\tconst $jParent = window.top.$;\r\n\t\t\t$jParent('.os-internal-Popup').remove();\r\n\t\t}\r\n\r\n\t\t// If any close is pending, schedule to execute itself asynchronously exit\r\n\t\t// If no close is pending, continue with open operation\r\n\t\tlet closingPopups;\r\n\r\n\t\tif (isInsideIframe) closingPopups = window.top.$('.os-internal-ui-dialog-content');\r\n\t\telse closingPopups = $('.os-internal-ui-dialog-content');\r\n\r\n\t\tfor (var i = 0; i < closingPopups.length; i++) {\r\n\t\t\tif ($.data(closingPopups.get(i), POPUP_CLOSING_TAG) == POPUP_CLOSING_VALUE) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\topenPopup(divToPopup, divPleaseWait, loadTargetPage, event, config);\r\n\t\t\t\t}, 13);\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet _dialog;\r\n\r\n\t\tif (isInsideIframe) {\r\n\t\t\tconst popupContainer = document.createElement('DIV');\r\n\t\t\tpopupContainer.setAttribute('class', 'SapphirePopup');\r\n\r\n\t\t\twindow.top.document.body.appendChild(popupContainer);\r\n\r\n\t\t\t_dialog = window.top.$(divToPopup);\r\n\t\t} else {\r\n\t\t\t$('<div class=\"SapphirePopup\"></div>').appendTo('body');\r\n\r\n\t\t\t_dialog = $(divToPopup);\r\n\t\t}\r\n\r\n\t\t$(divPleaseWait).show();\r\n\r\n\t\tif ($('.ISidebar').length) window.parent.SapphireWidgets.LayoutBase.openSidebarIframe(0);\r\n\r\n\t\t_dialog.show().dialog({\r\n\t\t\tappendTo: '.SapphirePopup',\r\n\t\t\tdialogClass: 'os-internal-Popup',\r\n\t\t\tresizable: false,\r\n\t\t\tautoResize: false,\r\n\t\t\tcloseOnEscape: !config.hideCloseButton,\r\n\t\t\tbgiframe: true,\r\n\t\t\tdraggable: false,\r\n\t\t\tautoOpen: true,\r\n\t\t\ttitle: config.setTitle,\r\n\t\t\tmodal: !(config.useModal === false),\r\n\t\t\theight: config.setHeight == -1 ? POPUP_INITIAL_HEIGHT : config.setHeight,\r\n\t\t\tposition: 'center',\r\n\t\t\twidth: config.setWidth == -1 ? POPUP_INITIAL_WIDTH : config.setWidth,\r\n\t\t\tzIndex: POPUP_WINDOW_INDEX,\r\n\t\t\tclose: function() {\r\n\t\t\t\t// If the popup is closed before it is resized (ESC) we need to set the processing event to false.\r\n\t\t\t\t$.data(event.target, 'os-internal-processing', false);\r\n\r\n\t\t\t\t_dialog.find('iframe').unbind('load');\r\n\t\t\t\t_dialog.find('iframe').attr('src', 'about:blank');\r\n\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t_dialog.find('iframe').empty();\r\n\t\t\t\t\t_dialog.empty();\r\n\t\t\t\t}, 13);\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t_dialog.find('iframe').height(0);\r\n\t\t_dialog.parents('.os-internal-ui-dialog').dropShadow();\r\n\r\n\t\tif (config.CssClasses !== ' ') {\r\n\t\t\tif (isInsideIframe) window.top.$('.os-internal-ui-dialog').addClass(config.CssClasses);\r\n\t\t\telse $('.os-internal-ui-dialog').addClass(config.CssClasses);\r\n\t\t}\r\n\r\n\t\tloadTargetPage();\r\n\t};\r\n\r\n\tSapphireWidgets.SapphirePopup = { create, close, resize };\r\n})(jQuery, window, SapphireWidgets);\r\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/sapphire-popup/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/segmented-control/scripts.js":
/*!**************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/segmented-control/scripts.js ***!
  \**************************************************************************/
/***/ (function() {

eval("/* Component SegmentedControl */\r\n(function($, window, document, SapphireWidgets) {\r\n\tconst create = function(config) {\r\n    $(document).ready(function() {\r\n      const $inputSegmented = $(`#${config.widgetId}`).find('.SegmentedControl');\r\n      const $labels = $(`#${config.widgetId}`).find('.SegmentedControl_Label');\r\n\r\n      if($inputSegmented){\r\n        if(config.hasError == true) {\r\n          $inputSegmented.addClass('Invalid');\r\n          Array.from($labels).forEach(label => {$(label).addClass('ColorRedText')});\r\n        }\r\n        else {\r\n          $inputSegmented.removeClass('Invalid');\r\n          Array.from($labels).forEach(label => {$(label).removeClass('ColorRedText')})\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\nSapphireWidgets.SegmentedControl = {\r\n  create,\r\n};\r\n})(jQuery, window, document, SapphireWidgets);\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/segmented-control/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/select-system/scripts.js":
/*!**********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/select-system/scripts.js ***!
  \**********************************************************************/
/***/ (function() {

eval("/* Component SelectSystem */\r\nSapphireWidgets.SelectSystem = (config) => {\r\n\t$(function () {\r\n\t\tvar Select2Options = {};\r\n\t\tvar $WidgetIdentifier;\r\n\r\n\t\tif (config.WidgetId === '' && config.Class != '') {\r\n\t\t\t$WidgetIdentifier = $('.' + config.Class);\r\n\t\t} else {\r\n\t\t\t$WidgetIdentifier = $('#' + config.WidgetId);\r\n\t\t}\r\n\r\n\t\tif (config.locale === 'AR' || config.locale === 'FA') {\r\n\t\t\tSelect2Options.dir = 'rtl';\r\n\t\t}\r\n\t\tSelect2Options.theme = 'default SelectSystem';\r\n\t\tSelect2Options.width = $WidgetIdentifier.hasClass('OSFillParent') ? '100%' : 'resolve'; // DE72304\r\n\r\n\t\t/*  \r\n\t\t\t\t\tChange select2 search display \r\n\t\t\t\t\t\t\t\t\t-Multiple Select2 search UI like Single Select2\r\n\t\t\t*/\r\n\t\t$.fn.select2.amd.define(\r\n\t\t\t'SearchLikeSingle',\r\n\t\t\t[\r\n\t\t\t\t'select2/utils',\r\n\t\t\t\t'select2/dropdown',\r\n\t\t\t\t'select2/dropdown/attachBody',\r\n\t\t\t\t'select2/dropdown/attachContainer',\r\n\t\t\t\t'select2/dropdown/search',\r\n\t\t\t\t'select2/dropdown/minimumResultsForSearch',\r\n\t\t\t],\r\n\t\t\tfunction (Utils, Dropdown, AttachBody, AttachContainer, Search, minimumResultsForSearch) {\r\n\t\t\t\tlet dropdownSearch = Utils.Decorate(Dropdown, Search);\r\n\t\t\t\tdropdownSearch.prototype.render = function () {\r\n\t\t\t\t\tvar $rendered = Dropdown.prototype.render.call(this);\r\n\t\t\t\t\t// Add ability for a placeholder in the search box\r\n\t\t\t\t\tlet placeholder = this.options.get('placeholderForSearch') || '';\r\n\t\t\t\t\tvar $search = $(\r\n\t\t\t\t\t\t'<span class=\"select2-search select2-search--dropdown\">' +\r\n\t\t\t\t\t\t\t'<input class=\"select2-search__field\" placeholder=\"' +\r\n\t\t\t\t\t\t\tplaceholder +\r\n\t\t\t\t\t\t\t'\" type=\"search\"' +\r\n\t\t\t\t\t\t\t' tabindex=\"-1\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\"' +\r\n\t\t\t\t\t\t\t' spellcheck=\"false\" role=\"textbox\" />' +\r\n\t\t\t\t\t\t\t'</span>'\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tthis.$searchContainer = $search;\r\n\t\t\t\t\tthis.$search = $search.find('input');\r\n\t\t\t\t\t$search.addClass('MultipleSelect');\r\n\r\n\t\t\t\t\t$rendered.prepend($search);\r\n\t\t\t\t\t$search.parent().addClass('MultipleSelect');\r\n\t\t\t\t\treturn $rendered;\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Decorate the dropdown+search with the containers\r\n\t\t\t\tlet adapter = Utils.Decorate(dropdownSearch, AttachContainer);\r\n\t\t\t\tadapter = Utils.Decorate(adapter, AttachBody);\r\n\r\n\t\t\t\treturn adapter;\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// Other possible values are inputTooLong, inputTooShort and maximumSelected (you can find in Select2 sources).\r\n\t\tSelect2Options.language = {\r\n\t\t\terrorLoading: function () {\r\n\t\t\t\treturn config.texts.errorLoading ?? 'Results could not be loaded.';\r\n\t\t\t},\r\n\t\t\tloadingMore: function () {\r\n\t\t\t\treturn config.texts.loadingMore ?? 'Loading more resultsâ¦';\r\n\t\t\t},\r\n\t\t\tnoResults: function () {\r\n\t\t\t\treturn config.texts.noResults ?? 'No results found.';\r\n\t\t\t},\r\n\t\t\tsearching: function () {\r\n\t\t\t\treturn config.texts.searching ?? 'Searchingâ¦';\r\n\t\t\t},\r\n\t\t\tremoveAllItems: function () {\r\n\t\t\t\treturn config.texts.removeAllItems ?? 'Remove all items';\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tif (config.InputType != '') {\r\n\t\t\tSelect2Options.dropdownCssClass = config.InputType;\r\n\t\t}\r\n\r\n\t\tif (config.allowClear === 'True') {\r\n\t\t\tSelect2Options.allowClear = true;\r\n\t\t}\r\n\r\n\t\tif (config.MaximumLength != '') {\r\n\t\t\tSelect2Options.maximumInputLength = config.MaximumLength;\r\n\t\t}\r\n\r\n\t\tif (config.texts.prompt != '') {\r\n\t\t\tSelect2Options.placeholder = config.texts.prompt;\r\n\t\t}\r\n\r\n\t\tif (config.SelectType === 'Ajax') {\r\n\t\t\tSelect2Options.allowClear = false;\r\n\r\n\t\t\tSelect2Options.templateSelection = function (repo) {\r\n\t\t\t\tif (!repo.element) {\r\n\t\t\t\t\treturn config.texts.prompt;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn repo.full_name || repo.text;\r\n\t\t\t};\r\n\r\n\t\t\tSelect2Options.templateResult = function (repo) {\r\n\t\t\t\tif (repo.loading) {\r\n\t\t\t\t\treturn repo.text;\r\n\t\t\t\t}\r\n\t\t\t\tvar markup = '<div class=\"\"Clearfix\"\">' + '<div class=\"\"ThemeGrid_Width12\"\">' + repo.text + '</div>';\r\n\t\t\t\tif (repo.description) {\r\n\t\t\t\t\tmarkup += '<div class=\"\"OSAutoMarginTop\"\">' + repo.description + '</div>';\r\n\t\t\t\t}\r\n\t\t\t\tmarkup += '</div>';\r\n\t\t\t\treturn markup;\r\n\t\t\t};\r\n\r\n\t\t\tSelect2Options.ajax = {\r\n\t\t\t\turl: config.AjaxURL,\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\tdelay: config.AjaxDelay,\r\n\t\t\t\theaders: { AuthInternal: config.Header_Value },\r\n\t\t\t\tdata: function (params) {\r\n\t\t\t\t\tvar Select2AjaxOpt = {};\r\n\t\t\t\t\tvar SplitParameter = config.SearchExtraParam1.split(',');\r\n\t\t\t\t\tSelect2AjaxOpt.SearchParameter = params.term;\r\n\t\t\t\t\tSelect2AjaxOpt.Page = params.page || 1;\r\n\t\t\t\t\tSelect2AjaxOpt.PageAmount = config.PageAmount;\r\n\r\n\t\t\t\t\tSplitParameter.forEach(function (el) {\r\n\t\t\t\t\t\tvar splitText = el.split(':');\r\n\t\t\t\t\t\tSelect2AjaxOpt[splitText[0]] = splitText[1];\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\treturn Select2AjaxOpt;\r\n\t\t\t\t},\r\n\t\t\t\tprocessResults: function (data, params) {\r\n\t\t\t\t\tparams.page = params.page || 1;\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tresults: data.items,\r\n\t\t\t\t\t\tpagination: {\r\n\t\t\t\t\t\t\tmore: params.page * config.PaginationSize < data.total_count,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\tcache: true,\r\n\t\t\t};\r\n\r\n\t\t\tSelect2Options.minimumInputLength = config.MinimumInputLenght;\r\n\r\n\t\t\tSelect2Options.escapeMarkup = function (markup) {\r\n\t\t\t\treturn markup;\r\n\t\t\t};\r\n\r\n\t\t\tif (config.isMultiple) {\r\n\t\t\t\tSelect2Options.multiple = true;\r\n\t\t\t\tSelect2Options.containerCssClass = 'Select2Ajax Multiple';\r\n\t\t\t\tSelect2Options.dropdownCssClass = 'Select2Ajax Multiple';\r\n\t\t\t} else {\r\n\t\t\t\tSelect2Options.multiple = false;\r\n\t\t\t\tSelect2Options.containerCssClass = 'Select2Ajax';\r\n\t\t\t\tSelect2Options.dropdownCssClass = 'Select2Ajax';\r\n\t\t\t}\r\n\r\n\t\t\tif (config.SelectedValue !== '') {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst data = JSON.parse(config.SelectedValue);\r\n\t\t\t\t\tconst option = new Option(data.Value, data.Id, true, true);\r\n\r\n\t\t\t\t\t$WidgetIdentifier.append(option).trigger('change');\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error(`Component SelectSystem (${config.WidgetId}): SelectedValue must be a valid JSON!`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tSelect2Options.minimumResultsForSearch = 0;\r\n\t\t\tSelect2Options.tags = config.HasTags;\r\n\t\t\tSelect2Options.closeOnselect = true;\r\n\t\t}\r\n\r\n\t\tif (config.SelectType === 'Checkbox') {\r\n\t\t\tvar isAllSelected = false;\r\n\t\t\tif ($WidgetIdentifier[0].options.length === $WidgetIdentifier[0].selectedOptions.length) {\r\n\t\t\t\tisAllSelected = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (config.WidgetId != '') {\r\n\t\t\t\toption = new Option(config.texts.selectAll, 'All', true, isAllSelected);\r\n\t\t\t\t$WidgetIdentifier.prepend(option);\r\n\t\t\t\t$WidgetIdentifier.find('option:first-child').addClass('SelectedAll');\r\n\t\t\t}\r\n\t\t\tSelect2Options.multiple = true;\r\n\t\t\tSelect2Options.closeOnSelect = false;\r\n\t\t\tSelect2Options.allowHtml = false;\r\n\t\t\tSelect2Options.tags = false;\r\n\r\n\t\t\tif (config.HasSearch === 'True') {\r\n\t\t\t\tSelect2Options.dropdownAdapter = $.fn.select2.amd.require('SearchLikeSingle');\r\n\t\t\t} else {\r\n\t\t\t\tSelect2Options.minimumResultsForSearch = -1;\r\n\t\t\t}\r\n\r\n\t\t\tSelect2Options.containerCssClass = 'MultipleSelect';\r\n\t\t\tSelect2Options.dropdownCssClass = 'MultipleSelect';\r\n\t\t\tSelect2Options.templateSelection = function (result) {\r\n\t\t\t\tvar selectedOptionsList = $WidgetIdentifier.find('option:selected:not(\".SelectedAll\")');\r\n\t\t\t\tvar selectedOptions = selectedOptionsList.length;\r\n\t\t\t\tvar totalOptions = $WidgetIdentifier.find('option:not(\".SelectedAll\")').length;\r\n\r\n\t\t\t\tif (selectedOptions === 0) {\r\n\t\t\t\t\treturn config.texts.prompt;\r\n\t\t\t\t\t//return 'Select an option';\r\n\t\t\t\t} else if (selectedOptions < 4) {\r\n\t\t\t\t\tvar activeValues = '';\r\n\t\t\t\t\tselectedOptionsList.each(function () {\r\n\t\t\t\t\t\tactiveValues = activeValues + ' ' + $(this)[0].innerText;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tactiveValues = activeValues.replace(/,\\s*$/, '');\r\n\t\t\t\t\treturn activeValues;\r\n\t\t\t\t} else if (selectedOptions === totalOptions) {\r\n\t\t\t\t\treturn config.texts.allSelected;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn config.texts.partialSelection\r\n\t\t\t\t\t\t.replace('{SelectedOptions}', selectedOptions)\r\n\t\t\t\t\t\t.replace('{TotalOptions}', totalOptions);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (config.SelectType === 'HtmlOptions') {\r\n\t\t\tvar dataHtmlOption = [];\r\n\t\t\t$WidgetIdentifier.find('option').each(function (key, value) {\r\n\t\t\t\tvar optionObject = {\r\n\t\t\t\t\tid: $(this).val(),\r\n\t\t\t\t\ttext: $(this).text(),\r\n\t\t\t\t\thtml: $(this).text(),\r\n\t\t\t\t};\r\n\t\t\t\tdataHtmlOption.push(optionObject);\r\n\t\t\t});\r\n\r\n\t\t\tSelect2Options.containerCssClass = 'customSelect';\r\n\t\t\tSelect2Options.dropdownCssClass = 'dropdownCustom';\r\n\t\t\tSelect2Options.data = dataHtmlOption;\r\n\t\t\tSelect2Options.escapeMarkup = function (markup) {\r\n\t\t\t\treturn markup;\r\n\t\t\t};\r\n\r\n\t\t\tif (config.SelectedValue != '') {\r\n\t\t\t\t$WidgetIdentifier.val(config.SelectedValue).trigger('change');\r\n\t\t\t} else {\r\n\t\t\t\t$WidgetIdentifier.val('').trigger('change');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (config.SelectType === 'TagCustom') {\r\n\t\t\tSelect2Options.tags = true;\r\n\t\t\tSelect2Options.containerCssClass = 'tagCustom';\r\n\t\t\tSelect2Options.dropdownCssClass = 'tagCustom';\r\n\t\t\t// According to documentation, this has been replaced with createTag, but this signature looks like for insertTag.\r\n\t\t\t// No sure how this is supposed to be. See https://select2.org/upgrading/migrating-from-35#renamed-createsearchchoice.\r\n\t\t\tSelect2Options.createSearchChoice = function (term, data) {\r\n\t\t\t\tif (\r\n\t\t\t\t\t$(data).filter(function () {\r\n\t\t\t\t\t\treturn this.text.localeCompare(term) === 0;\r\n\t\t\t\t\t}).length === 0\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: term,\r\n\t\t\t\t\t\ttext: term,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// Set up ResizeObserver to track height changes\r\n\t\t\tconst updateLineTimelineTitlePosition = () => {\r\n\t\t\t\tconst newHeight = 125 + $('.TimelinePage__Filters').outerHeight();\r\n\t\t\t\t//$('.LineTimelineTitle').css('top', newHeight + 'px');\r\n\t\t\t\tdocument.documentElement.style.setProperty('--line-title-top', newHeight + 'px');\r\n\t\t\t};\r\n\r\n\t\t\tconst resizeObserver = new ResizeObserver(() => {\r\n\t\t\t\tupdateLineTimelineTitlePosition();\r\n\t\t\t});\r\n\r\n\t\t\tconst $filtersContainer = $('.TimelinePage__Filters');\r\n\t\t\tif($filtersContainer){\r\n\t\t\t\tresizeObserver.observe($filtersContainer[0]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (config.SelectType === 'TagMultiple') {\r\n\t\t\tSelect2Options.tags = true;\r\n\t\t\tSelect2Options.containerCssClass = 'tagSystem';\r\n\t\t\tSelect2Options.dropdownCssClass = 'tagSystem';\r\n\t\t\tSelect2Options.createTag = function (params) {\r\n\t\t\t\tvar term = $.trim(params.term);\r\n\t\t\t\tif (term === '') {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: '#' + term,\r\n\t\t\t\t\ttext: term,\r\n\t\t\t\t\tnewTag: true,\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (config.HasSearch === 'False') {\r\n\t\t\tSelect2Options.minimumResultsForSearch = -1;\r\n\t\t}\r\n\r\n\t\t$WidgetIdentifier.select2(Select2Options);\r\n\r\n\t\tif (config.OnChange) {\r\n\t\t\t$WidgetIdentifier.on('change', config.OnChange);\r\n\t\t}\r\n\r\n\t\tif (config.SelectType === 'Checkbox') {\r\n\t\t\t$WidgetIdentifier.on('select2:select', function (e) {\r\n\t\t\t\tif (e.params.data.id === 'All') {\r\n\t\t\t\t\tvar selectedItems = [];\r\n\t\t\t\t\tvar allOptions = $WidgetIdentifier.find('option');\r\n\t\t\t\t\tallOptions.each(function () {\r\n\t\t\t\t\t\tselectedItems.push($(this).val());\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$WidgetIdentifier.select2('destroy');\r\n\t\t\t\t\t$WidgetIdentifier.val(selectedItems).trigger('change');\r\n\t\t\t\t\t$WidgetIdentifier.select2(Select2Options);\r\n\t\t\t\t\t$WidgetIdentifier.select2('open');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar selectedOptions = $WidgetIdentifier.find('option:selected').length;\r\n\t\t\t\t\tvar totalOptions = $WidgetIdentifier.find('option').length;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tselectedOptions === totalOptions - 1 &&\r\n\t\t\t\t\t\t$WidgetIdentifier.find('option:selected:first-child').length === 0\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tvar selectedItems = [];\r\n\t\t\t\t\t\tvar allOptions = $WidgetIdentifier.find('option');\r\n\t\t\t\t\t\tallOptions.each(function () {\r\n\t\t\t\t\t\t\tselectedItems.push($(this).val());\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t$WidgetIdentifier.select2('destroy');\r\n\t\t\t\t\t\t$WidgetIdentifier.val(selectedItems).trigger('change');\r\n\t\t\t\t\t\t$WidgetIdentifier.select2(Select2Options);\r\n\t\t\t\t\t\t$WidgetIdentifier.select2('open');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$WidgetIdentifier.on('select2:unselect', function (e) {\r\n\t\t\t\tif (e.params.data.id === 'All') {\r\n\t\t\t\t\t$WidgetIdentifier.find('option').removeAttr('selected');\r\n\t\t\t\t\t$WidgetIdentifier.select2('destroy');\r\n\t\t\t\t\t$WidgetIdentifier.select2(Select2Options);\r\n\t\t\t\t\t$WidgetIdentifier.select2('open');\r\n\t\t\t\t\t$WidgetIdentifier.val('').trigger('change');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$WidgetIdentifier.find('option:first-child').removeAttr('selected');\r\n\t\t\t\t\t$WidgetIdentifier.select2(Select2Options);\r\n\t\t\t\t\t$WidgetIdentifier.select2('open');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else if (config.SelectType === 'Select2') {\r\n\t\t\t$WidgetIdentifier.on('select2:select', function (e) {\r\n\t\t\t\tif (e.target.selectedIndex !== 0) {\r\n\t\t\t\t\t$WidgetIdentifier.parent().addClass('SelectSystemFilter-Selected');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$WidgetIdentifier.parent().removeClass('SelectSystemFilter-Selected');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n};\r\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/select-system/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/spinner-vertical/scripts.js":
/*!*************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/spinner-vertical/scripts.js ***!
  \*************************************************************************/
/***/ (function() {

eval("/* Component SpinnerVertical */\r\n(function($, window, document, SapphireWidgets) {\r\n\tconst create = function(config) {\r\n\t\t$(document).ready(function() {\r\n\t\t\tconst $minusVertical = $(`#${config.widgetId}`).find('.MinusVertical');\r\n\t\t\tconst $inputSpinner = $(`#${config.widgetId} .SpinnerInputVertical input`);\r\n\r\n\t\t\t$inputSpinner.on('blur keyup input', function(event) {\r\n\t\t\t\tconst currentInputValue = $inputSpinner.val();\r\n\r\n\t\t\t\tif (config.numberList && event.type === 'blur') {\r\n\t\t\t\t\tconst inputValueInt = parseInt(currentInputValue);\r\n\t\t\t\t\tconst arrayToSpin = config.numberList;\r\n\t\t\t\t\tconst $errorMessage = $(`#${config.widgetId} .SpinnerErrorMessage`);\r\n\r\n\t\t\t\t\tif (config.hideErrorMessage == true && (isNaN(inputValueInt) || inputValueInt == 0))\r\n\t\t\t\t\t\t$errorMessage.css('display', 'none' );\r\n\t\t\t\t\t\telse if(arrayToSpin.indexOf(inputValueInt) === -1) {\r\n\t\t\t\t\t\t$errorMessage.css('display', 'block' );\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$errorMessage.css('display', 'none' );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (currentInputValue < config.minValue) $minusVertical.addClass('DisabledSpin');\r\n\t\t\t\telse $minusVertical.removeClass('DisabledSpin');\r\n\t\t\t});\r\n\r\n\t\t\tif ($inputSpinner.val() <= config.minValue) {\r\n\t\t\t\t$minusVertical.addClass('DisabledSpin');\r\n\t\t\t}\r\n\r\n\t\t\tif (config.numberList && $inputSpinner.val() === '') {\r\n\t\t\t\tlet currentNumber = 0;\r\n\t\t\t\tconst arrayToSpin = config.numberList.split(',');\r\n\r\n\t\t\t\t$inputSpinner.val(arrayToSpin[currentNumber]);\r\n\t\t\t\t$minusVertical.addClass('DisabledSpin');\r\n\t\t\t}\r\n\r\n\t\t\tif (config.isCursorOnFocus) {\r\n\t\t\t\t$('body').on('focus', `#${config.inputID} input`, function() {\r\n\t\t\t\t\tvar that = this;\r\n\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tthat.focus();\r\n\t\t\t\t\t\tvar val = that.value;\r\n\t\t\t\t\t\tthat.value = '';\r\n\t\t\t\t\t\tthat.value = val;\r\n\t\t\t\t\t}, 1);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (config.isInputEmpty) {\r\n\t\t\t\t$inputSpinner.attr('value', '');\r\n\t\t\t\t$minusVertical.addClass('DisabledSpin');\r\n\t\t\t} else {\r\n\t\t\t\t$inputSpinner.blur();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst increment = (elementId, minValue, maxValue, triggerOnChange, triggerOnInput, listTospin = []) => {\r\n\t\tconst $spinner = $(elementId);\r\n\t\tlet $input = $spinner.find('input[type=\"text\"], input[type=\"number\"]').first();\r\n\r\n\t\tvar forceInteger = $(elementId).data('forceinteger') === 'True' ? true : false;\r\n\t\tvar currentValue = parseFloat($input.val());\r\n\t\tvar incrementUnit = 1;\r\n\t\tvar isDecimals = currentValue % 1 != 0;\r\n\t\tvar arraytospin = listTospin;\r\n\r\n\t\tconst $minusVertical = $(elementId).find('.MinusVertical');\r\n\t\tconst $plusVertical = $(elementId).find('.PlusVertical');\r\n\r\n\t\t$minusVertical.removeClass('DisabledSpin');\r\n\r\n\t\tif (arraytospin.length) {\r\n\t\t\tvar currentPosition = arraytospin.indexOf(parseInt($input.val()));\r\n\t\t\tvar maximumToSpin = arraytospin.lastIndexOf(arraytospin.slice(-1)[0]);\r\n\r\n\t\t\t$plusVertical.removeClass('DisabledSpin');\r\n\r\n\t\t\tif (maximumToSpin - 1 === currentPosition) {\r\n\t\t\t\tcurrentPosition = currentPosition + 1;\r\n\t\t\t\t$input.val(arraytospin[currentPosition]);\r\n\r\n\t\t\t\tif (triggerOnChange) $input.trigger('change');\r\n\t\t\t\tif (triggerOnInput) $input.trigger('input');\r\n\t\t\t} else if (maximumToSpin === currentPosition) {\r\n\t\t\t\tcurrentPosition = currentPosition % maximumToSpin;\r\n\t\t\t\t$input.val(arraytospin[currentPosition]);\r\n\r\n\t\t\t\ttriggerEvents($input, triggerOnChange, triggerOnInput);\r\n\t\t\t} else {\r\n\t\t\t\tcurrentPosition = (currentPosition + 1) % maximumToSpin;\r\n\t\t\t\t$input.val(arraytospin[currentPosition]);\r\n\r\n\t\t\t\ttriggerEvents($input, triggerOnChange, triggerOnInput);\r\n\t\t\t}\r\n\r\n\t\t\tif (currentPosition === maximumToSpin) $plusVertical.addClass('DisabledSpin');\r\n\t\t\tif (currentPosition === 0) $minusVertical.addClass('DisabledSpin');\r\n\r\n\t\t\t$spinner.find('.SpinnerErrorMessage').css('display', 'none');\r\n\t\t} else {\r\n\t\t\tif (parseFloat(currentValue) < minValue) {\r\n\t\t\t\t$minusVertical.addClass('DisabledSpin');\r\n\t\t\t} else {\r\n\t\t\t\t$minusVertical.removeClass('DisabledSpin');\r\n\t\t\t}\r\n\r\n\t\t\tif (!forceInteger && isDecimals) incrementUnit = parseFloat(0.1);\r\n\r\n\t\t\tif (currentValue === undefined || currentValue === '' || isNaN(parseFloat(currentValue))) {\r\n\t\t\t\t$input.val(minValue);\r\n\r\n\t\t\t\ttriggerEvents($input, triggerOnChange, triggerOnInput);\r\n\t\t\t} else {\r\n\t\t\t\tif (parseFloat(currentValue) < maxValue) {\r\n\t\t\t\t\tif (currentValue === 0 && !forceInteger) incrementUnit = parseFloat(0.1);\r\n\r\n\t\t\t\t\t$input.val(parseFloat((currentValue + incrementUnit).toFixed(1)));\r\n\r\n\t\t\t\t\ttriggerEvents($input, triggerOnChange, triggerOnInput);\r\n\r\n\t\t\t\t\t$minusVertical.removeAttr('disabled');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$plusVertical.attr('disabled', 'disabled');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcheckDisabledStatus(elementId, parseFloat($input.val()), minValue, maxValue);\r\n\t\t}\r\n\t};\r\n\r\n\tconst decrement = (elementId, minValue, maxValue, triggerOnChange, triggerOnInput, listTospin = []) => {\r\n\t\tconst $spinner = $(elementId);\r\n\t\tconst $input = $spinner.find('input[type=\"text\"], input[type=\"number\"]').first();\r\n\r\n\t\tlet forceInteger = $(elementId).data('forceinteger') === 'True' ? true : false;\r\n\t\tlet currentValue = parseFloat($input.val());\r\n\t\tlet incrementUnit = 1;\r\n\t\tlet isDecimals = currentValue % 1 != 0;\r\n\t\tlet arraytospin = listTospin;\r\n\r\n\t\tconst $minusVertical = $(elementId).find('.MinusVertical');\r\n\t\tconst $plusVertical = $(elementId).find('.PlusVertical');\r\n\r\n\t\tif (arraytospin.length) {\r\n\t\t\tlet currentPosition = arraytospin.indexOf(parseInt($input.val()));\r\n\t\t\tlet maximumToSpin = arraytospin.lastIndexOf(arraytospin.slice(-1)[0]);\r\n\r\n\t\t\tif (currentPosition == 0) {\r\n\t\t\t\t$input.val(arraytospin[maximumToSpin]);\r\n\r\n\t\t\t\tif (triggerOnChange) $input.trigger('change');\r\n\t\t\t\tif (triggerOnInput) $input.trigger('input');\r\n\t\t\t} else {\r\n\t\t\t\tcurrentPosition = (currentPosition - 1) % maximumToSpin;\r\n\t\t\t\t$input.val(arraytospin[currentPosition]);\r\n\r\n\t\t\t\ttriggerEvents($input, triggerOnChange, triggerOnInput);\r\n\t\t\t}\r\n\r\n\t\t\t$spinner.find('.SpinnerErrorMessage').css('display', 'none');\r\n\t\t} else {\r\n\t\t\tif (!forceInteger && isDecimals) incrementUnit = parseFloat(0.1);\r\n\r\n\t\t\tif (currentValue === undefined || currentValue === '' || isNaN(parseFloat(currentValue))) {\r\n\t\t\t\t$input.val(minValue);\r\n\r\n\t\t\t\ttriggerEvents($input, triggerOnChange, triggerOnInput);\r\n\t\t\t} else {\r\n\t\t\t\tif (parseFloat(currentValue) > minValue) {\r\n\t\t\t\t\tif (currentValue === 1 && !forceInteger) incrementUnit = parseFloat(0.1);\r\n\r\n\t\t\t\t\t$input.val(parseFloat((currentValue - incrementUnit).toFixed(1)));\r\n\r\n\t\t\t\t\ttriggerEvents($input, triggerOnChange, triggerOnInput);\r\n\r\n\t\t\t\t\t$plusVertical.removeAttr('disabled');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$minusVertical.attr('disabled', 'disabled');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcheckDisabledStatus(elementId, parseFloat($input.val()), minValue, maxValue);\r\n\t\t}\r\n\t};\r\n\r\n\tconst triggerEvents = (input, triggerOnChange, triggerOnInput) => {\r\n\t\tif (triggerOnChange) input.trigger('change');\r\n\t\tif (triggerOnInput) input.trigger('input');\r\n\t};\r\n\r\n\tconst checkDisabledStatus = (elementId, valueToCheck, minValue, maxValue) => {\r\n\t\tif (valueToCheck <= minValue) {\r\n\t\t\t$(elementId)\r\n\t\t\t\t.find('a.MinusVertical')\r\n\t\t\t\t.attr('disabled', 'disabled');\r\n\t\t} else {\r\n\t\t\t$(elementId)\r\n\t\t\t\t.find('a.MinusVertical')\r\n\t\t\t\t.removeAttr('disabled');\r\n\t\t}\r\n\t\tif (valueToCheck >= maxValue) {\r\n\t\t\t$(elementId)\r\n\t\t\t\t.find('a.PlusVertical')\r\n\t\t\t\t.attr('disabled', 'disabled');\r\n\t\t} else {\r\n\t\t\t$(elementId)\r\n\t\t\t\t.find('a.PlusVertical')\r\n\t\t\t\t.removeAttr('disabled');\r\n\t\t}\r\n\t};\r\n\r\n\tSapphireWidgets.SpinnerVertical = {\r\n\t\tcreate,\r\n\t\tincrement,\r\n\t\tdecrement,\r\n\t};\r\n})(jQuery, window, document, SapphireWidgets);\r\n\n\n//# sourceURL=webpack://sapphire/./src/components/05-components/v3-pat/spinner-vertical/scripts.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/backoffice/scripts.js");
/******/ 	
/******/ })()
;